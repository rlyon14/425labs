 LINE  | ADDRESS  | HEX DUMP                  | ASSEMBLY
-------|----------|---------------------------|----------------------------
     1 |          |                           |         CPU     8086
     2 |          |                           |         ORG     0h
     3 |          |                           | InterruptVectorTable:
     4 |          |                           |         ; Internal x86 Interrupts:
     5 | 00000000 | 00000000                  |         dd      0 ; Reserved (Div err)  ; Int 00h
     6 | 00000004 | 00000000                  |         dd      0 ; Reserved (Step)     ; Int 01h
     7 | 00000008 | 00000000                  |         dd      0 ; Reserved (NMI)      ; Int 02h
     8 | 0000000C | 00000000                  |         dd      0 ; Reserved (Break)    ; Int 03h
     9 | 00000010 | 00000000                  |         dd      0 ; Reserved (Overflow) ; Int 04h
    10 | 00000014 | 00000000                  |         dd      0                       ; Int 05h
    11 | 00000018 | 00000000                  |         dd      0                       ; Int 06h
    12 | 0000001C | 00000000                  |         dd      0                       ; Int 07h
    13 |          |                           |         ; Hardware Interrupts:
    14 | 00000020 | [C8080000]                |         dd      isr_reset ; Reset               ; Int 08h (IRQ 0)
    15 | 00000024 | [F2080000]                |         dd      isr_tick ; Tick                	; Int 09h (IRQ 1)
    16 | 00000028 | [D0080000]                |         dd      isr_keypress 			; Int 0Ah (IRQ 2)
    17 | 0000002C | [68090000]                |         dd      isr_simptris_gameover 		; Simptris Game Over  ; Int 0Bh (IRQ 3)
    18 | 00000030 | [47090000]                |         dd      isr_simptris_newpeice 		; Simptris New Piece  ; Int 0Ch (IRQ 4)
    19 | 00000034 | [25090000]                |         dd      isr_simptris_recievedCmd 	; Simptris Received   ; Int 0Dh (IRQ 5)
    20 | 00000038 | [1E090000]                |         dd      isr_simptris_touchdown 		; Simptris Touchdown  ; Int 0Eh (IRQ 6)
    21 | 0000003C | [13090000]                |         dd      isr_simptris_lineclear 		; Simptris Clear      ; Int 0Fh (IRQ 7)
    22 |          |                           |         ; Software Interrupts:
    23 | 00000040 | 00000000                  |         dd      0 ; Reserved (PC BIOS)  ; Int 10h
    24 | 00000044 | 00000000                  |         dd      0                       ; Int 11h
    25 | 00000048 | 00000000                  |         dd      0                       ; Int 12h
    26 | 0000004C | 00000000                  |         dd      0                       ; Int 13h
    27 | 00000050 | 00000000                  |         dd      0                       ; Int 14h
    28 | 00000054 | 00000000                  |         dd      0                       ; Int 15h
    29 | 00000058 | 00000000                  |         dd      0                       ; Int 16h
    30 | 0000005C | 00000000                  |         dd      0                       ; Int 17h
    31 | 00000060 | 00000000                  |         dd      0                       ; Int 18h
    32 | 00000064 | 00000000                  |         dd      0                       ; Int 19h
    33 | 00000068 | 00000000                  |         dd      0                       ; Int 1Ah
    34 | 0000006C | 00000000                  |         dd      0                       ; Int 1Bh
    35 | 00000070 | 00000000                  |         dd      0                       ; Int 1Ch
    36 | 00000074 | 00000000                  |         dd      0                       ; Int 1Dh
    37 | 00000078 | 00000000                  |         dd      0                       ; Int 1Eh
    38 | 0000007C | 00000000                  |         dd      0                       ; Int 1Fh
    39 | 00000080 | 00000000                  |         dd      0                       ; Int 20h
    40 | 00000084 | 00000000                  |         dd      0 ; Reserved (DOS)      ; Int 21h
    41 | 00000088 | 00000000                  |         dd      0 ; Simptris Services   ; Int 22h
    42 | 0000008C | 00000000                  |         dd      0                       ; Int 23h
    43 | 00000090 | 00000000                  |         dd      0                       ; Int 24h
    44 | 00000094 | 00000000                  |         dd      0                       ; Int 25h
    45 | 00000098 | 00000000                  |         dd      0                       ; Int 26h
    46 | 0000009C | 00000000                  |         dd      0                       ; Int 27h
    47 | 000000A0 | 00000000                  |         dd      0                       ; Int 28h
    48 | 000000A4 | 00000000                  |         dd      0                       ; Int 29h
    49 | 000000A8 | 00000000                  |         dd      0                       ; Int 2Ah
    50 | 000000AC | 00000000                  |         dd      0                       ; Int 2Bh
    51 | 000000B0 | 00000000                  |         dd      0                       ; Int 2Ch
    52 | 000000B4 | 00000000                  |         dd      0                       ; Int 2Dh
    53 | 000000B8 | 00000000                  |         dd      0                       ; Int 2Eh
    54 | 000000BC | 00000000                  |         dd      0                       ; Int 2Fh
    55 |          |                           | KeyBuffer:                              ; Address 0xC0
    56 | 000000C0 | 0000                      |         dw      0
    57 |          |                           | NewPieceType:                           ; Address 0xC2
    58 | 000000C2 | 0000                      |         dw      0
    59 |          |                           | NewPieceID:                             ; Address 0xC4
    60 | 000000C4 | 0000                      |         dw      0
    61 |          |                           | NewPieceOrientation:                    ; Address 0xC6
    62 | 000000C6 | 0000                      |         dw      0
    63 |          |                           | NewPieceColumn:                         ; Address 0xC8
    64 | 000000C8 | 0000                      |         dw      0
    65 |          |                           | TouchdownID:                            ; Address 0xCA
    66 | 000000CA | 0000                      | 	dw	0
    67 |          |                           | ScreenBitMap0:                          ; Address 0xCC
    68 | 000000CC | 0000                      |         dw      0
    69 |          |                           | ScreenBitMap1:
    70 | 000000CE | 0000                      |         dw      0
    71 |          |                           | ScreenBitMap2:
    72 | 000000D0 | 0000                      |         dw      0
    73 |          |                           | ScreenBitMap3:
    74 | 000000D2 | 0000                      |         dw      0
    75 |          |                           | ScreenBitMap4:
    76 | 000000D4 | 0000                      |         dw      0
    77 |          |                           | ScreenBitMap5:
    78 | 000000D6 | 0000                      |         dw      0
    79 | 000000D8 | 00<rept>                  | TIMES   100h-($-$$) db  0               ; Fill up to (but not including) address 100h with 0
    80 | 00000100 | E92F1E                    | 	jmp	main
    81 |          |                           | ; This file contains support routines for 32-bit on the 8086.
    82 |          |                           | ; It is intended for use code generated by the C86 compiler.
    83 |          |                           | ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
    84 |          |                           | SR_asldiv:			; l1 /= l2
    85 | 00000103 | 55                        | 	push	bp
    86 | 00000104 | 89E5                      | 	mov	bp,sp
    87 | 00000106 | 53                        | 	push	bx
    88 | 00000107 | 8B5E04                    | 	mov	bx,[bp+4]	; Get address of l1	(was push3)
    89 | 0000010A | FF7608                    | 	push	word [bp+8]	; Push hi l2		(was push1)
    90 | 0000010D | FF7606                    | 	push	word [bp+6]	; Push lo l2		(was push2)
    91 | 00000110 | FF7702                    | 	push	word [bx+2]	; Push hi l1
    92 | 00000113 | FF37                      | 	push	word [bx]	; Push lo l1
    93 | 00000115 | E83D01                    | 	call	SR_ldiv
    94 | 00000118 | 8B5E04                    | 	mov	bx,[bp+4]	; Restore l1 address
    95 | 0000011B | 895702                    | 	mov	[bx+2],dx	; Store result
    96 | 0000011E | 8907                      | 	mov	[bx],ax
    97 | 00000120 | 5B                        | 	pop	bx
    98 | 00000121 | 5D                        | 	pop	bp
    99 | 00000122 | C3                        | 	ret
   100 |          |                           | SR_aslmod:			; l1 %= l2
   101 | 00000123 | 55                        | 	push	bp
   102 | 00000124 | 89E5                      | 	mov	bp,sp
   103 | 00000126 | 53                        | 	push	bx
   104 | 00000127 | 8B5E04                    | 	mov	bx,[bp+4]	; Get address of l1	(was push3)
   105 | 0000012A | FF7608                    | 	push	word [bp+8]	; Push hi l2		(was push1)
   106 | 0000012D | FF7606                    | 	push	word [bp+6]	; Push lo l2		(was push2)
   107 | 00000130 | FF7702                    | 	push	word [bx+2]	; Push hi l1
   108 | 00000133 | FF37                      | 	push	word [bx]	; Push lo l1
   109 | 00000135 | E82C01                    | 	call	SR_lmod
   110 | 00000138 | 8B5E04                    | 	mov	bx,[bp+4]	; Restore l1 address
   111 | 0000013B | 895702                    | 	mov	[bx+2],dx	; Store result
   112 | 0000013E | 8907                      | 	mov	[bx],ax
   113 | 00000140 | 5B                        | 	pop	bx
   114 | 00000141 | 5D                        | 	pop	bp
   115 | 00000142 | C3                        | 	ret
   116 |          |                           | SR_aslmul:			; l1 *= l2
   117 | 00000143 | 55                        | 	push	bp
   118 | 00000144 | 89E5                      | 	mov	bp,sp
   119 | 00000146 | 53                        | 	push	bx
   120 | 00000147 | 8B5E04                    | 	mov	bx,[bp+4]	; Get address of l1	(was push3)
   121 | 0000014A | FF7608                    | 	push	word [bp+8]	; Push hi l2		(was push1)
   122 | 0000014D | FF7606                    | 	push	word [bp+6]	; Push lo l2		(was push2)
   123 | 00000150 | FF7702                    | 	push	word [bx+2]	; Push hi l1
   124 | 00000153 | FF37                      | 	push	word [bx]	; Push lo l1
   125 | 00000155 | E84002                    | 	call	SR_lmul
   126 | 00000158 | 83C408                    | 	add	sp,8
   127 | 0000015B | 8B5E04                    | 	mov	bx,[bp+4]	; Restore l1 address
   128 | 0000015E | 895702                    | 	mov	[bx+2],dx	; Store result
   129 | 00000161 | 8907                      | 	mov	[bx],ax
   130 | 00000163 | 5B                        | 	pop	bx
   131 | 00000164 | 5D                        | 	pop	bp
   132 | 00000165 | C3                        | 	ret
   133 |          |                           | SR_aslshl:			; l1 <<= l2
   134 | 00000166 | 55                        | 	push	bp
   135 | 00000167 | 89E5                      | 	mov	bp,sp
   136 | 00000169 | 53                        | 	push	bx
   137 | 0000016A | 8B5E04                    | 	mov	bx,[bp+4]	; Get address of l1	(was push3)
   138 | 0000016D | FF7608                    | 	push	word [bp+8]	; Push hi l2		(was push1)
   139 | 00000170 | FF7606                    | 	push	word [bp+6]	; Push lo l2		(was push2)
   140 | 00000173 | FF7702                    | 	push	word [bx+2]	; Push hi l1
   141 | 00000176 | FF37                      | 	push	word [bx]	; Push lo l1
   142 | 00000178 | E88801                    | 	call	SR_lshl
   143 | 0000017B | 83C408                    | 	add	sp,8
   144 | 0000017E | 8B5E04                    | 	mov	bx,[bp+4]	; Restore l1 address
   145 | 00000181 | 895702                    | 	mov	[bx+2],dx	; Store result
   146 | 00000184 | 8907                      | 	mov	[bx],ax
   147 | 00000186 | 5B                        | 	pop	bx
   148 | 00000187 | 5D                        | 	pop	bp
   149 | 00000188 | C3                        | 	ret
   150 |          |                           | SR_aslshr:			; l1 >>= l2
   151 | 00000189 | 55                        | 	push	bp
   152 | 0000018A | 89E5                      | 	mov	bp,sp
   153 | 0000018C | 53                        | 	push	bx
   154 | 0000018D | 8B5E04                    | 	mov	bx,[bp+4]	; Get address of l1	(was push3)
   155 | 00000190 | FF7608                    | 	push	word [bp+8]	; Push hi l2		(was push1)
   156 | 00000193 | FF7606                    | 	push	word [bp+6]	; Push lo l2		(was push2)
   157 | 00000196 | FF7702                    | 	push	word [bx+2]	; Push hi l1
   158 | 00000199 | FF37                      | 	push	word [bx]	; Push lo l1
   159 | 0000019B | E89701                    | 	call	SR_lshr
   160 | 0000019E | 83C408                    | 	add	sp,8
   161 | 000001A1 | 8B5E04                    | 	mov	bx,[bp+4]	; Restore l1 address
   162 | 000001A4 | 895702                    | 	mov	[bx+2],dx	; Store result
   163 | 000001A7 | 8907                      | 	mov	[bx],ax
   164 | 000001A9 | 5B                        | 	pop	bx
   165 | 000001AA | 5D                        | 	pop	bp
   166 | 000001AB | C3                        | 	ret
   167 |          |                           | 
   168 |          |                           | 
   169 |          |                           | SR_asuldiv:			; u1 /= u2
   170 | 000001AC | 55                        | 	push	bp
   171 | 000001AD | 89E5                      | 	mov	bp,sp
   172 | 000001AF | 53                        | 	push	bx
   173 | 000001B0 | 8B5E04                    | 	mov	bx,[bp+4]	; Get address of u1	(was push3)
   174 | 000001B3 | FF7608                    | 	push	word [bp+8]	; Push hi u2		(was push1)
   175 | 000001B6 | FF7606                    | 	push	word [bp+6]	; Push lo u2		(was push2)
   176 | 000001B9 | FF7702                    | 	push	word [bx+2]	; Push hi u1
   177 | 000001BC | FF37                      | 	push	word [bx]	; Push lo u1
   178 | 000001BE | E89B00                    | 	call	SR_uldiv
   179 | 000001C1 | 8B5E04                    | 	mov	bx,[bp+4]	; Restore u1 address
   180 | 000001C4 | 895702                    | 	mov	[bx+2],dx	; Store result
   181 | 000001C7 | 8907                      | 	mov	[bx],ax
   182 | 000001C9 | 5B                        | 	pop	bx
   183 | 000001CA | 5D                        | 	pop	bp
   184 | 000001CB | C3                        | 	ret
   185 |          |                           | SR_asilmod:			; u1 %= u2
   186 | 000001CC | 55                        | 	push	bp
   187 | 000001CD | 89E5                      | 	mov	bp,sp
   188 | 000001CF | 53                        | 	push	bx
   189 | 000001D0 | 8B5E04                    | 	mov	bx,[bp+4]	; Get address of u1	(was push3)
   190 | 000001D3 | FF7608                    | 	push	word [bp+8]	; Push hi u2		(was push1)
   191 | 000001D6 | FF7606                    | 	push	word [bp+6]	; Push lo u2		(was push2)
   192 | 000001D9 | FF7702                    | 	push	word [bx+2]	; Push hi u1
   193 | 000001DC | FF37                      | 	push	word [bx]	; Push lo u1
   194 | 000001DE | E88B00                    | 	call	SR_ilmod
   195 | 000001E1 | 8B5E04                    | 	mov	bx,[bp+4]	; Restore u1 address
   196 | 000001E4 | 895702                    | 	mov	[bx+2],dx	; Store result
   197 | 000001E7 | 8907                      | 	mov	[bx],ax
   198 | 000001E9 | 5B                        | 	pop	bx
   199 | 000001EA | 5D                        | 	pop	bp
   200 | 000001EB | C3                        | 	ret
   201 |          |                           | SR_asulmul:			; u1 *= u2
   202 | 000001EC | 55                        | 	push	bp
   203 | 000001ED | 89E5                      | 	mov	bp,sp
   204 | 000001EF | 53                        | 	push	bx
   205 | 000001F0 | 8B5E04                    | 	mov	bx,[bp+4]	; Get address of u1	(was push3)
   206 | 000001F3 | FF7608                    | 	push	word [bp+8]	; Push hi u2		(was push1)
   207 | 000001F6 | FF7606                    | 	push	word [bp+6]	; Push lo u2		(was push2)
   208 | 000001F9 | FF7702                    | 	push	word [bx+2]	; Push hi u1
   209 | 000001FC | FF37                      | 	push	word [bx]	; Push lo u1
   210 | 000001FE | E89701                    | 	call	SR_ulmul
   211 | 00000201 | 83C408                    | 	add	sp,8
   212 | 00000204 | 8B5E04                    | 	mov	bx,[bp+4]	; Restore u1 address
   213 | 00000207 | 895702                    | 	mov	[bx+2],dx	; Store result
   214 | 0000020A | 8907                      | 	mov	[bx],ax
   215 | 0000020C | 5B                        | 	pop	bx
   216 | 0000020D | 5D                        | 	pop	bp
   217 | 0000020E | C3                        | 	ret
   218 |          |                           | SR_asulshl:			; u1 << u2
   219 | 0000020F | 55                        | 	push	bp
   220 | 00000210 | 89E5                      | 	mov	bp,sp
   221 | 00000212 | 53                        | 	push	bx
   222 | 00000213 | 8B5E04                    | 	mov	bx,[bp+4]	; Get address of u1	(was push3)
   223 | 00000216 | FF7608                    | 	push	word [bp+8]	; Push hi u2		(was push1)
   224 | 00000219 | FF7606                    | 	push	word [bp+6]	; Push lo u2		(was push2)
   225 | 0000021C | FF7702                    | 	push	word [bx+2]	; Push hi u1
   226 | 0000021F | FF37                      | 	push	word [bx]	; Push lo u1
   227 | 00000221 | E8DF00                    | 	call	SR_ulshl
   228 | 00000224 | 83C408                    | 	add	sp,8
   229 | 00000227 | 8B5E04                    | 	mov	bx,[bp+4]	; Restore u1 address
   230 | 0000022A | 895702                    | 	mov	[bx+2],dx	; Store result
   231 | 0000022D | 8907                      | 	mov	[bx],ax
   232 | 0000022F | 5B                        | 	pop	bx
   233 | 00000230 | 5D                        | 	pop	bp
   234 | 00000231 | C3                        | 	ret
   235 |          |                           | SR_asulshr:			; u1 >> u2
   236 | 00000232 | 55                        | 	push	bp
   237 | 00000233 | 89E5                      | 	mov	bp,sp
   238 | 00000235 | 53                        | 	push	bx
   239 | 00000236 | 8B5E04                    | 	mov	bx,[bp+4]	; Get address of u1	(was push3)
   240 | 00000239 | FF7608                    | 	push	word [bp+8]	; Push hi u2		(was push1)
   241 | 0000023C | FF7606                    | 	push	word [bp+6]	; Push lo u2		(was push2)
   242 | 0000023F | FF7702                    | 	push	word [bx+2]	; Push hi u1
   243 | 00000242 | FF37                      | 	push	word [bx]	; Push lo u1
   244 | 00000244 | E81F01                    | 	call	SR_ulshr
   245 | 00000247 | 83C408                    | 	add	sp,8
   246 | 0000024A | 8B5E04                    | 	mov	bx,[bp+4]	; Restore u1 address
   247 | 0000024D | 895702                    | 	mov	[bx+2],dx	; Store result
   248 | 00000250 | 8907                      | 	mov	[bx],ax
   249 | 00000252 | 5B                        | 	pop	bx
   250 | 00000253 | 5D                        | 	pop	bp
   251 | 00000254 | C3                        | 	ret
   252 |          |                           | 
   253 |          |                           | 
   254 |          |                           | ; Main 32-bit routines begin here:
   255 |          |                           | 
   256 |          |                           | SR_ldiv:	; N_LDIV@
   257 | 00000255 | 59                        | 	pop    cx
   258 | 00000256 | 0E                        | 	push   cs
   259 | 00000257 | 51                        | 	push   cx
   260 |          |                           | 	; LDIV@
   261 | 00000258 | 31C9                      | 	xor    cx,cx
   262 | 0000025A | EB16                      | 	jmp    LSR_01
   263 |          |                           | SR_uldiv:	; N_LUDIV@
   264 | 0000025C | 59                        | 	pop    cx
   265 | 0000025D | 0E                        | 	push   cs
   266 | 0000025E | 51                        | 	push   cx
   267 |          |                           | 	; F_LUDIV@
   268 | 0000025F | B90100                    | 	mov    cx,0001
   269 | 00000262 | EB0E                      | 	jmp    LSR_01
   270 |          |                           | SR_lmod:	; N_LMOD@
   271 | 00000264 | 59                        | 	pop    cx
   272 | 00000265 | 0E                        | 	push   cs
   273 | 00000266 | 51                        | 	push   cx
   274 |          |                           | 	; F_LMOD@
   275 | 00000267 | B90200                    | 	mov    cx,0002
   276 | 0000026A | EB06                      | 	jmp    LSR_01
   277 |          |                           | SR_ilmod:	; N_LUMOD@
   278 | 0000026C | 59                        | 	pop    cx
   279 | 0000026D | 0E                        | 	push   cs
   280 | 0000026E | 51                        | 	push   cx
   281 |          |                           | 	; LUMOD@
   282 | 0000026F | B90300                    | 	mov    cx,0003
   283 |          |                           | LSR_01:
   284 | 00000272 | 55                        | 	push   bp
   285 | 00000273 | 56                        | 	push   si
   286 | 00000274 | 57                        | 	push   di
   287 | 00000275 | 89E5                      | 	mov    bp,sp
   288 | 00000277 | 89CF                      | 	mov    di,cx
   289 | 00000279 | 8B460A                    | 	mov    ax,[bp+0Ah]
   290 | 0000027C | 8B560C                    | 	mov    dx,[bp+0Ch]
   291 | 0000027F | 8B5E0E                    | 	mov    bx,[bp+0Eh]
   292 | 00000282 | 8B4E10                    | 	mov    cx,[bp+10h]
   293 | 00000285 | 09C9                      | 	or     cx,cx
   294 | 00000287 | 7508                      | 	jne    LSR_02
   295 | 00000289 | 09D2                      | 	or     dx,dx
   296 | 0000028B | 7469                      | 	je     LSR_10
   297 | 0000028D | 09DB                      | 	or     bx,bx
   298 | 0000028F | 7465                      | 	je     LSR_10
   299 |          |                           | LSR_02:
   300 | 00000291 | F7C70100                  | 	test   di,0001
   301 | 00000295 | 751C                      | 	jne    LSR_04
   302 | 00000297 | 09D2                      | 	or     dx,dx
   303 | 00000299 | 790A                      | 	jns    LSR_03
   304 | 0000029B | F7DA                      | 	neg    dx
   305 | 0000029D | F7D8                      | 	neg    ax
   306 | 0000029F | 83DA00                    | 	sbb    dx,0000
   307 | 000002A2 | 83CF0C                    | 	or     di,000Ch
   308 |          |                           | LSR_03:
   309 | 000002A5 | 09C9                      | 	or     cx,cx
   310 | 000002A7 | 790A                      | 	jns    LSR_04
   311 | 000002A9 | F7D9                      | 	neg    cx
   312 | 000002AB | F7DB                      | 	neg    bx
   313 | 000002AD | 83D900                    | 	sbb    cx,0000
   314 | 000002B0 | 83F704                    | 	xor    di,0004
   315 |          |                           | LSR_04:
   316 | 000002B3 | 89CD                      | 	mov    bp,cx
   317 | 000002B5 | B92000                    | 	mov    cx,0020h
   318 | 000002B8 | 57                        | 	push   di
   319 | 000002B9 | 31FF                      | 	xor    di,di
   320 | 000002BB | 31F6                      | 	xor    si,si
   321 |          |                           | LSR_05:
   322 | 000002BD | D1E0                      | 	shl    ax,1
   323 | 000002BF | D1D2                      | 	rcl    dx,1
   324 | 000002C1 | D1D6                      | 	rcl    si,1
   325 | 000002C3 | D1D7                      | 	rcl    di,1
   326 | 000002C5 | 39EF                      | 	cmp    di,bp
   327 | 000002C7 | 720B                      | 	jb     LSR_07
   328 | 000002C9 | 7704                      | 	ja     LSR_06
   329 | 000002CB | 39DE                      | 	cmp    si,bx
   330 | 000002CD | 7205                      | 	jb     LSR_07
   331 |          |                           | LSR_06:
   332 | 000002CF | 29DE                      | 	sub    si,bx
   333 | 000002D1 | 19EF                      | 	sbb    di,bp
   334 | 000002D3 | 40                        | 	inc    ax
   335 |          |                           | LSR_07:
   336 | 000002D4 | E2E7                      | 	loop   LSR_05
   337 | 000002D6 | 5B                        | 	pop    bx
   338 | 000002D7 | F7C30200                  | 	test   bx,0002
   339 | 000002DB | 7406                      | 	je     LSR_08
   340 | 000002DD | 89F0                      | 	mov    ax,si
   341 | 000002DF | 89FA                      | 	mov    dx,di
   342 | 000002E1 | D1EB                      | 	shr    bx,1
   343 |          |                           | LSR_08:
   344 | 000002E3 | F7C30400                  | 	test   bx,0004h
   345 | 000002E7 | 7407                      | 	je     LSR_09
   346 | 000002E9 | F7DA                      | 	neg    dx
   347 | 000002EB | F7D8                      | 	neg    ax
   348 | 000002ED | 83DA00                    | 	sbb    dx,0000
   349 |          |                           | LSR_09:
   350 | 000002F0 | 5F                        | 	pop    di
   351 | 000002F1 | 5E                        | 	pop    si
   352 | 000002F2 | 5D                        | 	pop    bp
   353 | 000002F3 | CA0800                    | 	retf   0008
   354 |          |                           | LSR_10:
   355 | 000002F6 | F7F3                      | 	div    bx
   356 | 000002F8 | F7C70200                  | 	test   di,0002
   357 | 000002FC | 7401                      | 	je     LSR_11
   358 | 000002FE | 92                        | 	xchg   dx,ax
   359 |          |                           | LSR_11:
   360 | 000002FF | 31D2                      | 	xor    dx,dx
   361 | 00000301 | EBED                      | 	jmp    LSR_09
   362 |          |                           | SR_lshl:	; N_LXLSH@
   363 |          |                           | SR_ulshl:
   364 |          |                           | 	; r = a << b
   365 | 00000303 | 5B                        | 	pop    bx
   366 | 00000304 | 0E                        | 	push   cs
   367 | 00000305 | 53                        | 	push   bx
   368 |          |                           | 
   369 | 00000306 | 55                        | 	push   bp
   370 | 00000307 | 89E5                      | 	mov    bp,sp
   371 |          |                           | 
   372 | 00000309 | 51                        | 	push   cx	; C86 doesn't expect use of cx or bx
   373 |          |                           | 
   374 | 0000030A | 8B4606                    | 	mov    ax, [bp+6]	; pop loword(a)
   375 | 0000030D | 8B5608                    | 	mov    dx, [bp+8]	; pop hiword(a)
   376 | 00000310 | 8B4E0A                    | 	mov    cx, [bp+10]	; pop word(b)
   377 |          |                           | 	
   378 |          |                           | 	; LXLSH@
   379 | 00000313 | 80F910                    | 	cmp    cl,10h
   380 | 00000316 | 7312                      | 	jnb    LSR_12
   381 | 00000318 | 89C3                      | 	mov    bx,ax
   382 | 0000031A | D3E0                      | 	shl    ax,cl
   383 | 0000031C | D3E2                      | 	shl    dx,cl
   384 | 0000031E | F6D9                      | 	neg    cl
   385 | 00000320 | 80C110                    | 	add    cl,10h
   386 | 00000323 | D3EB                      | 	shr    bx,cl
   387 | 00000325 | 09DA                      | 	or     dx,bx
   388 | 00000327 | 59                        | 	pop    cx
   389 | 00000328 | 5D                        | 	pop    bp
   390 | 00000329 | CB                        | 	retf
   391 |          |                           | LSR_12:
   392 | 0000032A | 80E910                    | 	sub    cl,10h
   393 | 0000032D | 92                        | 	xchg   dx,ax
   394 | 0000032E | 31C0                      | 	xor    ax,ax
   395 | 00000330 | D3E2                      | 	shl    dx,cl
   396 | 00000332 | 59                        | 	pop    cx
   397 | 00000333 | 5D                        | 	pop    bp
   398 | 00000334 | CB                        | 	retf
   399 |          |                           | SR_lshr:	; N_LXRSH@
   400 |          |                           | 	; r = a >> b
   401 | 00000335 | 5B                        | 	pop    bx
   402 | 00000336 | 0E                        | 	push   cs
   403 | 00000337 | 53                        | 	push   bx
   404 |          |                           | 
   405 | 00000338 | 55                        | 	push   bp
   406 | 00000339 | 89E5                      | 	mov    bp,sp
   407 |          |                           | 
   408 | 0000033B | 51                        | 	push   cx	; C86 doesn't expect use of cx or bx
   409 |          |                           | 
   410 | 0000033C | 8B4606                    |         mov    ax, [bp+6]	; pop loword(a)
   411 | 0000033F | 8B5608                    | 	mov    dx, [bp+8]	; pop hiword(a)
   412 | 00000342 | 8B4E0A                    | 	mov    cx, [bp+10]	; pop word(b)
   413 |          |                           | 	
   414 |          |                           | 	; LXRSH@
   415 | 00000345 | 80F910                    | 	cmp    cl,10h
   416 | 00000348 | 7312                      | 	jnb    LSR_13
   417 | 0000034A | 89D3                      | 	mov    bx,dx
   418 | 0000034C | D3E8                      | 	shr    ax,cl
   419 | 0000034E | D3FA                      | 	sar    dx,cl
   420 | 00000350 | F6D9                      | 	neg    cl
   421 | 00000352 | 80C110                    | 	add    cl,10h
   422 | 00000355 | D3E3                      | 	shl    bx,cl
   423 | 00000357 | 09D8                      | 	or     ax,bx
   424 | 00000359 | 59                        | 	pop    cx
   425 | 0000035A | 5D                        | 	pop    bp
   426 | 0000035B | CB                        | 	retf
   427 |          |                           | LSR_13:
   428 | 0000035C | 80E910                    | 	sub    cl,10h
   429 | 0000035F | 92                        | 	xchg   dx,ax
   430 | 00000360 | 99                        | 	cwd
   431 | 00000361 | D3F8                      | 	sar    ax,cl
   432 | 00000363 | 59                        | 	pop    cx
   433 | 00000364 | 5D                        | 	pop    bp
   434 | 00000365 | CB                        | 	retf
   435 |          |                           | SR_ulshr:	; N_LXURSH@
   436 |          |                           | 	; r = a >> b
   437 | 00000366 | 5B                        | 	pop    bx
   438 | 00000367 | 0E                        | 	push   cs
   439 | 00000368 | 53                        | 	push   bx
   440 |          |                           | 
   441 | 00000369 | 55                        | 	push   bp
   442 | 0000036A | 89E5                      | 	mov    bp,sp
   443 |          |                           | 
   444 | 0000036C | 51                        | 	push   cx	; C86 doesn't expect use of cx or bx
   445 |          |                           | 
   446 | 0000036D | 8B4606                    |         mov    ax, [bp+6]	; pop loword(a)
   447 | 00000370 | 8B5608                    | 	mov    dx, [bp+8]	; pop hiword(a)
   448 | 00000373 | 8B4E0A                    | 	mov    cx, [bp+10]	; pop word(b)
   449 |          |                           | 	
   450 |          |                           | 	; LXURSH@
   451 | 00000376 | 80F910                    | 	cmp    cl,10h
   452 | 00000379 | 7312                      | 	jnb    LSR_14
   453 | 0000037B | 89D3                      | 	mov    bx,dx
   454 | 0000037D | D3E8                      | 	shr    ax,cl
   455 | 0000037F | D3EA                      | 	shr    dx,cl
   456 | 00000381 | F6D9                      | 	neg    cl
   457 | 00000383 | 80C110                    | 	add    cl,10h
   458 | 00000386 | D3E3                      | 	shl    bx,cl
   459 | 00000388 | 09D8                      | 	or     ax,bx
   460 | 0000038A | 59                        | 	pop    cx
   461 | 0000038B | 5D                        | 	pop    bp
   462 | 0000038C | CB                        | 	retf
   463 |          |                           | LSR_14:
   464 | 0000038D | 80E910                    | 	sub    cl,10h
   465 | 00000390 | 92                        | 	xchg   dx,ax
   466 | 00000391 | 31D2                      | 	xor    dx,dx
   467 | 00000393 | D3E8                      | 	shr    ax,cl
   468 | 00000395 | 59                        | 	pop    cx
   469 | 00000396 | 5D                        | 	pop    bp
   470 | 00000397 | CB                        | 	retf
   471 |          |                           | SR_lmul:	; N_LXMUL@
   472 |          |                           | SR_ulmul:
   473 |          |                           | 	; r = a * b
   474 | 00000398 | 55                        | 	push   bp
   475 | 00000399 | 56                        | 	push   si
   476 | 0000039A | 89E5                      | 	mov    bp,sp
   477 |          |                           | 
   478 | 0000039C | 51                        | 	push   cx	; C86 doesn't expect use of cx or bx
   479 | 0000039D | 53                        | 	push   bx
   480 |          |                           | 
   481 | 0000039E | 8B5E06                    |         mov    bx, [bp+6]	; pop loword(a)
   482 | 000003A1 | 8B4E08                    | 	mov    cx, [bp+8]	; pop hiword(a)
   483 | 000003A4 | 8B460A                    | 	mov    ax, [bp+10]	; pop loword(b)
   484 | 000003A7 | 8B560C                    | 	mov    dx, [bp+12]	; pop hiword(b)
   485 |          |                           | 	
   486 | 000003AA | 96                        | 	xchg   si,ax
   487 | 000003AB | 92                        | 	xchg   dx,ax
   488 | 000003AC | 85C0                      | 	test   ax,ax
   489 | 000003AE | 7402                      | 	je     LSR_15
   490 | 000003B0 | F7E3                      | 	mul    bx
   491 |          |                           | LSR_15:
   492 | 000003B2 | E305                      | 	jcxz   LSR_16
   493 | 000003B4 | 91                        | 	xchg   cx,ax
   494 | 000003B5 | F7E6                      | 	mul    si
   495 | 000003B7 | 01C8                      | 	add    ax,cx
   496 |          |                           | LSR_16:
   497 | 000003B9 | 96                        | 	xchg   si,ax
   498 | 000003BA | F7E3                      | 	mul    bx
   499 | 000003BC | 01F2                      | 	add    dx,si
   500 | 000003BE | 5B                        | 	pop    bx
   501 | 000003BF | 59                        | 	pop    cx
   502 | 000003C0 | 5E                        | 	pop    si
   503 | 000003C1 | 5D                        | 	pop    bp
   504 | 000003C2 | C3                        | 	ret
   505 |          |                           | 
   506 |          |                           | ; Generated by c86 (BYU-NASM) 5.1 (beta) from clib.c
   507 |          |                           | 	CPU	8086
   508 | 000003C3 | 90                        | 	ALIGN	2
   509 | 000003C4 | E96B1B                    | 	jmp	main	; Jump to program start
   510 |          |                           | new_line:
   511 | 000003C7 | 0D0A24                    | 	db	13,10,36
   512 |          |                           | 	ALIGN	2
   513 |          |                           | signalEOI:
   514 | 000003CA | EB08                      | 	jmp	L_clib_1
   515 |          |                           | L_clib_2:
   516 | 000003CC | B020                      | 	mov	al, 0x20
   517 | 000003CE | E620                      | 	out	0x20, al
   518 | 000003D0 | 89EC                      | 	mov	sp, bp
   519 | 000003D2 | 5D                        | 	pop	bp
   520 | 000003D3 | C3                        | 	ret
   521 |          |                           | L_clib_1:
   522 | 000003D4 | 55                        | 	push	bp
   523 | 000003D5 | 89E5                      | 	mov	bp, sp
   524 | 000003D7 | EBF3                      | 	jmp	L_clib_2
   525 | 000003D9 | 90                        | 	ALIGN	2
   526 |          |                           | exit:
   527 | 000003DA | EB0B                      | 	jmp	L_clib_4
   528 |          |                           | L_clib_5:
   529 | 000003DC | B44C                      | 	mov	ah, 4Ch
   530 | 000003DE | 8A4604                    | 	mov	al, [bp+4]
   531 | 000003E1 | CD21                      | 	int	21h
   532 | 000003E3 | 89EC                      | 	mov	sp, bp
   533 | 000003E5 | 5D                        | 	pop	bp
   534 | 000003E6 | C3                        | 	ret
   535 |          |                           | L_clib_4:
   536 | 000003E7 | 55                        | 	push	bp
   537 | 000003E8 | 89E5                      | 	mov	bp, sp
   538 | 000003EA | EBF0                      | 	jmp	L_clib_5
   539 |          |                           | 	ALIGN	2
   540 |          |                           | print:
   541 | 000003EC | EB11                      | 	jmp	L_clib_7
   542 |          |                           | L_clib_8:
   543 | 000003EE | B440                      | 	mov	ah, 40h
   544 | 000003F0 | BB0100                    | 	mov	bx, 1
   545 | 000003F3 | 8B4E06                    | 	mov	cx, [bp+6]
   546 | 000003F6 | 8B5604                    | 	mov	dx, [bp+4]
   547 | 000003F9 | CD21                      | 	int	21h
   548 | 000003FB | 89EC                      | 	mov	sp, bp
   549 | 000003FD | 5D                        | 	pop	bp
   550 | 000003FE | C3                        | 	ret
   551 |          |                           | L_clib_7:
   552 | 000003FF | 55                        | 	push	bp
   553 | 00000400 | 89E5                      | 	mov	bp, sp
   554 | 00000402 | EBEA                      | 	jmp	L_clib_8
   555 |          |                           | 	ALIGN	2
   556 |          |                           | printChar:
   557 | 00000404 | EB0B                      | 	jmp	L_clib_10
   558 |          |                           | L_clib_11:
   559 | 00000406 | B402                      | 	mov	ah, 2
   560 | 00000408 | 8A5604                    | 	mov	dl, [bp+4]
   561 | 0000040B | CD21                      | 	int	21h
   562 | 0000040D | 89EC                      | 	mov	sp, bp
   563 | 0000040F | 5D                        | 	pop	bp
   564 | 00000410 | C3                        | 	ret
   565 |          |                           | L_clib_10:
   566 | 00000411 | 55                        | 	push	bp
   567 | 00000412 | 89E5                      | 	mov	bp, sp
   568 | 00000414 | EBF0                      | 	jmp	L_clib_11
   569 |          |                           | 	ALIGN	2
   570 |          |                           | printNewLine:
   571 | 00000416 | EB0B                      | 	jmp	L_clib_13
   572 |          |                           | L_clib_14:
   573 | 00000418 | B409                      | 	mov	ah, 9
   574 | 0000041A | BA[C703]                  | 	mov	dx, new_line
   575 | 0000041D | CD21                      | 	int	21h
   576 | 0000041F | 89EC                      | 	mov	sp, bp
   577 | 00000421 | 5D                        | 	pop	bp
   578 | 00000422 | C3                        | 	ret
   579 |          |                           | L_clib_13:
   580 | 00000423 | 55                        | 	push	bp
   581 | 00000424 | 89E5                      | 	mov	bp, sp
   582 | 00000426 | EBF0                      | 	jmp	L_clib_14
   583 |          |                           | 	ALIGN	2
   584 |          |                           | printString:
   585 | 00000428 | EB1C                      | 	jmp	L_clib_16
   586 |          |                           | L_clib_17:
   587 | 0000042A | 31F6                      | 	xor	si,si
   588 | 0000042C | 8B5E04                    | 	mov	bx, [bp+4]
   589 | 0000042F | EB01                      | 	jmp	printString2
   590 |          |                           | 	printString1:
   591 | 00000431 | 46                        | 	inc	si
   592 |          |                           | 	printString2:
   593 | 00000432 | 803800                    | 	cmp	byte [bx+si],0
   594 | 00000435 | 75FA                      | 	jne	printString1
   595 | 00000437 | 89DA                      | 	mov	dx, bx
   596 | 00000439 | 89F1                      | 	mov	cx, si
   597 | 0000043B | B440                      | 	mov	ah, 40h
   598 | 0000043D | BB0100                    | 	mov	bx, 1
   599 | 00000440 | CD21                      | 	int	21h
   600 | 00000442 | 89EC                      | 	mov	sp, bp
   601 | 00000444 | 5D                        | 	pop	bp
   602 | 00000445 | C3                        | 	ret
   603 |          |                           | L_clib_16:
   604 | 00000446 | 55                        | 	push	bp
   605 | 00000447 | 89E5                      | 	mov	bp, sp
   606 | 00000449 | 51                        | 	push	cx
   607 | 0000044A | EBDE                      | 	jmp	L_clib_17
   608 |          |                           | 	ALIGN	2
   609 |          |                           | printInt:
   610 | 0000044C | E99500                    | 	jmp	L_clib_19
   611 |          |                           | L_clib_20:
   612 | 0000044F | C746FE0000                | 	mov	word [bp-2], 0
   613 | 00000454 | C746FC1027                | 	mov	word [bp-4], 10000
   614 | 00000459 | 837E0400                  | 	cmp	word [bp+4], 0
   615 | 0000045D | 7D0F                      | 	jge	L_clib_21
   616 | 0000045F | C646F62D                  | 	mov	byte [bp-10], 45
   617 | 00000463 | FF46FE                    | 	inc	word [bp-2]
   618 | 00000466 | 8B4604                    | 	mov	ax, word [bp+4]
   619 | 00000469 | F7D8                      | 	neg	ax
   620 | 0000046B | 894604                    | 	mov	word [bp+4], ax
   621 |          |                           | L_clib_21:
   622 | 0000046E | 8B4604                    | 	mov	ax, word [bp+4]
   623 | 00000471 | 85C0                      | 	test	ax, ax
   624 | 00000473 | 7507                      | 	jne	L_clib_22
   625 | 00000475 | C746FC0100                | 	mov	word [bp-4], 1
   626 | 0000047A | EB19                      | 	jmp	L_clib_23
   627 |          |                           | L_clib_22:
   628 | 0000047C | EB0C                      | 	jmp	L_clib_25
   629 |          |                           | L_clib_24:
   630 | 0000047E | 8B46FC                    | 	mov	ax, word [bp-4]
   631 | 00000481 | 99                        | 	cwd
   632 | 00000482 | B90A00                    | 	mov	cx, 10
   633 | 00000485 | F7F9                      | 	idiv	cx
   634 | 00000487 | 8946FC                    | 	mov	word [bp-4], ax
   635 |          |                           | L_clib_25:
   636 | 0000048A | 8B4604                    | 	mov	ax, word [bp+4]
   637 | 0000048D | 99                        | 	cwd
   638 | 0000048E | F77EFC                    | 	idiv	word [bp-4]
   639 | 00000491 | 85C0                      | 	test	ax, ax
   640 | 00000493 | 74E9                      | 	je	L_clib_24
   641 |          |                           | L_clib_26:
   642 |          |                           | L_clib_23:
   643 | 00000495 | EB36                      | 	jmp	L_clib_28
   644 |          |                           | L_clib_27:
   645 | 00000497 | 8B4604                    | 	mov	ax, word [bp+4]
   646 | 0000049A | 31D2                      | 	xor	dx, dx
   647 | 0000049C | F776FC                    | 	div	word [bp-4]
   648 | 0000049F | 0430                      | 	add	al, 48
   649 | 000004A1 | 8B76FE                    | 	mov	si, word [bp-2]
   650 | 000004A4 | 8D56F6                    | 	lea	dx, [bp-10]
   651 | 000004A7 | 01D6                      | 	add	si, dx
   652 | 000004A9 | 8804                      | 	mov	byte [si], al
   653 | 000004AB | FF46FE                    | 	inc	word [bp-2]
   654 | 000004AE | 8B4604                    | 	mov	ax, word [bp+4]
   655 | 000004B1 | 31D2                      | 	xor	dx, dx
   656 | 000004B3 | F776FC                    | 	div	word [bp-4]
   657 | 000004B6 | 89D0                      | 	mov	ax, dx
   658 | 000004B8 | 894604                    | 	mov	word [bp+4], ax
   659 | 000004BB | 8B46FC                    | 	mov	ax, word [bp-4]
   660 | 000004BE | 99                        | 	cwd
   661 | 000004BF | B90A00                    | 	mov	cx, 10
   662 | 000004C2 | F7F9                      | 	idiv	cx
   663 | 000004C4 | 8946FC                    | 	mov	word [bp-4], ax
   664 | 000004C7 | 8B46FC                    | 	mov	ax, word [bp-4]
   665 | 000004CA | 8946FC                    | 	mov	word [bp-4], ax
   666 |          |                           | L_clib_28:
   667 | 000004CD | 837EFC00                  | 	cmp	word [bp-4], 0
   668 | 000004D1 | 7FC4                      | 	jg	L_clib_27
   669 |          |                           | L_clib_29:
   670 | 000004D3 | FF76FE                    | 	push	word [bp-2]
   671 | 000004D6 | 8D46F6                    | 	lea	ax, [bp-10]
   672 | 000004D9 | 50                        | 	push	ax
   673 | 000004DA | E80FFF                    | 	call	print
   674 | 000004DD | 83C404                    | 	add	sp, 4
   675 | 000004E0 | 89EC                      | 	mov	sp, bp
   676 | 000004E2 | 5D                        | 	pop	bp
   677 | 000004E3 | C3                        | 	ret
   678 |          |                           | L_clib_19:
   679 | 000004E4 | 55                        | 	push	bp
   680 | 000004E5 | 89E5                      | 	mov	bp, sp
   681 | 000004E7 | 83EC0A                    | 	sub	sp, 10
   682 | 000004EA | E962FF                    | 	jmp	L_clib_20
   683 | 000004ED | 90                        | 	ALIGN	2
   684 |          |                           | printLong:
   685 | 000004EE | E9D200                    | 	jmp	L_clib_31
   686 |          |                           | L_clib_32:
   687 | 000004F1 | C746FE0000                | 	mov	word [bp-2], 0
   688 | 000004F6 | C746FA00CA                | 	mov	word [bp-6], 51712
   689 | 000004FB | C746FC9A3B                | 	mov	word [bp-4], 15258
   690 | 00000500 | 837E0600                  | 	cmp	word [bp+6], 0
   691 | 00000504 | 7F22                      | 	jg	L_clib_33
   692 | 00000506 | 7C06                      | 	jl	L_clib_34
   693 | 00000508 | 837E0400                  | 	cmp	word [bp+4], 0
   694 | 0000050C | 731A                      | 	jae	L_clib_33
   695 |          |                           | L_clib_34:
   696 | 0000050E | C646EF2D                  | 	mov	byte [bp-17], 45
   697 | 00000512 | FF46FE                    | 	inc	word [bp-2]
   698 | 00000515 | 8B4604                    | 	mov	ax, word [bp+4]
   699 | 00000518 | 8B5606                    | 	mov	dx, word [bp+6]
   700 | 0000051B | F7D8                      | 	neg	ax
   701 | 0000051D | 83D200                    | 	adc	dx, 0
   702 | 00000520 | F7DA                      | 	neg	dx
   703 | 00000522 | 894604                    | 	mov	word [bp+4], ax
   704 | 00000525 | 895606                    | 	mov	word [bp+6], dx
   705 |          |                           | L_clib_33:
   706 | 00000528 | 8B4604                    | 	mov	ax, word [bp+4]
   707 | 0000052B | 8B5606                    | 	mov	dx, word [bp+6]
   708 | 0000052E | 09C2                      | 	or	dx, ax
   709 | 00000530 | 750C                      | 	jne	L_clib_35
   710 | 00000532 | C746FA0100                | 	mov	word [bp-6], 1
   711 | 00000537 | C746FC0000                | 	mov	word [bp-4], 0
   712 | 0000053C | EB23                      | 	jmp	L_clib_36
   713 |          |                           | L_clib_35:
   714 | 0000053E | EB0E                      | 	jmp	L_clib_38
   715 |          |                           | L_clib_37:
   716 | 00000540 | B80A00                    | 	mov	ax, 10
   717 | 00000543 | 31D2                      | 	xor	dx, dx
   718 | 00000545 | 52                        | 	push	dx
   719 | 00000546 | 50                        | 	push	ax
   720 | 00000547 | 8D46FA                    | 	lea	ax, [bp-6]
   721 | 0000054A | 50                        | 	push	ax
   722 | 0000054B | E8B5FB                    | 	call	SR_asldiv
   723 |          |                           | L_clib_38:
   724 | 0000054E | FF76FC                    | 	push	word [bp-4]
   725 | 00000551 | FF76FA                    | 	push	word [bp-6]
   726 | 00000554 | FF7606                    | 	push	word [bp+6]
   727 | 00000557 | FF7604                    | 	push	word [bp+4]
   728 | 0000055A | E8F8FC                    | 	call	SR_ldiv
   729 | 0000055D | 09C2                      | 	or	dx, ax
   730 | 0000055F | 74DF                      | 	je	L_clib_37
   731 |          |                           | L_clib_39:
   732 |          |                           | L_clib_36:
   733 | 00000561 | EB41                      | 	jmp	L_clib_41
   734 |          |                           | L_clib_40:
   735 | 00000563 | FF76FC                    | 	push	word [bp-4]
   736 | 00000566 | FF76FA                    | 	push	word [bp-6]
   737 | 00000569 | FF7606                    | 	push	word [bp+6]
   738 | 0000056C | FF7604                    | 	push	word [bp+4]
   739 | 0000056F | E8EAFC                    | 	call	SR_uldiv
   740 | 00000572 | 0430                      | 	add	al, 48
   741 | 00000574 | 8B76FE                    | 	mov	si, word [bp-2]
   742 | 00000577 | 8D56EF                    | 	lea	dx, [bp-17]
   743 | 0000057A | 01D6                      | 	add	si, dx
   744 | 0000057C | 8804                      | 	mov	byte [si], al
   745 | 0000057E | FF46FE                    | 	inc	word [bp-2]
   746 | 00000581 | FF76FC                    | 	push	word [bp-4]
   747 | 00000584 | FF76FA                    | 	push	word [bp-6]
   748 | 00000587 | FF7606                    | 	push	word [bp+6]
   749 | 0000058A | FF7604                    | 	push	word [bp+4]
   750 | 0000058D | E8D4FC                    | 	call	SR_lmod
   751 | 00000590 | 894604                    | 	mov	word [bp+4], ax
   752 | 00000593 | 895606                    | 	mov	word [bp+6], dx
   753 | 00000596 | B80A00                    | 	mov	ax, 10
   754 | 00000599 | 31D2                      | 	xor	dx, dx
   755 | 0000059B | 52                        | 	push	dx
   756 | 0000059C | 50                        | 	push	ax
   757 | 0000059D | 8D46FA                    | 	lea	ax, [bp-6]
   758 | 000005A0 | 50                        | 	push	ax
   759 | 000005A1 | E85FFB                    | 	call	SR_asldiv
   760 |          |                           | L_clib_41:
   761 | 000005A4 | 837EFC00                  | 	cmp	word [bp-4], 0
   762 | 000005A8 | 7FB9                      | 	jg	L_clib_40
   763 | 000005AA | 7506                      | 	jne	L_clib_43
   764 | 000005AC | 837EFA00                  | 	cmp	word [bp-6], 0
   765 | 000005B0 | 77B1                      | 	ja	L_clib_40
   766 |          |                           | L_clib_43:
   767 |          |                           | L_clib_42:
   768 | 000005B2 | FF76FE                    | 	push	word [bp-2]
   769 | 000005B5 | 8D46EF                    | 	lea	ax, [bp-17]
   770 | 000005B8 | 50                        | 	push	ax
   771 | 000005B9 | E830FE                    | 	call	print
   772 | 000005BC | 83C404                    | 	add	sp, 4
   773 | 000005BF | 89EC                      | 	mov	sp, bp
   774 | 000005C1 | 5D                        | 	pop	bp
   775 | 000005C2 | C3                        | 	ret
   776 |          |                           | L_clib_31:
   777 | 000005C3 | 55                        | 	push	bp
   778 | 000005C4 | 89E5                      | 	mov	bp, sp
   779 | 000005C6 | 83EC12                    | 	sub	sp, 18
   780 | 000005C9 | E925FF                    | 	jmp	L_clib_32
   781 |          |                           | 	ALIGN	2
   782 |          |                           | printUInt:
   783 | 000005CC | EB7C                      | 	jmp	L_clib_45
   784 |          |                           | L_clib_46:
   785 | 000005CE | C746FE0000                | 	mov	word [bp-2], 0
   786 | 000005D3 | C746FC1027                | 	mov	word [bp-4], 10000
   787 | 000005D8 | 8B4604                    | 	mov	ax, word [bp+4]
   788 | 000005DB | 85C0                      | 	test	ax, ax
   789 | 000005DD | 7507                      | 	jne	L_clib_47
   790 | 000005DF | C746FC0100                | 	mov	word [bp-4], 1
   791 | 000005E4 | EB1B                      | 	jmp	L_clib_48
   792 |          |                           | L_clib_47:
   793 | 000005E6 | EB0D                      | 	jmp	L_clib_50
   794 |          |                           | L_clib_49:
   795 | 000005E8 | 8B46FC                    | 	mov	ax, word [bp-4]
   796 | 000005EB | 31D2                      | 	xor	dx, dx
   797 | 000005ED | B90A00                    | 	mov	cx, 10
   798 | 000005F0 | F7F1                      | 	div	cx
   799 | 000005F2 | 8946FC                    | 	mov	word [bp-4], ax
   800 |          |                           | L_clib_50:
   801 | 000005F5 | 8B4604                    | 	mov	ax, word [bp+4]
   802 | 000005F8 | 31D2                      | 	xor	dx, dx
   803 | 000005FA | F776FC                    | 	div	word [bp-4]
   804 | 000005FD | 85C0                      | 	test	ax, ax
   805 | 000005FF | 74E7                      | 	je	L_clib_49
   806 |          |                           | L_clib_51:
   807 |          |                           | L_clib_48:
   808 | 00000601 | EB2F                      | 	jmp	L_clib_53
   809 |          |                           | L_clib_52:
   810 | 00000603 | 8B4604                    | 	mov	ax, word [bp+4]
   811 | 00000606 | 31D2                      | 	xor	dx, dx
   812 | 00000608 | F776FC                    | 	div	word [bp-4]
   813 | 0000060B | 0430                      | 	add	al, 48
   814 | 0000060D | 8B76FE                    | 	mov	si, word [bp-2]
   815 | 00000610 | 8D56F6                    | 	lea	dx, [bp-10]
   816 | 00000613 | 01D6                      | 	add	si, dx
   817 | 00000615 | 8804                      | 	mov	byte [si], al
   818 | 00000617 | FF46FE                    | 	inc	word [bp-2]
   819 | 0000061A | 8B4604                    | 	mov	ax, word [bp+4]
   820 | 0000061D | 31D2                      | 	xor	dx, dx
   821 | 0000061F | F776FC                    | 	div	word [bp-4]
   822 | 00000622 | 895604                    | 	mov	word [bp+4], dx
   823 | 00000625 | 8B46FC                    | 	mov	ax, word [bp-4]
   824 | 00000628 | 31D2                      | 	xor	dx, dx
   825 | 0000062A | B90A00                    | 	mov	cx, 10
   826 | 0000062D | F7F1                      | 	div	cx
   827 | 0000062F | 8946FC                    | 	mov	word [bp-4], ax
   828 |          |                           | L_clib_53:
   829 | 00000632 | 8B46FC                    | 	mov	ax, word [bp-4]
   830 | 00000635 | 85C0                      | 	test	ax, ax
   831 | 00000637 | 75CA                      | 	jne	L_clib_52
   832 |          |                           | L_clib_54:
   833 | 00000639 | FF76FE                    | 	push	word [bp-2]
   834 | 0000063C | 8D46F6                    | 	lea	ax, [bp-10]
   835 | 0000063F | 50                        | 	push	ax
   836 | 00000640 | E8A9FD                    | 	call	print
   837 | 00000643 | 83C404                    | 	add	sp, 4
   838 | 00000646 | 89EC                      | 	mov	sp, bp
   839 | 00000648 | 5D                        | 	pop	bp
   840 | 00000649 | C3                        | 	ret
   841 |          |                           | L_clib_45:
   842 | 0000064A | 55                        | 	push	bp
   843 | 0000064B | 89E5                      | 	mov	bp, sp
   844 | 0000064D | 83EC0A                    | 	sub	sp, 10
   845 | 00000650 | E97BFF                    | 	jmp	L_clib_46
   846 | 00000653 | 90                        | 	ALIGN	2
   847 |          |                           | printULong:
   848 | 00000654 | E99E00                    | 	jmp	L_clib_56
   849 |          |                           | L_clib_57:
   850 | 00000657 | C746FE0000                | 	mov	word [bp-2], 0
   851 | 0000065C | C746FA00CA                | 	mov	word [bp-6], 51712
   852 | 00000661 | C746FC9A3B                | 	mov	word [bp-4], 15258
   853 | 00000666 | 8B4604                    | 	mov	ax, word [bp+4]
   854 | 00000669 | 8B5606                    | 	mov	dx, word [bp+6]
   855 | 0000066C | 09C2                      | 	or	dx, ax
   856 | 0000066E | 750C                      | 	jne	L_clib_58
   857 | 00000670 | C746FA0100                | 	mov	word [bp-6], 1
   858 | 00000675 | C746FC0000                | 	mov	word [bp-4], 0
   859 | 0000067A | EB23                      | 	jmp	L_clib_59
   860 |          |                           | L_clib_58:
   861 | 0000067C | EB0E                      | 	jmp	L_clib_61
   862 |          |                           | L_clib_60:
   863 | 0000067E | B80A00                    | 	mov	ax, 10
   864 | 00000681 | 31D2                      | 	xor	dx, dx
   865 | 00000683 | 52                        | 	push	dx
   866 | 00000684 | 50                        | 	push	ax
   867 | 00000685 | 8D46FA                    | 	lea	ax, [bp-6]
   868 | 00000688 | 50                        | 	push	ax
   869 | 00000689 | E820FB                    | 	call	SR_asuldiv
   870 |          |                           | L_clib_61:
   871 | 0000068C | FF76FC                    | 	push	word [bp-4]
   872 | 0000068F | FF76FA                    | 	push	word [bp-6]
   873 | 00000692 | FF7606                    | 	push	word [bp+6]
   874 | 00000695 | FF7604                    | 	push	word [bp+4]
   875 | 00000698 | E8C1FB                    | 	call	SR_uldiv
   876 | 0000069B | 09C2                      | 	or	dx, ax
   877 | 0000069D | 74DF                      | 	je	L_clib_60
   878 |          |                           | L_clib_62:
   879 |          |                           | L_clib_59:
   880 | 0000069F | EB39                      | 	jmp	L_clib_64
   881 |          |                           | L_clib_63:
   882 | 000006A1 | FF76FC                    | 	push	word [bp-4]
   883 | 000006A4 | FF76FA                    | 	push	word [bp-6]
   884 | 000006A7 | FF7606                    | 	push	word [bp+6]
   885 | 000006AA | FF7604                    | 	push	word [bp+4]
   886 | 000006AD | E8ACFB                    | 	call	SR_uldiv
   887 | 000006B0 | 0430                      | 	add	al, 48
   888 | 000006B2 | 8B76FE                    | 	mov	si, word [bp-2]
   889 | 000006B5 | 8D56EF                    | 	lea	dx, [bp-17]
   890 | 000006B8 | 01D6                      | 	add	si, dx
   891 | 000006BA | 8804                      | 	mov	byte [si], al
   892 | 000006BC | FF46FE                    | 	inc	word [bp-2]
   893 | 000006BF | FF76FC                    | 	push	word [bp-4]
   894 | 000006C2 | FF76FA                    | 	push	word [bp-6]
   895 | 000006C5 | 8D4604                    | 	lea	ax, [bp+4]
   896 | 000006C8 | 50                        | 	push	ax
   897 | 000006C9 | E800FB                    | 	call	SR_asilmod
   898 | 000006CC | B80A00                    | 	mov	ax, 10
   899 | 000006CF | 31D2                      | 	xor	dx, dx
   900 | 000006D1 | 52                        | 	push	dx
   901 | 000006D2 | 50                        | 	push	ax
   902 | 000006D3 | 8D46FA                    | 	lea	ax, [bp-6]
   903 | 000006D6 | 50                        | 	push	ax
   904 | 000006D7 | E8D2FA                    | 	call	SR_asuldiv
   905 |          |                           | L_clib_64:
   906 | 000006DA | 8B46FA                    | 	mov	ax, word [bp-6]
   907 | 000006DD | 8B56FC                    | 	mov	dx, word [bp-4]
   908 | 000006E0 | 09C2                      | 	or	dx, ax
   909 | 000006E2 | 75BD                      | 	jne	L_clib_63
   910 |          |                           | L_clib_65:
   911 | 000006E4 | FF76FE                    | 	push	word [bp-2]
   912 | 000006E7 | 8D46EF                    | 	lea	ax, [bp-17]
   913 | 000006EA | 50                        | 	push	ax
   914 | 000006EB | E8FEFC                    | 	call	print
   915 | 000006EE | 83C404                    | 	add	sp, 4
   916 | 000006F1 | 89EC                      | 	mov	sp, bp
   917 | 000006F3 | 5D                        | 	pop	bp
   918 | 000006F4 | C3                        | 	ret
   919 |          |                           | L_clib_56:
   920 | 000006F5 | 55                        | 	push	bp
   921 | 000006F6 | 89E5                      | 	mov	bp, sp
   922 | 000006F8 | 83EC12                    | 	sub	sp, 18
   923 | 000006FB | E959FF                    | 	jmp	L_clib_57
   924 |          |                           | 	ALIGN	2
   925 |          |                           | printByte:
   926 | 000006FE | EB61                      | 	jmp	L_clib_67
   927 |          |                           | L_clib_68:
   928 | 00000700 | 8A4604                    | 	mov	al, byte [bp+4]
   929 | 00000703 | 98                        | 	cbw
   930 | 00000704 | B90400                    | 	mov	cx, 4
   931 | 00000707 | D3F8                      | 	sar	ax, cl
   932 | 00000709 | 83E00F                    | 	and	ax, 15
   933 | 0000070C | 8846FF                    | 	mov	byte [bp-1], al
   934 | 0000070F | 807EFF09                  | 	cmp	byte [bp-1], 9
   935 | 00000713 | 7E0C                      | 	jle	L_clib_69
   936 | 00000715 | 8A46FF                    | 	mov	al, byte [bp-1]
   937 | 00000718 | 98                        | 	cbw
   938 | 00000719 | 83E80A                    | 	sub	ax, 10
   939 | 0000071C | 83C041                    | 	add	ax, 65
   940 | 0000071F | EB07                      | 	jmp	L_clib_70
   941 |          |                           | L_clib_69:
   942 | 00000721 | 8A46FF                    | 	mov	al, byte [bp-1]
   943 | 00000724 | 98                        | 	cbw
   944 | 00000725 | 83C030                    | 	add	ax, 48
   945 |          |                           | L_clib_70:
   946 | 00000728 | 8846FD                    | 	mov	byte [bp-3], al
   947 | 0000072B | 8A4604                    | 	mov	al, byte [bp+4]
   948 | 0000072E | 240F                      | 	and	al, 15
   949 | 00000730 | 8846FF                    | 	mov	byte [bp-1], al
   950 | 00000733 | 807EFF09                  | 	cmp	byte [bp-1], 9
   951 | 00000737 | 7E0C                      | 	jle	L_clib_71
   952 | 00000739 | 8A46FF                    | 	mov	al, byte [bp-1]
   953 | 0000073C | 98                        | 	cbw
   954 | 0000073D | 83E80A                    | 	sub	ax, 10
   955 | 00000740 | 83C041                    | 	add	ax, 65
   956 | 00000743 | EB07                      | 	jmp	L_clib_72
   957 |          |                           | L_clib_71:
   958 | 00000745 | 8A46FF                    | 	mov	al, byte [bp-1]
   959 | 00000748 | 98                        | 	cbw
   960 | 00000749 | 83C030                    | 	add	ax, 48
   961 |          |                           | L_clib_72:
   962 | 0000074C | 8846FE                    | 	mov	byte [bp-2], al
   963 | 0000074F | B80200                    | 	mov	ax, 2
   964 | 00000752 | 50                        | 	push	ax
   965 | 00000753 | 8D46FD                    | 	lea	ax, [bp-3]
   966 | 00000756 | 50                        | 	push	ax
   967 | 00000757 | E892FC                    | 	call	print
   968 | 0000075A | 83C404                    | 	add	sp, 4
   969 | 0000075D | 89EC                      | 	mov	sp, bp
   970 | 0000075F | 5D                        | 	pop	bp
   971 | 00000760 | C3                        | 	ret
   972 |          |                           | L_clib_67:
   973 | 00000761 | 55                        | 	push	bp
   974 | 00000762 | 89E5                      | 	mov	bp, sp
   975 | 00000764 | 83EC04                    | 	sub	sp, 4
   976 | 00000767 | EB97                      | 	jmp	L_clib_68
   977 | 00000769 | 90                        | 	ALIGN	2
   978 |          |                           | printWord:
   979 | 0000076A | EB59                      | 	jmp	L_clib_74
   980 |          |                           | L_clib_75:
   981 | 0000076C | C746FE0300                | 	mov	word [bp-2], 3
   982 | 00000771 | EB3A                      | 	jmp	L_clib_77
   983 |          |                           | L_clib_76:
   984 | 00000773 | 8B4604                    | 	mov	ax, word [bp+4]
   985 | 00000776 | 83E00F                    | 	and	ax, 15
   986 | 00000779 | 8846FD                    | 	mov	byte [bp-3], al
   987 | 0000077C | 807EFD09                  | 	cmp	byte [bp-3], 9
   988 | 00000780 | 7E0C                      | 	jle	L_clib_80
   989 | 00000782 | 8A46FD                    | 	mov	al, byte [bp-3]
   990 | 00000785 | 98                        | 	cbw
   991 | 00000786 | 83E80A                    | 	sub	ax, 10
   992 | 00000789 | 83C041                    | 	add	ax, 65
   993 | 0000078C | EB07                      | 	jmp	L_clib_81
   994 |          |                           | L_clib_80:
   995 | 0000078E | 8A46FD                    | 	mov	al, byte [bp-3]
   996 | 00000791 | 98                        | 	cbw
   997 | 00000792 | 83C030                    | 	add	ax, 48
   998 |          |                           | L_clib_81:
   999 | 00000795 | 8B76FE                    | 	mov	si, word [bp-2]
  1000 | 00000798 | 8D56F9                    | 	lea	dx, [bp-7]
  1001 | 0000079B | 01D6                      | 	add	si, dx
  1002 | 0000079D | 8804                      | 	mov	byte [si], al
  1003 | 0000079F | 8B4604                    | 	mov	ax, word [bp+4]
  1004 | 000007A2 | B90400                    | 	mov	cx, 4
  1005 | 000007A5 | D3F8                      | 	sar	ax, cl
  1006 | 000007A7 | 894604                    | 	mov	word [bp+4], ax
  1007 |          |                           | L_clib_79:
  1008 | 000007AA | FF4EFE                    | 	dec	word [bp-2]
  1009 |          |                           | L_clib_77:
  1010 | 000007AD | 837EFE00                  | 	cmp	word [bp-2], 0
  1011 | 000007B1 | 7DC0                      | 	jge	L_clib_76
  1012 |          |                           | L_clib_78:
  1013 | 000007B3 | B80400                    | 	mov	ax, 4
  1014 | 000007B6 | 50                        | 	push	ax
  1015 | 000007B7 | 8D46F9                    | 	lea	ax, [bp-7]
  1016 | 000007BA | 50                        | 	push	ax
  1017 | 000007BB | E82EFC                    | 	call	print
  1018 | 000007BE | 83C404                    | 	add	sp, 4
  1019 | 000007C1 | 89EC                      | 	mov	sp, bp
  1020 | 000007C3 | 5D                        | 	pop	bp
  1021 | 000007C4 | C3                        | 	ret
  1022 |          |                           | L_clib_74:
  1023 | 000007C5 | 55                        | 	push	bp
  1024 | 000007C6 | 89E5                      | 	mov	bp, sp
  1025 | 000007C8 | 83EC08                    | 	sub	sp, 8
  1026 | 000007CB | EB9F                      | 	jmp	L_clib_75
  1027 | 000007CD | 90                        | 	ALIGN	2
  1028 |          |                           | printDWord:
  1029 | 000007CE | E9AC00                    | 	jmp	L_clib_83
  1030 |          |                           | L_clib_84:
  1031 | 000007D1 | 8D4604                    | 	lea	ax, [bp+4]
  1032 | 000007D4 | 89C6                      | 	mov	si, ax
  1033 | 000007D6 | 8B04                      | 	mov	ax, word [si]
  1034 | 000007D8 | 8946FA                    | 	mov	word [bp-6], ax
  1035 | 000007DB | 8D4604                    | 	lea	ax, [bp+4]
  1036 | 000007DE | 89C6                      | 	mov	si, ax
  1037 | 000007E0 | 83C602                    | 	add	si, 2
  1038 | 000007E3 | 8B04                      | 	mov	ax, word [si]
  1039 | 000007E5 | 8946F8                    | 	mov	word [bp-8], ax
  1040 | 000007E8 | C746FE0300                | 	mov	word [bp-2], 3
  1041 | 000007ED | EB76                      | 	jmp	L_clib_86
  1042 |          |                           | L_clib_85:
  1043 | 000007EF | 8B46FA                    | 	mov	ax, word [bp-6]
  1044 | 000007F2 | 83E00F                    | 	and	ax, 15
  1045 | 000007F5 | 8846FD                    | 	mov	byte [bp-3], al
  1046 | 000007F8 | 807EFD09                  | 	cmp	byte [bp-3], 9
  1047 | 000007FC | 7E0C                      | 	jle	L_clib_89
  1048 | 000007FE | 8A46FD                    | 	mov	al, byte [bp-3]
  1049 | 00000801 | 98                        | 	cbw
  1050 | 00000802 | 83E80A                    | 	sub	ax, 10
  1051 | 00000805 | 83C041                    | 	add	ax, 65
  1052 | 00000808 | EB07                      | 	jmp	L_clib_90
  1053 |          |                           | L_clib_89:
  1054 | 0000080A | 8A46FD                    | 	mov	al, byte [bp-3]
  1055 | 0000080D | 98                        | 	cbw
  1056 | 0000080E | 83C030                    | 	add	ax, 48
  1057 |          |                           | L_clib_90:
  1058 | 00000811 | 8B56FE                    | 	mov	dx, word [bp-2]
  1059 | 00000814 | 83C204                    | 	add	dx, 4
  1060 | 00000817 | 89D6                      | 	mov	si, dx
  1061 | 00000819 | 8D56F0                    | 	lea	dx, [bp-16]
  1062 | 0000081C | 01D6                      | 	add	si, dx
  1063 | 0000081E | 8804                      | 	mov	byte [si], al
  1064 | 00000820 | 8B46FA                    | 	mov	ax, word [bp-6]
  1065 | 00000823 | B90400                    | 	mov	cx, 4
  1066 | 00000826 | D3F8                      | 	sar	ax, cl
  1067 | 00000828 | 8946FA                    | 	mov	word [bp-6], ax
  1068 | 0000082B | 8B46F8                    | 	mov	ax, word [bp-8]
  1069 | 0000082E | 83E00F                    | 	and	ax, 15
  1070 | 00000831 | 8846FD                    | 	mov	byte [bp-3], al
  1071 | 00000834 | 807EFD09                  | 	cmp	byte [bp-3], 9
  1072 | 00000838 | 7E0C                      | 	jle	L_clib_91
  1073 | 0000083A | 8A46FD                    | 	mov	al, byte [bp-3]
  1074 | 0000083D | 98                        | 	cbw
  1075 | 0000083E | 83E80A                    | 	sub	ax, 10
  1076 | 00000841 | 83C041                    | 	add	ax, 65
  1077 | 00000844 | EB07                      | 	jmp	L_clib_92
  1078 |          |                           | L_clib_91:
  1079 | 00000846 | 8A46FD                    | 	mov	al, byte [bp-3]
  1080 | 00000849 | 98                        | 	cbw
  1081 | 0000084A | 83C030                    | 	add	ax, 48
  1082 |          |                           | L_clib_92:
  1083 | 0000084D | 8B76FE                    | 	mov	si, word [bp-2]
  1084 | 00000850 | 8D56F0                    | 	lea	dx, [bp-16]
  1085 | 00000853 | 01D6                      | 	add	si, dx
  1086 | 00000855 | 8804                      | 	mov	byte [si], al
  1087 | 00000857 | 8B46F8                    | 	mov	ax, word [bp-8]
  1088 | 0000085A | B90400                    | 	mov	cx, 4
  1089 | 0000085D | D3F8                      | 	sar	ax, cl
  1090 | 0000085F | 8946F8                    | 	mov	word [bp-8], ax
  1091 |          |                           | L_clib_88:
  1092 | 00000862 | FF4EFE                    | 	dec	word [bp-2]
  1093 |          |                           | L_clib_86:
  1094 | 00000865 | 837EFE00                  | 	cmp	word [bp-2], 0
  1095 | 00000869 | 7D84                      | 	jge	L_clib_85
  1096 |          |                           | L_clib_87:
  1097 | 0000086B | B80800                    | 	mov	ax, 8
  1098 | 0000086E | 50                        | 	push	ax
  1099 | 0000086F | 8D46F0                    | 	lea	ax, [bp-16]
  1100 | 00000872 | 50                        | 	push	ax
  1101 | 00000873 | E876FB                    | 	call	print
  1102 | 00000876 | 83C404                    | 	add	sp, 4
  1103 | 00000879 | 89EC                      | 	mov	sp, bp
  1104 | 0000087B | 5D                        | 	pop	bp
  1105 | 0000087C | C3                        | 	ret
  1106 |          |                           | L_clib_83:
  1107 | 0000087D | 55                        | 	push	bp
  1108 | 0000087E | 89E5                      | 	mov	bp, sp
  1109 | 00000880 | 83EC10                    | 	sub	sp, 16
  1110 | 00000883 | E94BFF                    | 	jmp	L_clib_84
  1111 |          |                           | 
  1112 |          |                           | 	align	2
  1113 |          |                           | SlidePiece:	; void SlidePiece(int ID, int direction)
  1114 | 00000886 | 55                        | 	push	bp
  1115 | 00000887 | 89E5                      | 	mov	bp, sp
  1116 | 00000889 | 50                        | 	push	ax
  1117 | 0000088A | 52                        | 	push	dx
  1118 | 0000088B | B400                      |  	mov	ah, 0		; Slide piece operation
  1119 | 0000088D | 8A4606                    |   	mov	al, [bp+6]	; Move direction (loword only)
  1120 | 00000890 | 8B5604                    | 	mov	dx, [bp+4]	; Move id
  1121 | 00000893 | CD1B                      | 	int	1Bh		; Call Simptris services
  1122 | 00000895 | 5A                        | 	pop	dx
  1123 | 00000896 | 58                        | 	pop	ax
  1124 | 00000897 | 5D                        | 	pop	bp
  1125 | 00000898 | C3                        | 	ret
  1126 |          |                           | RotatePiece:	; void RotatePiece(int ID, int direction)
  1127 | 00000899 | 55                        | 	push	bp
  1128 | 0000089A | 89E5                      | 	mov	bp, sp
  1129 | 0000089C | 50                        | 	push	ax
  1130 | 0000089D | 52                        | 	push	dx
  1131 | 0000089E | B401                      |  	mov	ah, 1		; Rotate piece operation
  1132 | 000008A0 | 8A4606                    |  	mov	al, [bp+6]	; Move direction (loword only)
  1133 | 000008A3 | 8B5604                    | 	mov	dx, [bp+4]	; Move id
  1134 | 000008A6 | CD1B                      | 	int	1Bh		; Call Simptris services
  1135 | 000008A8 | 5A                        | 	pop	dx
  1136 | 000008A9 | 58                        | 	pop	ax
  1137 | 000008AA | 5D                        | 	pop	bp
  1138 | 000008AB | C3                        | 	ret
  1139 |          |                           | SeedSimptris:	; void SeedSimptris(long seed)
  1140 | 000008AC | 55                        | 	push	bp
  1141 | 000008AD | 89E5                      | 	mov	bp, sp
  1142 | 000008AF | 50                        | 	push	ax
  1143 | 000008B0 | 51                        | 	push	cx
  1144 | 000008B1 | 52                        | 	push    dx
  1145 | 000008B2 | B402                      |  	mov	ah, 2		; Seed operation
  1146 | 000008B4 | 8B5604                    | 	mov	dx, [bp+4]	; Move loword of seed
  1147 | 000008B7 | 8B4E06                    | 	mov	cx, [bp+6]	; Move hiword of seed
  1148 | 000008BA | CD1B                      | 	int	1Bh		; Call Simptris services
  1149 | 000008BC | 5A                        | 	pop	dx
  1150 | 000008BD | 59                        | 	pop	cx
  1151 | 000008BE | 58                        | 	pop	ax
  1152 | 000008BF | 5D                        | 	pop	bp
  1153 | 000008C0 | C3                        | 	ret
  1154 |          |                           | StartSimptris:	; void StartSimptris(void)
  1155 | 000008C1 | 50                        | 	push	ax
  1156 | 000008C2 | B403                      |  	mov	ah, 3		; Start Simptris operation
  1157 | 000008C4 | CD1B                      | 	int	1Bh		; Call Simptris services
  1158 | 000008C6 | 58                        | 	pop	ax
  1159 | 000008C7 | C3                        | 	ret
  1160 |          |                           | 
  1161 |          |                           | isr_reset:
  1162 | 000008C8 | B80000                    | 	mov	ax, 0x0
  1163 | 000008CB | 50                        | 	push	ax
  1164 | 000008CC | E80BFB                    | 	call	exit
  1165 | 000008CF | CF                        | 	iret
  1166 |          |                           | isr_keypress:
  1167 | 000008D0 | 55                        | 	push	bp
  1168 | 000008D1 | 56                        | 	push	si
  1169 | 000008D2 | 57                        | 	push	di
  1170 | 000008D3 | 1E                        | 	push	ds
  1171 | 000008D4 | 06                        | 	push	es
  1172 | 000008D5 | 52                        | 	push	dx
  1173 | 000008D6 | 51                        | 	push	cx
  1174 | 000008D7 | 53                        | 	push	bx
  1175 | 000008D8 | 50                        | 	push	ax
  1176 | 000008D9 | E84C07                    | 	call	YKEnterISR
  1177 | 000008DC | FB                        | 	sti
  1178 | 000008DD | E86601                    | 	call	YKkeypress
  1179 | 000008E0 | FA                        | 	cli
  1180 | 000008E1 | B020                      | 	mov	al, 0x20
  1181 | 000008E3 | E620                      | 	out	0x20, al
  1182 | 000008E5 | E82007                    | 	call	YKExitISR	
  1183 | 000008E8 | 58                        | 	pop	ax
  1184 | 000008E9 | 5B                        | 	pop	bx
  1185 | 000008EA | 59                        | 	pop	cx
  1186 | 000008EB | 5A                        | 	pop	dx
  1187 | 000008EC | 07                        | 	pop	es
  1188 | 000008ED | 1F                        | 	pop	ds
  1189 | 000008EE | 5F                        | 	pop	di
  1190 | 000008EF | 5E                        | 	pop	si
  1191 | 000008F0 | 5D                        | 	pop	bp	
  1192 | 000008F1 | CF                        | 	iret
  1193 |          |                           | isr_tick:
  1194 | 000008F2 | 55                        | 	push	bp
  1195 | 000008F3 | 56                        | 	push	si	
  1196 | 000008F4 | 57                        | 	push	di
  1197 | 000008F5 | 1E                        | 	push	ds
  1198 | 000008F6 | 06                        | 	push	es
  1199 | 000008F7 | 52                        | 	push	dx
  1200 | 000008F8 | 51                        | 	push	cx
  1201 | 000008F9 | 53                        | 	push	bx
  1202 | 000008FA | 50                        | 	push	ax
  1203 | 000008FB | E82A07                    | 	call	YKEnterISR
  1204 | 000008FE | E8D900                    | 	call	YKTickHandler
  1205 | 00000901 | FA                        | 	cli
  1206 | 00000902 | B020                      | 	mov	al, 0x20
  1207 | 00000904 | E620                      | 	out	0x20, al
  1208 | 00000906 | E8FF06                    | 	call	YKExitISR	
  1209 | 00000909 | 58                        | 	pop	ax
  1210 | 0000090A | 5B                        | 	pop	bx
  1211 | 0000090B | 59                        | 	pop	cx
  1212 | 0000090C | 5A                        | 	pop	dx
  1213 | 0000090D | 07                        | 	pop	es
  1214 | 0000090E | 1F                        | 	pop	ds
  1215 | 0000090F | 5F                        | 	pop	di
  1216 | 00000910 | 5E                        | 	pop	si
  1217 | 00000911 | 5D                        | 	pop	bp	
  1218 | 00000912 | CF                        | 	iret
  1219 |          |                           | isr_simptris_lineclear:
  1220 | 00000913 | FF06[8C2C]                | 	inc	word[score]
  1221 | 00000917 | 50                        | 	push	ax
  1222 | 00000918 | B020                      | 	mov	al, 0x20
  1223 | 0000091A | E620                      | 	out	0x20, al
  1224 | 0000091C | 58                        | 	pop	ax
  1225 | 0000091D | CF                        | 	iret	
  1226 |          |                           | isr_simptris_touchdown:
  1227 | 0000091E | 50                        | 	push	ax
  1228 | 0000091F | B020                      | 	mov	al, 0x20
  1229 | 00000921 | E620                      | 	out	0x20, al
  1230 | 00000923 | 58                        | 	pop	ax
  1231 | 00000924 | CF                        | 	iret	
  1232 |          |                           | isr_simptris_recievedCmd:
  1233 | 00000925 | 55                        | 	push	bp
  1234 | 00000926 | 56                        | 	push	si
  1235 | 00000927 | 57                        | 	push	di
  1236 | 00000928 | 1E                        | 	push	ds
  1237 | 00000929 | 06                        | 	push	es
  1238 | 0000092A | 52                        | 	push	dx
  1239 | 0000092B | 51                        | 	push	cx
  1240 | 0000092C | 53                        | 	push	bx
  1241 | 0000092D | 50                        | 	push	ax
  1242 | 0000092E | E8F706                    | 	call	YKEnterISR
  1243 | 00000931 | FB                        | 	sti
  1244 | 00000932 | E89B0E                    | 	call	SMrecievedCmdHdlr
  1245 | 00000935 | FA                        | 	cli
  1246 | 00000936 | B020                      | 	mov	al, 0x20
  1247 | 00000938 | E620                      | 	out	0x20, al
  1248 | 0000093A | E8CB06                    | 	call	YKExitISR	
  1249 | 0000093D | 58                        | 	pop	ax
  1250 | 0000093E | 5B                        | 	pop	bx
  1251 | 0000093F | 59                        | 	pop	cx
  1252 | 00000940 | 5A                        | 	pop	dx
  1253 | 00000941 | 07                        | 	pop	es
  1254 | 00000942 | 1F                        | 	pop	ds
  1255 | 00000943 | 5F                        | 	pop	di
  1256 | 00000944 | 5E                        | 	pop	si
  1257 | 00000945 | 5D                        | 	pop	bp	
  1258 | 00000946 | CF                        | 	iret
  1259 |          |                           | isr_simptris_newpeice:
  1260 | 00000947 | 55                        | 	push	bp
  1261 | 00000948 | 56                        | 	push	si	
  1262 | 00000949 | 57                        | 	push	di
  1263 | 0000094A | 1E                        | 	push	ds
  1264 | 0000094B | 06                        | 	push	es
  1265 | 0000094C | 52                        | 	push	dx
  1266 | 0000094D | 51                        | 	push	cx
  1267 | 0000094E | 53                        | 	push	bx
  1268 | 0000094F | 50                        | 	push	ax
  1269 | 00000950 | E8D506                    | 	call	YKEnterISR
  1270 |          |                           | 	;sti don't nest newpeice interrupts
  1271 | 00000953 | E8E20D                    | 	call	SMnewpieceHdlr
  1272 | 00000956 | FA                        | 	cli
  1273 | 00000957 | B020                      | 	mov	al, 0x20
  1274 | 00000959 | E620                      | 	out	0x20, al
  1275 | 0000095B | E8AA06                    | 	call	YKExitISR	
  1276 | 0000095E | 58                        | 	pop	ax
  1277 | 0000095F | 5B                        | 	pop	bx
  1278 | 00000960 | 59                        | 	pop	cx
  1279 | 00000961 | 5A                        | 	pop	dx
  1280 | 00000962 | 07                        | 	pop	es
  1281 | 00000963 | 1F                        | 	pop	ds
  1282 | 00000964 | 5F                        | 	pop	di
  1283 | 00000965 | 5E                        | 	pop	si
  1284 | 00000966 | 5D                        | 	pop	bp	
  1285 | 00000967 | CF                        | 	iret	
  1286 |          |                           | isr_simptris_gameover:
  1287 | 00000968 | 55                        | 	push	bp
  1288 | 00000969 | 56                        | 	push	si
  1289 | 0000096A | 57                        | 	push	di
  1290 | 0000096B | 1E                        | 	push	ds
  1291 | 0000096C | 06                        | 	push	es
  1292 | 0000096D | 52                        | 	push	dx
  1293 | 0000096E | 51                        | 	push	cx
  1294 | 0000096F | 53                        | 	push	bx
  1295 | 00000970 | 50                        | 	push	ax
  1296 | 00000971 | E8B406                    | 	call	YKEnterISR
  1297 | 00000974 | FB                        | 	sti
  1298 | 00000975 | E88C0D                    | 	call	SMgameOverHdlr
  1299 | 00000978 | FA                        | 	cli
  1300 | 00000979 | B020                      | 	mov	al, 0x20
  1301 | 0000097B | E620                      | 	out	0x20, al
  1302 | 0000097D | E88806                    | 	call	YKExitISR	
  1303 | 00000980 | 58                        | 	pop	ax
  1304 | 00000981 | 5B                        | 	pop	bx
  1305 | 00000982 | 59                        | 	pop	cx
  1306 | 00000983 | 5A                        | 	pop	dx
  1307 | 00000984 | 07                        | 	pop	es
  1308 | 00000985 | 1F                        | 	pop	ds
  1309 | 00000986 | 5F                        | 	pop	di
  1310 | 00000987 | 5E                        | 	pop	si
  1311 | 00000988 | 5D                        | 	pop	bp	
  1312 | 00000989 | CF                        | 	iret	
  1313 |          |                           | 
  1314 |          |                           | YKEnterMutex:
  1315 | 0000098A | FA                        | 	cli
  1316 | 0000098B | C3                        | 	ret
  1317 |          |                           | YKExitMutex:
  1318 | 0000098C | FB                        | 	sti
  1319 | 0000098D | C3                        | 	ret
  1320 |          |                           | YKsaveContext:
  1321 | 0000098E | FA                        | 	cli
  1322 | 0000098F | 9C                        | 	pushf
  1323 | 00000990 | 0E                        | 	push	cs
  1324 | 00000991 | FF7602                    | 	push	word[bp+2]
  1325 | 00000994 | FF7600                    | 	push	word[bp]
  1326 | 00000997 | 56                        | 	push	si
  1327 | 00000998 | 57                        | 	push	di
  1328 | 00000999 | 1E                        | 	push	ds
  1329 | 0000099A | 06                        | 	push	es
  1330 | 0000099B | 52                        | 	push	dx
  1331 | 0000099C | 51                        | 	push	cx
  1332 | 0000099D | 53                        | 	push	bx
  1333 | 0000099E | 50                        | 	push	ax
  1334 | 0000099F | 8B1E[7013]                | 	mov	bx, [YKsave]
  1335 | 000009A3 | 8927                      | 	mov	[bx], sp
  1336 | 000009A5 | EB0D                      | 	jmp	YKrestorecontext
  1337 |          |                           | YKDispatcher:
  1338 | 000009A7 | 55                        | 	push	bp
  1339 | 000009A8 | 89E5                      | 	mov	bp, sp
  1340 | 000009AA | 50                        | 	push	ax
  1341 | 000009AB | 8B4604                    | 	mov	ax, [bp+4]
  1342 | 000009AE | 83F801                    | 	cmp	ax, 1
  1343 | 000009B1 | 58                        | 	pop	ax
  1344 | 000009B2 | 74DA                      | 	je	YKsaveContext
  1345 |          |                           | YKrestorecontext:
  1346 | 000009B4 | 8B26[7213]                | 	mov	sp, [YKrestore]
  1347 | 000009B8 | 58                        | 	pop	ax
  1348 | 000009B9 | 5B                        | 	pop	bx
  1349 | 000009BA | 59                        | 	pop	cx
  1350 | 000009BB | 5A                        | 	pop	dx
  1351 | 000009BC | 07                        | 	pop	es
  1352 | 000009BD | 1F                        | 	pop	ds
  1353 | 000009BE | 5F                        | 	pop	di
  1354 | 000009BF | 5E                        | 	pop	si
  1355 | 000009C0 | 5D                        | 	pop	bp	
  1356 | 000009C1 | CF                        | 	iret
  1357 |          |                           | YKsaveSP:
  1358 | 000009C2 | 55                        | 	push 	bp
  1359 | 000009C3 | 89E5                      | 	mov 	bp, sp
  1360 | 000009C5 | 83C408                    | 	add	sp, 8
  1361 | 000009C8 | 8B1E[7013]                | 	mov 	bx, [YKsave]
  1362 | 000009CC | 8927                      | 	mov 	[bx], sp
  1363 | 000009CE | 83EC08                    | 	sub	sp, 8
  1364 | 000009D1 | 89EC                      | 	mov 	sp, bp
  1365 | 000009D3 | 5D                        | 	pop	bp
  1366 | 000009D4 | C3                        | 	ret
  1367 |          |                           | ; Generated by c86 (BYU-NASM) 5.1 (beta) from yakc.i
  1368 |          |                           | 	CPU	8086
  1369 | 000009D5 | 90                        | 	ALIGN	2
  1370 | 000009D6 | E95915                    | 	jmp	main	; Jump to program start
  1371 | 000009D9 | 90                        | 	ALIGN	2
  1372 |          |                           | YKTickHandler:
  1373 |          |                           | 	; >>>>> Line:	35
  1374 |          |                           | 	; >>>>> void YKTickHandler(void){ 
  1375 | 000009DA | EB62                      | 	jmp	L_yakc_1
  1376 |          |                           | L_yakc_2:
  1377 |          |                           | 	; >>>>> Line:	38
  1378 |          |                           | 	; >>>>> YKTickCount++; 
  1379 | 000009DC | FF06[6A13]                | 	inc	word [YKTickCount]
  1380 |          |                           | 	; >>>>> Line:	40
  1381 |          |                           | 	; >>>>> temp = blockedHead; 
  1382 | 000009E0 | A1[8413]                  | 	mov	ax, word [blockedHead]
  1383 | 000009E3 | 8946FE                    | 	mov	word [bp-2], ax
  1384 |          |                           | 	; >>>>> Line:	41
  1385 |          |                           | 	; >>>>> while(temp != 0){ 
  1386 | 000009E6 | EB4B                      | 	jmp	L_yakc_4
  1387 |          |                           | L_yakc_3:
  1388 |          |                           | 	; >>>>> Line:	42
  1389 |          |                           | 	; >>>>> tempNext = temp->next; 
  1390 | 000009E8 | 8B76FE                    | 	mov	si, word [bp-2]
  1391 | 000009EB | 83C606                    | 	add	si, 6
  1392 | 000009EE | 8B04                      | 	mov	ax, word [si]
  1393 | 000009F0 | 8946FC                    | 	mov	word [bp-4], ax
  1394 |          |                           | 	; >>>>> Line:	43
  1395 |          |                           | 	; >>>>> (temp->taskDelay)--; 
  1396 | 000009F3 | 8B76FE                    | 	mov	si, word [bp-2]
  1397 | 000009F6 | 83C604                    | 	add	si, 4
  1398 | 000009F9 | FF0C                      | 	dec	word [si]
  1399 |          |                           | 	; >>>>> Line:	44
  1400 |          |                           | 	; >>>>> if (temp->taskDelay <= 0){ 
  1401 | 000009FB | 8B76FE                    | 	mov	si, word [bp-2]
  1402 | 000009FE | 83C604                    | 	add	si, 4
  1403 | 00000A01 | 8B04                      | 	mov	ax, word [si]
  1404 | 00000A03 | 85C0                      | 	test	ax, ax
  1405 | 00000A05 | 751E                      | 	jne	L_yakc_6
  1406 |          |                           | 	; >>>>> Line:	45
  1407 |          |                           | 	; >>>>> YKremoveUnsorted(temp, &blockedHead, &blockedTail); 
  1408 | 00000A07 | B8[8613]                  | 	mov	ax, blockedTail
  1409 | 00000A0A | 50                        | 	push	ax
  1410 | 00000A0B | B8[8413]                  | 	mov	ax, blockedHead
  1411 | 00000A0E | 50                        | 	push	ax
  1412 | 00000A0F | FF76FE                    | 	push	word [bp-2]
  1413 | 00000A12 | E87508                    | 	call	YKremoveUnsorted
  1414 | 00000A15 | 83C406                    | 	add	sp, 6
  1415 |          |                           | 	; >>>>> Line:	46
  1416 |          |                           | 	; >>>>> YKinsertSorted(temp, &readyHead); 
  1417 | 00000A18 | B8[8213]                  | 	mov	ax, readyHead
  1418 | 00000A1B | 50                        | 	push	ax
  1419 | 00000A1C | FF76FE                    | 	push	word [bp-2]
  1420 | 00000A1F | E85207                    | 	call	YKinsertSorted
  1421 | 00000A22 | 83C404                    | 	add	sp, 4
  1422 |          |                           | L_yakc_6:
  1423 |          |                           | 	; >>>>> Line:	48
  1424 |          |                           | 	; >>>>> if (tempNext != 0){ 
  1425 | 00000A25 | 8B46FC                    | 	mov	ax, word [bp-4]
  1426 | 00000A28 | 85C0                      | 	test	ax, ax
  1427 | 00000A2A | 7405                      | 	je	L_yakc_7
  1428 |          |                           | 	; >>>>> Line:	49
  1429 |          |                           | 	; >>>>> temp = tempNext; 
  1430 | 00000A2C | 8946FE                    | 	mov	word [bp-2], ax
  1431 | 00000A2F | EB02                      | 	jmp	L_yakc_8
  1432 |          |                           | L_yakc_7:
  1433 |          |                           | 	; >>>>> Line:	51
  1434 |          |                           | 	; >>>>> else break; 
  1435 | 00000A31 | EB07                      | 	jmp	L_yakc_5
  1436 |          |                           | L_yakc_8:
  1437 |          |                           | L_yakc_4:
  1438 | 00000A33 | 8B46FE                    | 	mov	ax, word [bp-2]
  1439 | 00000A36 | 85C0                      | 	test	ax, ax
  1440 | 00000A38 | 75AE                      | 	jne	L_yakc_3
  1441 |          |                           | L_yakc_5:
  1442 | 00000A3A | 89EC                      | 	mov	sp, bp
  1443 | 00000A3C | 5D                        | 	pop	bp
  1444 | 00000A3D | C3                        | 	ret
  1445 |          |                           | L_yakc_1:
  1446 | 00000A3E | 55                        | 	push	bp
  1447 | 00000A3F | 89E5                      | 	mov	bp, sp
  1448 | 00000A41 | 83EC04                    | 	sub	sp, 4
  1449 | 00000A44 | EB96                      | 	jmp	L_yakc_2
  1450 |          |                           | 	ALIGN	2
  1451 |          |                           | YKkeypress:
  1452 |          |                           | 	; >>>>> Line:	55
  1453 |          |                           | 	; >>>>> void YKkeypress(void){ 
  1454 | 00000A46 | EB04                      | 	jmp	L_yakc_10
  1455 |          |                           | L_yakc_11:
  1456 |          |                           | 	; >>>>> Line:	57
  1457 |          |                           | 	; >>>>> } 
  1458 | 00000A48 | 89EC                      | 	mov	sp, bp
  1459 | 00000A4A | 5D                        | 	pop	bp
  1460 | 00000A4B | C3                        | 	ret
  1461 |          |                           | L_yakc_10:
  1462 | 00000A4C | 55                        | 	push	bp
  1463 | 00000A4D | 89E5                      | 	mov	bp, sp
  1464 | 00000A4F | EBF7                      | 	jmp	L_yakc_11
  1465 | 00000A51 | 90                        | 	ALIGN	2
  1466 |          |                           | YKEventCreate:
  1467 |          |                           | 	; >>>>> Line:	60
  1468 |          |                           | 	; >>>>> YKEVENT *YKEventCreate(unsigned initialValue){ 
  1469 | 00000A52 | EB42                      | 	jmp	L_yakc_13
  1470 |          |                           | L_yakc_14:
  1471 |          |                           | 	; >>>>> Line:	62
  1472 |          |                           | 	; >>>>> YKEnterMutex(); 
  1473 | 00000A54 | E833FF                    | 	call	YKEnterMutex
  1474 |          |                           | 	; >>>>> Line:	63
  1475 |          |                           | 	; >>>>> etemp = &YKevents[YKeventCount]; 
  1476 | 00000A57 | A1[7A13]                  | 	mov	ax, word [YKeventCount]
  1477 | 00000A5A | B90600                    | 	mov	cx, 6
  1478 | 00000A5D | F7E9                      | 	imul	cx
  1479 | 00000A5F | 05[4014]                  | 	add	ax, YKevents
  1480 | 00000A62 | 8946FE                    | 	mov	word [bp-2], ax
  1481 |          |                           | 	; >>>>> Line:	64
  1482 |          |                           | 	; >>>>> etemp->value = initialValue; 
  1483 | 00000A65 | 8B76FE                    | 	mov	si, word [bp-2]
  1484 | 00000A68 | 8B4604                    | 	mov	ax, word [bp+4]
  1485 | 00000A6B | 8904                      | 	mov	word [si], ax
  1486 |          |                           | 	; >>>>> Line:	65
  1487 |          |                           | 	; >>>>> etemp->pendHead = 0; 
  1488 | 00000A6D | 8B76FE                    | 	mov	si, word [bp-2]
  1489 | 00000A70 | 83C602                    | 	add	si, 2
  1490 | 00000A73 | C7040000                  | 	mov	word [si], 0
  1491 |          |                           | 	; >>>>> Line:	66
  1492 |          |                           | 	; >>>>> etemp->pendTail = 0; 
  1493 | 00000A77 | 8B76FE                    | 	mov	si, word [bp-2]
  1494 | 00000A7A | 83C604                    | 	add	si, 4
  1495 | 00000A7D | C7040000                  | 	mov	word [si], 0
  1496 |          |                           | 	; >>>>> Line:	67
  1497 |          |                           | 	; >>>>> YKeventCount++; 
  1498 | 00000A81 | FF06[7A13]                | 	inc	word [YKeventCount]
  1499 |          |                           | 	; >>>>> Line:	68
  1500 |          |                           | 	; >>>>> if (YKRunFlag == 1){ 
  1501 | 00000A85 | 833E[7C13]01              | 	cmp	word [YKRunFlag], 1
  1502 | 00000A8A | 7503                      | 	jne	L_yakc_15
  1503 |          |                           | 	; >>>>> Line:	69
  1504 |          |                           | 	; >>>>> YKExitMutex(); 
  1505 | 00000A8C | E8FDFE                    | 	call	YKExitMutex
  1506 |          |                           | L_yakc_15:
  1507 |          |                           | 	; >>>>> Line:	71
  1508 |          |                           | 	; >>>>> return etemp; 
  1509 | 00000A8F | 8B46FE                    | 	mov	ax, word [bp-2]
  1510 |          |                           | L_yakc_16:
  1511 | 00000A92 | 89EC                      | 	mov	sp, bp
  1512 | 00000A94 | 5D                        | 	pop	bp
  1513 | 00000A95 | C3                        | 	ret
  1514 |          |                           | L_yakc_13:
  1515 | 00000A96 | 55                        | 	push	bp
  1516 | 00000A97 | 89E5                      | 	mov	bp, sp
  1517 | 00000A99 | 51                        | 	push	cx
  1518 | 00000A9A | EBB8                      | 	jmp	L_yakc_14
  1519 |          |                           | 	ALIGN	2
  1520 |          |                           | YKEventPend:
  1521 |          |                           | 	; >>>>> Line:	74
  1522 |          |                           | 	; >>>>> unsigned YKEventPend(YKEVENT *event, unsigned eventMask, int waitMode){ 
  1523 | 00000A9C | E99000                    | 	jmp	L_yakc_18
  1524 |          |                           | L_yakc_19:
  1525 |          |                           | 	; >>>>> Line:	77
  1526 |          |                           | 	; >>>>> YKEnterMutex(); 
  1527 | 00000A9F | E8E8FE                    | 	call	YKEnterMutex
  1528 |          |                           | 	; >>>>> Line:	78
  1529 |          |                           | 	; >>>>> tempMask = eventMask & (event->value); 
  1530 | 00000AA2 | 8B4606                    | 	mov	ax, word [bp+6]
  1531 | 00000AA5 | 8B7604                    | 	mov	si, word [bp+4]
  1532 | 00000AA8 | 2304                      | 	and	ax, word [si]
  1533 | 00000AAA | 8946FE                    | 	mov	word [bp-2], ax
  1534 |          |                           | 	; >>>>> Line:	79
  1535 |          |                           | 	; >>>>> if (waitMode == 1){ 
  1536 | 00000AAD | 837E0801                  | 	cmp	word [bp+8], 1
  1537 | 00000AB1 | 7513                      | 	jne	L_yakc_20
  1538 |          |                           | 	; >>>>> Line:	80
  1539 |          |                           | 	; >>>>> if (tempMask > 0) { 
  1540 | 00000AB3 | 8B46FE                    | 	mov	ax, word [bp-2]
  1541 | 00000AB6 | 85C0                      | 	test	ax, ax
  1542 | 00000AB8 | 740A                      | 	je	L_yakc_21
  1543 |          |                           | 	; >>>>> Line:	81
  1544 |          |                           | 	; >>>>> YKExitMutex(); 
  1545 | 00000ABA | E8CFFE                    | 	call	YKExitMutex
  1546 |          |                           | 	; >>>>> Line:	82
  1547 |          |                           | 	; >>>>> return event->value; 
  1548 | 00000ABD | 8B7604                    | 	mov	si, word [bp+4]
  1549 | 00000AC0 | 8B04                      | 	mov	ax, word [si]
  1550 | 00000AC2 | EB67                      | 	jmp	L_yakc_22
  1551 |          |                           | L_yakc_21:
  1552 | 00000AC4 | EB12                      | 	jmp	L_yakc_23
  1553 |          |                           | L_yakc_20:
  1554 |          |                           | 	; >>>>> Line:	86
  1555 |          |                           | 	; >>>>> if (tempMask == eventMask) { 
  1556 | 00000AC6 | 8B4606                    | 	mov	ax, word [bp+6]
  1557 | 00000AC9 | 3B46FE                    | 	cmp	ax, word [bp-2]
  1558 | 00000ACC | 750A                      | 	jne	L_yakc_24
  1559 |          |                           | 	; >>>>> Line:	87
  1560 |          |                           | 	; >>>>> emp->eventWait 
  1561 | 00000ACE | E8BBFE                    | 	call	YKExitMutex
  1562 |          |                           | 	; >>>>> Line:	88
  1563 |          |                           | 	; >>>>> return event->value; 
  1564 | 00000AD1 | 8B7604                    | 	mov	si, word [bp+4]
  1565 | 00000AD4 | 8B04                      | 	mov	ax, word [si]
  1566 | 00000AD6 | EB53                      | 	jmp	L_yakc_22
  1567 |          |                           | L_yakc_24:
  1568 |          |                           | L_yakc_23:
  1569 |          |                           | 	; >>>>> Line:	92
  1570 |          |                           | 	; >>>>> if (readyHead != 0){ 
  1571 | 00000AD8 | A1[8213]                  | 	mov	ax, word [readyHead]
  1572 | 00000ADB | 85C0                      | 	test	ax, ax
  1573 | 00000ADD | 7444                      | 	je	L_yakc_25
  1574 |          |                           | 	; >>>>> Line:	93
  1575 |          |                           | 	; >>>>> item = YKpopSorted(&readyHead); 
  1576 | 00000ADF | B8[8213]                  | 	mov	ax, readyHead
  1577 | 00000AE2 | 50                        | 	push	ax
  1578 | 00000AE3 | E86A07                    | 	call	YKpopSorted
  1579 | 00000AE6 | 83C402                    | 	add	sp, 2
  1580 | 00000AE9 | 8946FC                    | 	mov	word [bp-4], ax
  1581 |          |                           | 	; >>>>> Line:	94
  1582 |          |                           | 	; >>>>> YKinsertUnsorted(item, &(event->pendHead), &(event->pendTail)); 
  1583 | 00000AEC | 8B4604                    | 	mov	ax, word [bp+4]
  1584 | 00000AEF | 83C004                    | 	add	ax, 4
  1585 | 00000AF2 | 50                        | 	push	ax
  1586 | 00000AF3 | 8B4604                    | 	mov	ax, word [bp+4]
  1587 | 00000AF6 | 83C002                    | 	add	ax, 2
  1588 | 00000AF9 | 50                        | 	push	ax
  1589 | 00000AFA | FF76FC                    | 	push	word [bp-4]
  1590 | 00000AFD | E8FC07                    | 	call	YKinsertUnsorted
  1591 | 00000B00 | 83C406                    | 	add	sp, 6
  1592 |          |                           | 	; >>>>> Line:	95
  1593 |          |                           | 	; >>>>> item->eventWaitMode = waitMode; 
  1594 | 00000B03 | 8B76FC                    | 	mov	si, word [bp-4]
  1595 | 00000B06 | 83C60A                    | 	add	si, 10
  1596 | 00000B09 | 8B4608                    | 	mov	ax, word [bp+8]
  1597 | 00000B0C | 8904                      | 	mov	word [si], ax
  1598 |          |                           | 	; >>>>> Line:	96
  1599 |          |                           | 	; >>>>> item->eventMask = eventMask; 
  1600 | 00000B0E | 8B76FC                    | 	mov	si, word [bp-4]
  1601 | 00000B11 | 83C60C                    | 	add	si, 12
  1602 | 00000B14 | 8B4606                    | 	mov	ax, word [bp+6]
  1603 | 00000B17 | 8904                      | 	mov	word [si], ax
  1604 |          |                           | 	; >>>>> Line:	97
  1605 |          |                           | 	; >>>>> YKScheduler(1); 
  1606 | 00000B19 | B80100                    | 	mov	ax, 1
  1607 | 00000B1C | 50                        | 	push	ax
  1608 | 00000B1D | E82805                    | 	call	YKScheduler
  1609 | 00000B20 | 83C402                    | 	add	sp, 2
  1610 |          |                           | L_yakc_25:
  1611 |          |                           | 	; >>>>> Line:	99
  1612 |          |                           | 	; >>>>> YKExitMutex(); 
  1613 | 00000B23 | E866FE                    | 	call	YKExitMutex
  1614 |          |                           | 	; >>>>> Line:	100
  1615 |          |                           | 	; >>>>> return event->value; 
  1616 | 00000B26 | 8B7604                    | 	mov	si, word [bp+4]
  1617 | 00000B29 | 8B04                      | 	mov	ax, word [si]
  1618 |          |                           | L_yakc_22:
  1619 | 00000B2B | 89EC                      | 	mov	sp, bp
  1620 | 00000B2D | 5D                        | 	pop	bp
  1621 | 00000B2E | C3                        | 	ret
  1622 |          |                           | L_yakc_18:
  1623 | 00000B2F | 55                        | 	push	bp
  1624 | 00000B30 | 89E5                      | 	mov	bp, sp
  1625 | 00000B32 | 83EC04                    | 	sub	sp, 4
  1626 | 00000B35 | E967FF                    | 	jmp	L_yakc_19
  1627 |          |                           | 	ALIGN	2
  1628 |          |                           | YKEventSet:
  1629 |          |                           | 	; >>>>> Line:	103
  1630 |          |                           | 	; >>>>> void YKEventSet(YKEVENT *event, unsigned eventMask){ 
  1631 | 00000B38 | E9C200                    | 	jmp	L_yakc_27
  1632 |          |                           | L_yakc_28:
  1633 |          |                           | 	; >>>>> Line:	106
  1634 |          |                           | 	; >>>>> YKEnterMutex(); 
  1635 | 00000B3B | E84CFE                    | 	call	YKEnterMutex
  1636 |          |                           | 	; >>>>> Line:	107
  1637 |          |                           | 	; >>>>> event->value = event->value | eventMask; 
  1638 | 00000B3E | 8B7604                    | 	mov	si, word [bp+4]
  1639 | 00000B41 | 8B04                      | 	mov	ax, word [si]
  1640 | 00000B43 | 0B4606                    | 	or	ax, word [bp+6]
  1641 | 00000B46 | 8904                      | 	mov	word [si], ax
  1642 |          |                           | 	; >>>>> Line:	108
  1643 |          |                           | 	; >>>>> temp = event->pendHead; 
  1644 | 00000B48 | 8B7604                    | 	mov	si, word [bp+4]
  1645 | 00000B4B | 83C602                    | 	add	si, 2
  1646 | 00000B4E | 8B04                      | 	mov	ax, word [si]
  1647 | 00000B50 | 8946FE                    | 	mov	word [bp-2], ax
  1648 |          |                           | 	; >>>>> Line:	109
  1649 |          |                           | 	; >>>>> while (temp != 0){ 
  1650 | 00000B53 | E98500                    | 	jmp	L_yakc_30
  1651 |          |                           | L_yakc_29:
  1652 |          |                           | 	; >>>>> Line:	110
  1653 |          |                           | 	; >>>>> if (temp->eventWait 
  1654 | 00000B56 | 8B76FE                    | 	mov	si, word [bp-2]
  1655 | 00000B59 | 83C60A                    | 	add	si, 10
  1656 | 00000B5C | 8B04                      | 	mov	ax, word [si]
  1657 | 00000B5E | 85C0                      | 	test	ax, ax
  1658 | 00000B60 | 7528                      | 	jne	L_yakc_32
  1659 |          |                           | 	; >>>>> Line:	111
  1660 |          |                           | 	; >>>>> if (temp->eventMask != (temp->eventMask & event->value)){ 
  1661 | 00000B62 | 8B76FE                    | 	mov	si, word [bp-2]
  1662 | 00000B65 | 83C60C                    | 	add	si, 12
  1663 | 00000B68 | 8B04                      | 	mov	ax, word [si]
  1664 | 00000B6A | 8B7604                    | 	mov	si, word [bp+4]
  1665 | 00000B6D | 2304                      | 	and	ax, word [si]
  1666 | 00000B6F | 8B76FE                    | 	mov	si, word [bp-2]
  1667 | 00000B72 | 83C60C                    | 	add	si, 12
  1668 | 00000B75 | 8B14                      | 	mov	dx, word [si]
  1669 | 00000B77 | 39C2                      | 	cmp	dx, ax
  1670 | 00000B79 | 740D                      | 	je	L_yakc_33
  1671 |          |                           | 	; >>>>> Line:	112
  1672 |          |                           | 	; >>>>> temp = temp->next; 
  1673 | 00000B7B | 8B76FE                    | 	mov	si, word [bp-2]
  1674 | 00000B7E | 83C606                    | 	add	si, 6
  1675 | 00000B81 | 8B04                      | 	mov	ax, word [si]
  1676 | 00000B83 | 8946FE                    | 	mov	word [bp-2], ax
  1677 |          |                           | 	; >>>>> Line:	113
  1678 |          |                           | 	; >>>>> continue; 
  1679 | 00000B86 | EB53                      | 	jmp	L_yakc_30
  1680 |          |                           | L_yakc_33:
  1681 | 00000B88 | EB1C                      | 	jmp	L_yakc_34
  1682 |          |                           | L_yakc_32:
  1683 |          |                           | 	; >>>>> Line:	117
  1684 |          |                           | 	; >>>>> if ((temp->eventMask & event->value) == 0){ 
  1685 | 00000B8A | 8B76FE                    | 	mov	si, word [bp-2]
  1686 | 00000B8D | 83C60C                    | 	add	si, 12
  1687 | 00000B90 | 8B04                      | 	mov	ax, word [si]
  1688 | 00000B92 | 8B7604                    | 	mov	si, word [bp+4]
  1689 | 00000B95 | 2304                      | 	and	ax, word [si]
  1690 | 00000B97 | 750D                      | 	jne	L_yakc_35
  1691 |          |                           | 	; >>>>> Line:	118
  1692 |          |                           | 	; >>>>> temp = temp->next; 
  1693 | 00000B99 | 8B76FE                    | 	mov	si, word [bp-2]
  1694 | 00000B9C | 83C606                    | 	add	si, 6
  1695 | 00000B9F | 8B04                      | 	mov	ax, word [si]
  1696 | 00000BA1 | 8946FE                    | 	mov	word [bp-2], ax
  1697 |          |                           | 	; >>>>> Line:	119
  1698 |          |                           | 	; >>>>> continue; 
  1699 | 00000BA4 | EB35                      | 	jmp	L_yakc_30
  1700 |          |                           | L_yakc_35:
  1701 |          |                           | L_yakc_34:
  1702 |          |                           | 	; >>>>> Line:	122
  1703 |          |                           | 	; >>>>> tempNext = temp->next; 
  1704 | 00000BA6 | 8B76FE                    | 	mov	si, word [bp-2]
  1705 | 00000BA9 | 83C606                    | 	add	si, 6
  1706 | 00000BAC | 8B04                      | 	mov	ax, word [si]
  1707 | 00000BAE | 8946FC                    | 	mov	word [bp-4], ax
  1708 |          |                           | 	; >>>>> Line:	123
  1709 |          |                           | 	; >>>>> YKremoveUnsorted(temp, &(event->pendHead), &(event->pendTail)); 
  1710 | 00000BB1 | 8B4604                    | 	mov	ax, word [bp+4]
  1711 | 00000BB4 | 83C004                    | 	add	ax, 4
  1712 | 00000BB7 | 50                        | 	push	ax
  1713 | 00000BB8 | 8B4604                    | 	mov	ax, word [bp+4]
  1714 | 00000BBB | 83C002                    | 	add	ax, 2
  1715 | 00000BBE | 50                        | 	push	ax
  1716 | 00000BBF | FF76FE                    | 	push	word [bp-2]
  1717 | 00000BC2 | E8C506                    | 	call	YKremoveUnsorted
  1718 | 00000BC5 | 83C406                    | 	add	sp, 6
  1719 |          |                           | 	; >>>>> Line:	124
  1720 |          |                           | 	; >>>>> YKinsertSorted(temp, &readyHead); 
  1721 | 00000BC8 | B8[8213]                  | 	mov	ax, readyHead
  1722 | 00000BCB | 50                        | 	push	ax
  1723 | 00000BCC | FF76FE                    | 	push	word [bp-2]
  1724 | 00000BCF | E8A205                    | 	call	YKinsertSorted
  1725 | 00000BD2 | 83C404                    | 	add	sp, 4
  1726 |          |                           | 	; >>>>> Line:	125
  1727 |          |                           | 	; >>>>> temp = tempNext; 
  1728 | 00000BD5 | 8B46FC                    | 	mov	ax, word [bp-4]
  1729 | 00000BD8 | 8946FE                    | 	mov	word [bp-2], ax
  1730 |          |                           | L_yakc_30:
  1731 | 00000BDB | 8B46FE                    | 	mov	ax, word [bp-2]
  1732 | 00000BDE | 85C0                      | 	test	ax, ax
  1733 | 00000BE0 | 7403E971FF                | 	jne	L_yakc_29
  1734 |          |                           | L_yakc_31:
  1735 |          |                           | 	; >>>>> Line:	127
  1736 |          |                           | 	; >>>>> if (YKIsrDepth == 0){ 
  1737 | 00000BE5 | A1[7E13]                  | 	mov	ax, word [YKIsrDepth]
  1738 | 00000BE8 | 85C0                      | 	test	ax, ax
  1739 | 00000BEA | 750A                      | 	jne	L_yakc_36
  1740 |          |                           | 	; >>>>> Line:	128
  1741 |          |                           | 	; >>>>> YKScheduler(1); 
  1742 | 00000BEC | B80100                    | 	mov	ax, 1
  1743 | 00000BEF | 50                        | 	push	ax
  1744 | 00000BF0 | E85504                    | 	call	YKScheduler
  1745 | 00000BF3 | 83C402                    | 	add	sp, 2
  1746 |          |                           | L_yakc_36:
  1747 |          |                           | 	; >>>>> Line:	130
  1748 |          |                           | 	; >>>>> YKExitMutex(); 
  1749 | 00000BF6 | E893FD                    | 	call	YKExitMutex
  1750 | 00000BF9 | 89EC                      | 	mov	sp, bp
  1751 | 00000BFB | 5D                        | 	pop	bp
  1752 | 00000BFC | C3                        | 	ret
  1753 |          |                           | L_yakc_27:
  1754 | 00000BFD | 55                        | 	push	bp
  1755 | 00000BFE | 89E5                      | 	mov	bp, sp
  1756 | 00000C00 | 83EC04                    | 	sub	sp, 4
  1757 | 00000C03 | E935FF                    | 	jmp	L_yakc_28
  1758 |          |                           | 	ALIGN	2
  1759 |          |                           | YKEventReset:
  1760 |          |                           | 	; >>>>> Line:	133
  1761 |          |                           | 	; >>>>> void YKEventReset(YKEVENT *event, unsigned eventMask){ 
  1762 | 00000C06 | EB16                      | 	jmp	L_yakc_38
  1763 |          |                           | L_yakc_39:
  1764 |          |                           | 	; >>>>> Line:	134
  1765 |          |                           | 	; >>>>> YKEnterMutex(); 
  1766 | 00000C08 | E87FFD                    | 	call	YKEnterMutex
  1767 |          |                           | 	; >>>>> Line:	135
  1768 |          |                           | 	; >>>>> event- 
  1769 | 00000C0B | 8B4606                    | 	mov	ax, word [bp+6]
  1770 | 00000C0E | F7D0                      | 	not	ax
  1771 | 00000C10 | 8B7604                    | 	mov	si, word [bp+4]
  1772 | 00000C13 | 2304                      | 	and	ax, word [si]
  1773 | 00000C15 | 8904                      | 	mov	word [si], ax
  1774 |          |                           | 	; >>>>> Line:	136
  1775 |          |                           | 	; >>>>> YKExitMutex(); 
  1776 | 00000C17 | E872FD                    | 	call	YKExitMutex
  1777 | 00000C1A | 89EC                      | 	mov	sp, bp
  1778 | 00000C1C | 5D                        | 	pop	bp
  1779 | 00000C1D | C3                        | 	ret
  1780 |          |                           | L_yakc_38:
  1781 | 00000C1E | 55                        | 	push	bp
  1782 | 00000C1F | 89E5                      | 	mov	bp, sp
  1783 | 00000C21 | EBE5                      | 	jmp	L_yakc_39
  1784 | 00000C23 | 90                        | 	ALIGN	2
  1785 |          |                           | YKQCreate:
  1786 |          |                           | 	; >>>>> Line:	140
  1787 |          |                           | 	; >>>>> YKQ *YKQCreate(void **start, unsigned size){ 
  1788 | 00000C24 | EB73                      | 	jmp	L_yakc_41
  1789 |          |                           | L_yakc_42:
  1790 |          |                           | 	; >>>>> Line:	142
  1791 |          |                           | 	; >>>>> YKEnterMutex(); 
  1792 | 00000C26 | E861FD                    | 	call	YKEnterMutex
  1793 |          |                           | 	; >>>>> Line:	143
  1794 |          |                           | 	; >>>>> qtemp = &YKqueues[YKqueueCount]; 
  1795 | 00000C29 | A1[7413]                  | 	mov	ax, word [YKqueueCount]
  1796 | 00000C2C | B90E00                    | 	mov	cx, 14
  1797 | 00000C2F | F7E9                      | 	imul	cx
  1798 | 00000C31 | 05[1614]                  | 	add	ax, YKqueues
  1799 | 00000C34 | 8946FE                    | 	mov	word [bp-2], ax
  1800 |          |                           | 	; >>>>> Line:	144
  1801 |          |                           | 	; >>>>> qtemp->nextEmpty = (int*)start; 
  1802 | 00000C37 | 8B76FE                    | 	mov	si, word [bp-2]
  1803 | 00000C3A | 8B4604                    | 	mov	ax, word [bp+4]
  1804 | 00000C3D | 8904                      | 	mov	word [si], ax
  1805 |          |                           | 	; >>>>> Line:	145
  1806 |          |                           | 	; >>>>> qtemp->oldest = 0; 
  1807 | 00000C3F | 8B76FE                    | 	mov	si, word [bp-2]
  1808 | 00000C42 | 83C602                    | 	add	si, 2
  1809 | 00000C45 | C7040000                  | 	mov	word [si], 0
  1810 |          |                           | 	; >>>>> Line:	146
  1811 |          |                           | 	; >>>>> qtemp->qSize = size; 
  1812 | 00000C49 | 8B76FE                    | 	mov	si, word [bp-2]
  1813 | 00000C4C | 83C608                    | 	add	si, 8
  1814 | 00000C4F | 8B4606                    | 	mov	ax, word [bp+6]
  1815 | 00000C52 | 8904                      | 	mov	word [si], ax
  1816 |          |                           | 	; >>>>> Line:	147
  1817 |          |                           | 	; >>>>> qtemp->qCount = 0; 
  1818 | 00000C54 | 8B76FE                    | 	mov	si, word [bp-2]
  1819 | 00000C57 | 83C60A                    | 	add	si, 10
  1820 | 00000C5A | C7040000                  | 	mov	word [si], 0
  1821 |          |                           | 	; >>>>> Line:	148
  1822 |          |                           | 	; >>>>> qtemp->qStart = (int*)start; 
  1823 | 00000C5E | 8B76FE                    | 	mov	si, word [bp-2]
  1824 | 00000C61 | 83C606                    | 	add	si, 6
  1825 | 00000C64 | 8B4604                    | 	mov	ax, word [bp+4]
  1826 | 00000C67 | 8904                      | 	mov	word [si], ax
  1827 |          |                           | 	; >>>>> Line:	149
  1828 |          |                           | 	; >>>>> qtemp->qEnd = ((int*)start)+(size-1); 
  1829 | 00000C69 | 8B4606                    | 	mov	ax, word [bp+6]
  1830 | 00000C6C | 48                        | 	dec	ax
  1831 | 00000C6D | D1E0                      | 	shl	ax, 1
  1832 | 00000C6F | 034604                    | 	add	ax, word [bp+4]
  1833 | 00000C72 | 8B76FE                    | 	mov	si, word [bp-2]
  1834 | 00000C75 | 83C604                    | 	add	si, 4
  1835 | 00000C78 | 8904                      | 	mov	word [si], ax
  1836 |          |                           | 	; >>>>> Line:	150
  1837 |          |                           | 	; >>>>> qtemp->qBlockedHead = 0; 
  1838 | 00000C7A | 8B76FE                    | 	mov	si, word [bp-2]
  1839 | 00000C7D | 83C60C                    | 	add	si, 12
  1840 | 00000C80 | C7040000                  | 	mov	word [si], 0
  1841 |          |                           | 	; >>>>> Line:	151
  1842 |          |                           | 	; >>>>> YKqueueCount++; 
  1843 | 00000C84 | FF06[7413]                | 	inc	word [YKqueueCount]
  1844 |          |                           | 	; >>>>> Line:	152
  1845 |          |                           | 	; >>>>> if (YKRunFlag == 1){ 
  1846 | 00000C88 | 833E[7C13]01              | 	cmp	word [YKRunFlag], 1
  1847 | 00000C8D | 7503                      | 	jne	L_yakc_43
  1848 |          |                           | 	; >>>>> Line:	153
  1849 |          |                           | 	; >>>>> YKExitMutex(); 
  1850 | 00000C8F | E8FAFC                    | 	call	YKExitMutex
  1851 |          |                           | L_yakc_43:
  1852 |          |                           | 	; >>>>> Line:	155
  1853 |          |                           | 	; >>>>> return qtemp; 
  1854 | 00000C92 | 8B46FE                    | 	mov	ax, word [bp-2]
  1855 |          |                           | L_yakc_44:
  1856 | 00000C95 | 89EC                      | 	mov	sp, bp
  1857 | 00000C97 | 5D                        | 	pop	bp
  1858 | 00000C98 | C3                        | 	ret
  1859 |          |                           | L_yakc_41:
  1860 | 00000C99 | 55                        | 	push	bp
  1861 | 00000C9A | 89E5                      | 	mov	bp, sp
  1862 | 00000C9C | 51                        | 	push	cx
  1863 | 00000C9D | EB87                      | 	jmp	L_yakc_42
  1864 | 00000C9F | 90                        | 	ALIGN	2
  1865 |          |                           | YKQPend:
  1866 |          |                           | 	; >>>>> Line:	158
  1867 |          |                           | 	; >>>>> void *YKQPend(YKQ *queue){ 
  1868 | 00000CA0 | E99700                    | 	jmp	L_yakc_46
  1869 |          |                           | L_yakc_47:
  1870 |          |                           | 	; >>>>> Line:	161
  1871 |          |                           | 	; >>>>> YKEnterMutex(); 
  1872 | 00000CA3 | E8E4FC                    | 	call	YKEnterMutex
  1873 |          |                           | 	; >>>>> Line:	162
  1874 |          |                           | 	; >>>>> if (queue->oldest == 0){ 
  1875 | 00000CA6 | 8B7604                    | 	mov	si, word [bp+4]
  1876 | 00000CA9 | 83C602                    | 	add	si, 2
  1877 | 00000CAC | 8B04                      | 	mov	ax, word [si]
  1878 | 00000CAE | 85C0                      | 	test	ax, ax
  1879 | 00000CB0 | 7527                      | 	jne	L_yakc_48
  1880 |          |                           | 	; >>>>> Line:	163
  1881 |          |                           | 	; >>>>> item = YKpopSorted(&readyHead); 
  1882 | 00000CB2 | B8[8213]                  | 	mov	ax, readyHead
  1883 | 00000CB5 | 50                        | 	push	ax
  1884 | 00000CB6 | E89705                    | 	call	YKpopSorted
  1885 | 00000CB9 | 83C402                    | 	add	sp, 2
  1886 | 00000CBC | 8946FC                    | 	mov	word [bp-4], ax
  1887 |          |                           | 	; >>>>> Line:	164
  1888 |          |                           | 	; >>>>> YKinsertSorted(item, &(queue->qBlockedHead)); 
  1889 | 00000CBF | 8B4604                    | 	mov	ax, word [bp+4]
  1890 | 00000CC2 | 83C00C                    | 	add	ax, 12
  1891 | 00000CC5 | 50                        | 	push	ax
  1892 | 00000CC6 | FF76FC                    | 	push	word [bp-4]
  1893 | 00000CC9 | E8A804                    | 	call	YKinsertSorted
  1894 | 00000CCC | 83C404                    | 	add	sp, 4
  1895 |          |                           | 	; >>>>> Line:	165
  1896 |          |                           | 	; >>>>> YKScheduler(1); 
  1897 | 00000CCF | B80100                    | 	mov	ax, 1
  1898 | 00000CD2 | 50                        | 	push	ax
  1899 | 00000CD3 | E87203                    | 	call	YKScheduler
  1900 | 00000CD6 | 83C402                    | 	add	sp, 2
  1901 |          |                           | L_yakc_48:
  1902 |          |                           | 	; >>>>> Line:	167
  1903 |          |                           | 	; >>>>> retMSG = (void*) *(queue->oldest); 
  1904 | 00000CD9 | 8B7604                    | 	mov	si, word [bp+4]
  1905 | 00000CDC | 83C602                    | 	add	si, 2
  1906 | 00000CDF | 8B34                      | 	mov	si, word [si]
  1907 | 00000CE1 | 8B04                      | 	mov	ax, word [si]
  1908 | 00000CE3 | 8946FE                    | 	mov	word [bp-2], ax
  1909 |          |                           | 	; >>>>> Line:	168
  1910 |          |                           | 	; >>>>> (queue->oldest)++; 
  1911 | 00000CE6 | 8B7604                    | 	mov	si, word [bp+4]
  1912 | 00000CE9 | 83C602                    | 	add	si, 2
  1913 | 00000CEC | 830402                    | 	add	word [si], 2
  1914 |          |                           | 	; >>>>> Line:	169
  1915 |          |                           | 	; >>>>> queue->qCount--; 
  1916 | 00000CEF | 8B7604                    | 	mov	si, word [bp+4]
  1917 | 00000CF2 | 83C60A                    | 	add	si, 10
  1918 | 00000CF5 | FF0C                      | 	dec	word [si]
  1919 |          |                           | 	; >>>>> Line:	170
  1920 |          |                           | 	; >>>>> if (queue->qCount <= 0){ 
  1921 | 00000CF7 | 8B7604                    | 	mov	si, word [bp+4]
  1922 | 00000CFA | 83C60A                    | 	add	si, 10
  1923 | 00000CFD | 833C00                    | 	cmp	word [si], 0
  1924 | 00000D00 | 7F0C                      | 	jg	L_yakc_49
  1925 |          |                           | 	; >>>>> Line:	171
  1926 |          |                           | 	; >>>>> queue->oldest = 0; 
  1927 | 00000D02 | 8B7604                    | 	mov	si, word [bp+4]
  1928 | 00000D05 | 83C602                    | 	add	si, 2
  1929 | 00000D08 | C7040000                  | 	mov	word [si], 0
  1930 | 00000D0C | EB22                      | 	jmp	L_yakc_50
  1931 |          |                           | L_yakc_49:
  1932 |          |                           | 	; >>>>> Line:	173
  1933 |          |                           | 	; >>>>> else if ((queue->oldest) > (queue->qEnd)){ 
  1934 | 00000D0E | 8B7604                    | 	mov	si, word [bp+4]
  1935 | 00000D11 | 83C602                    | 	add	si, 2
  1936 | 00000D14 | 8B7E04                    | 	mov	di, word [bp+4]
  1937 | 00000D17 | 83C704                    | 	add	di, 4
  1938 | 00000D1A | 8B05                      | 	mov	ax, word [di]
  1939 | 00000D1C | 3B04                      | 	cmp	ax, word [si]
  1940 | 00000D1E | 7310                      | 	jae	L_yakc_51
  1941 |          |                           | 	; >>>>> Line:	174
  1942 |          |                           | 	; >>>>> queue->oldest = queue->qStart; 
  1943 | 00000D20 | 8B7604                    | 	mov	si, word [bp+4]
  1944 | 00000D23 | 83C606                    | 	add	si, 6
  1945 | 00000D26 | 8B7E04                    | 	mov	di, word [bp+4]
  1946 | 00000D29 | 83C702                    | 	add	di, 2
  1947 | 00000D2C | 8B04                      | 	mov	ax, word [si]
  1948 | 00000D2E | 8905                      | 	mov	word [di], ax
  1949 |          |                           | L_yakc_51:
  1950 |          |                           | L_yakc_50:
  1951 |          |                           | 	; >>>>> Line:	176
  1952 |          |                           | 	; >>>>> YKExitMutex(); 
  1953 | 00000D30 | E859FC                    | 	call	YKExitMutex
  1954 |          |                           | 	; >>>>> Line:	177
  1955 |          |                           | 	; >>>>> return (void*)retMSG; 
  1956 | 00000D33 | 8B46FE                    | 	mov	ax, word [bp-2]
  1957 |          |                           | L_yakc_52:
  1958 | 00000D36 | 89EC                      | 	mov	sp, bp
  1959 | 00000D38 | 5D                        | 	pop	bp
  1960 | 00000D39 | C3                        | 	ret
  1961 |          |                           | L_yakc_46:
  1962 | 00000D3A | 55                        | 	push	bp
  1963 | 00000D3B | 89E5                      | 	mov	bp, sp
  1964 | 00000D3D | 83EC04                    | 	sub	sp, 4
  1965 | 00000D40 | E960FF                    | 	jmp	L_yakc_47
  1966 | 00000D43 | 90                        | 	ALIGN	2
  1967 |          |                           | YKQPost:
  1968 |          |                           | 	; >>>>> Line:	180
  1969 |          |                           | 	; >>>>> int YKQPost(YKQ *queue, void *msg){ 
  1970 | 00000D44 | E99D00                    | 	jmp	L_yakc_54
  1971 |          |                           | L_yakc_55:
  1972 |          |                           | 	; >>>>> Line:	182
  1973 |          |                           | 	; >>>>> YKEnterMutex(); 
  1974 | 00000D47 | E840FC                    | 	call	YKEnterMutex
  1975 |          |                           | 	; >>>>> Line:	183
  1976 |          |                           | 	; >>>>> if ((queue->qCount) >= (queue->qSize)){ 
  1977 | 00000D4A | 8B7604                    | 	mov	si, word [bp+4]
  1978 | 00000D4D | 83C60A                    | 	add	si, 10
  1979 | 00000D50 | 8B7E04                    | 	mov	di, word [bp+4]
  1980 | 00000D53 | 83C708                    | 	add	di, 8
  1981 | 00000D56 | 8B05                      | 	mov	ax, word [di]
  1982 | 00000D58 | 3B04                      | 	cmp	ax, word [si]
  1983 | 00000D5A | 7F07                      | 	jg	L_yakc_56
  1984 |          |                           | 	; >>>>> Line:	184
  1985 |          |                           | 	; >>>>> YKExitMutex(); 
  1986 | 00000D5C | E82DFC                    | 	call	YKExitMutex
  1987 |          |                           | 	; >>>>> Line:	185
  1988 |          |                           | 	; >>>>> nt = 0; 
  1989 | 00000D5F | 31C0                      | 	xor	ax, ax
  1990 | 00000D61 | EB7D                      | 	jmp	L_yakc_57
  1991 |          |                           | L_yakc_56:
  1992 |          |                           | 	; >>>>> Line:	187
  1993 |          |                           | 	; >>>>> if((queue->qCount) <= 0){ 
  1994 | 00000D63 | 8B7604                    | 	mov	si, word [bp+4]
  1995 | 00000D66 | 83C60A                    | 	add	si, 10
  1996 | 00000D69 | 833C00                    | 	cmp	word [si], 0
  1997 | 00000D6C | 7F0D                      | 	jg	L_yakc_58
  1998 |          |                           | 	; >>>>> Line:	188
  1999 |          |                           | 	; >>>>> queue->oldest = queue->nextEmpty; 
  2000 | 00000D6E | 8B7604                    | 	mov	si, word [bp+4]
  2001 | 00000D71 | 8B7E04                    | 	mov	di, word [bp+4]
  2002 | 00000D74 | 83C702                    | 	add	di, 2
  2003 | 00000D77 | 8B04                      | 	mov	ax, word [si]
  2004 | 00000D79 | 8905                      | 	mov	word [di], ax
  2005 |          |                           | L_yakc_58:
  2006 |          |                           | 	; >>>>> Line:	190
  2007 |          |                           | 	; >>>>> *(queue->nextEmpty) = (int) msg; 
  2008 | 00000D7B | 8B7604                    | 	mov	si, word [bp+4]
  2009 | 00000D7E | 8B34                      | 	mov	si, word [si]
  2010 | 00000D80 | 8B4606                    | 	mov	ax, word [bp+6]
  2011 | 00000D83 | 8904                      | 	mov	word [si], ax
  2012 |          |                           | 	; >>>>> Line:	191
  2013 |          |                           | 	; >>>>> queue->qCount++; 
  2014 | 00000D85 | 8B7604                    | 	mov	si, word [bp+4]
  2015 | 00000D88 | 83C60A                    | 	add	si, 10
  2016 | 00000D8B | FF04                      | 	inc	word [si]
  2017 |          |                           | 	; >>>>> Line:	192
  2018 |          |                           | 	; >>>>> (queue->nextEmpty)++; 
  2019 | 00000D8D | 8B7604                    | 	mov	si, word [bp+4]
  2020 | 00000D90 | 830402                    | 	add	word [si], 2
  2021 |          |                           | 	; >>>>> Line:	193
  2022 |          |                           | 	; >>>>> if ((queue->nextEmpty) > (queue->qEnd)){ 
  2023 | 00000D93 | 8B7604                    | 	mov	si, word [bp+4]
  2024 | 00000D96 | 83C604                    | 	add	si, 4
  2025 | 00000D99 | 8B7E04                    | 	mov	di, word [bp+4]
  2026 | 00000D9C | 8B05                      | 	mov	ax, word [di]
  2027 | 00000D9E | 3B04                      | 	cmp	ax, word [si]
  2028 | 00000DA0 | 760A                      | 	jbe	L_yakc_59
  2029 |          |                           | 	; >>>>> Line:	194
  2030 |          |                           | 	; >>>>> queue->nextEmpty = queue->qStart; 
  2031 | 00000DA2 | 8B7604                    | 	mov	si, word [bp+4]
  2032 | 00000DA5 | 83C606                    | 	add	si, 6
  2033 | 00000DA8 | 8B04                      | 	mov	ax, word [si]
  2034 | 00000DAA | 8905                      | 	mov	word [di], ax
  2035 |          |                           | L_yakc_59:
  2036 |          |                           | 	; >>>>> Line:	196
  2037 |          |                           | 	; >>>>> item = YKpopSorted(&(queue->qBlockedHead)); 
  2038 | 00000DAC | 8B4604                    | 	mov	ax, word [bp+4]
  2039 | 00000DAF | 83C00C                    | 	add	ax, 12
  2040 | 00000DB2 | 50                        | 	push	ax
  2041 | 00000DB3 | E89A04                    | 	call	YKpopSorted
  2042 | 00000DB6 | 83C402                    | 	add	sp, 2
  2043 | 00000DB9 | 8946FE                    | 	mov	word [bp-2], ax
  2044 |          |                           | 	; >>>>> Line:	197
  2045 |          |                           | 	; >>>>> YKinsertSorted(item, &readyHead); 
  2046 | 00000DBC | B8[8213]                  | 	mov	ax, readyHead
  2047 | 00000DBF | 50                        | 	push	ax
  2048 | 00000DC0 | FF76FE                    | 	push	word [bp-2]
  2049 | 00000DC3 | E8AE03                    | 	call	YKinsertSorted
  2050 | 00000DC6 | 83C404                    | 	add	sp, 4
  2051 |          |                           | 	; >>>>> Line:	198
  2052 |          |                           | 	; >>>>> if (YKIsrDepth == 0){ 
  2053 | 00000DC9 | A1[7E13]                  | 	mov	ax, word [YKIsrDepth]
  2054 | 00000DCC | 85C0                      | 	test	ax, ax
  2055 | 00000DCE | 750A                      | 	jne	L_yakc_60
  2056 |          |                           | 	; >>>>> Line:	199
  2057 |          |                           | 	; >>>>> YKScheduler(1); 
  2058 | 00000DD0 | B80100                    | 	mov	ax, 1
  2059 | 00000DD3 | 50                        | 	push	ax
  2060 | 00000DD4 | E87102                    | 	call	YKScheduler
  2061 | 00000DD7 | 83C402                    | 	add	sp, 2
  2062 |          |                           | L_yakc_60:
  2063 |          |                           | 	; >>>>> Line:	201
  2064 |          |                           | 	; >>>>> YKExitMutex(); 
  2065 | 00000DDA | E8AFFB                    | 	call	YKExitMutex
  2066 |          |                           | 	; >>>>> Line:	202
  2067 |          |                           | 	; >>>>> return 1; 
  2068 | 00000DDD | B80100                    | 	mov	ax, 1
  2069 |          |                           | L_yakc_57:
  2070 | 00000DE0 | 89EC                      | 	mov	sp, bp
  2071 | 00000DE2 | 5D                        | 	pop	bp
  2072 | 00000DE3 | C3                        | 	ret
  2073 |          |                           | L_yakc_54:
  2074 | 00000DE4 | 55                        | 	push	bp
  2075 | 00000DE5 | 89E5                      | 	mov	bp, sp
  2076 | 00000DE7 | 51                        | 	push	cx
  2077 | 00000DE8 | E95CFF                    | 	jmp	L_yakc_55
  2078 | 00000DEB | 90                        | 	ALIGN	2
  2079 |          |                           | YKInitialize:
  2080 |          |                           | 	; >>>>> Line:	206
  2081 |          |                           | 	; >>>>> void YKInitialize(void){ 
  2082 | 00000DEC | EB78                      | 	jmp	L_yakc_62
  2083 |          |                           | L_yakc_63:
  2084 |          |                           | 	; >>>>> Line:	207
  2085 |          |                           | 	; >>>>> YKEnterMutex(); 
  2086 | 00000DEE | E899FB                    | 	call	YKEnterMutex
  2087 |          |                           | 	; >>>>> Line:	208
  2088 |          |                           | 	; >>>>> YKsave = 0; 
  2089 | 00000DF1 | C706[7013]0000            | 	mov	word [YKsave], 0
  2090 |          |                           | 	; >>>>> Line:	209
  2091 |          |                           | 	; >>>>> YKrestore = 0; 
  2092 | 00000DF7 | C706[7213]0000            | 	mov	word [YKrestore], 0
  2093 |          |                           | 	; >>>>> Line:	210
  2094 |          |                           | 	; >>>>> YKTickCount = 0; 
  2095 | 00000DFD | C706[6A13]0000            | 	mov	word [YKTickCount], 0
  2096 |          |                           | 	; >>>>> Line:	211
  2097 |          |                           | 	; >>>>> YKCtxSwCount = 0; 
  2098 | 00000E03 | C706[6C13]0000            | 	mov	word [YKCtxSwCount], 0
  2099 |          |                           | 	; >>>>> Line:	212
  2100 |          |                           | 	; >>>>> YKIdleCount = 0; 
  2101 | 00000E09 | C706[6E13]0000            | 	mov	word [YKIdleCount], 0
  2102 |          |                           | 	; >>>>> Line:	213
  2103 |          |                           | 	; >>>>> YKRunFlag = 0; 
  2104 | 00000E0F | C706[7C13]0000            | 	mov	word [YKRunFlag], 0
  2105 |          |                           | 	; >>>>> Line:	214
  2106 |          |                           | 	; >>>>> YKtaskCount = 0; 
  2107 | 00000E15 | C706[7813]0000            | 	mov	word [YKtaskCount], 0
  2108 |          |                           | 	; >>>>> Line:	215
  2109 |          |                           | 	; >>>>> readyHead = 0; 
  2110 | 00000E1B | C706[8213]0000            | 	mov	word [readyHead], 0
  2111 |          |                           | 	; >>>>> Line:	216
  2112 |          |                           | 	; >>>>> blockedHead = 0; 
  2113 | 00000E21 | C706[8413]0000            | 	mov	word [blockedHead], 0
  2114 |          |                           | 	; >>>>> Line:	217
  2115 |          |                           | 	; >>>>> blockedTail = 0; 
  2116 | 00000E27 | C706[8613]0000            | 	mov	word [blockedTail], 0
  2117 |          |                           | 	; >>>>> Line:	218
  2118 |          |                           | 	; >>>>> YKRunningTask = 0; 
  2119 | 00000E2D | C706[8813]0000            | 	mov	word [YKRunningTask], 0
  2120 |          |                           | 	; >>>>> Line:	219
  2121 |          |                           | 	; >>>>> YKeventCount = 0; 
  2122 | 00000E33 | C706[7A13]0000            | 	mov	word [YKeventCount], 0
  2123 |          |                           | 	; >>>>> Line:	220
  2124 |          |                           | 	; >>>>> YKsemCount = 0; 
  2125 | 00000E39 | C706[7613]0000            | 	mov	word [YKsemCount], 0
  2126 |          |                           | 	; >>>>> Line:	221
  2127 |          |                           | 	; >>>>> YKIsrDepth = 0; 
  2128 | 00000E3F | C706[7E13]0000            | 	mov	word [YKIsrDepth], 0
  2129 |          |                           | 	; >>>>> Line:	222
  2130 |          |                           | 	; >>>>> YKsemCount = 0; 
  2131 | 00000E45 | C706[7613]0000            | 	mov	word [YKsemCount], 0
  2132 |          |                           | 	; >>>>> Line:	223
  2133 |          |                           | 	; >>>>> YKqueueCount = 0; 
  2134 | 00000E4B | C706[7413]0000            | 	mov	word [YKqueueCount], 0
  2135 |          |                           | 	; >>>>> Line:	224
  2136 |          |                           | 	; >>>>> YKNewTask(&YKIdleTask, &YKIdleStk[256], 100); 
  2137 | 00000E51 | B064                      | 	mov	al, 100
  2138 | 00000E53 | 50                        | 	push	ax
  2139 | 00000E54 | B8[A016]                  | 	mov	ax, (YKIdleStk+512)
  2140 | 00000E57 | 50                        | 	push	ax
  2141 | 00000E58 | B8[6C0E]                  | 	mov	ax, YKIdleTask
  2142 | 00000E5B | 50                        | 	push	ax
  2143 | 00000E5C | E82900                    | 	call	YKNewTask
  2144 | 00000E5F | 83C406                    | 	add	sp, 6
  2145 | 00000E62 | 89EC                      | 	mov	sp, bp
  2146 | 00000E64 | 5D                        | 	pop	bp
  2147 | 00000E65 | C3                        | 	ret
  2148 |          |                           | L_yakc_62:
  2149 | 00000E66 | 55                        | 	push	bp
  2150 | 00000E67 | 89E5                      | 	mov	bp, sp
  2151 | 00000E69 | EB83                      | 	jmp	L_yakc_63
  2152 | 00000E6B | 90                        | 	ALIGN	2
  2153 |          |                           | YKIdleTask:
  2154 |          |                           | 	; >>>>> Line:	227
  2155 |          |                           | 	; >>>>> void YKIdleTask(void){ 
  2156 | 00000E6C | EB14                      | 	jmp	L_yakc_65
  2157 |          |                           | L_yakc_66:
  2158 |          |                           | 	; >>>>> Line:	228
  2159 |          |                           | 	; >>>>> while(1){ 
  2160 | 00000E6E | EB0C                      | 	jmp	L_yakc_68
  2161 |          |                           | L_yakc_67:
  2162 |          |                           | 	; >>>>> Line:	229
  2163 |          |                           | 	; >>>>> YKIdleCount++; 
  2164 | 00000E70 | FF06[6E13]                | 	inc	word [YKIdleCount]
  2165 |          |                           | 	; >>>>> Line:	230
  2166 |          |                           | 	; >>>>> YKIdleVar++; 
  2167 | 00000E74 | FF06[8013]                | 	inc	word [YKIdleVar]
  2168 |          |                           | 	; >>>>> Line:	231
  2169 |          |                           | 	; >>>>> YKIdleVar--; 
  2170 | 00000E78 | FF0E[8013]                | 	dec	word [YKIdleVar]
  2171 |          |                           | L_yakc_68:
  2172 | 00000E7C | EBF2                      | 	jmp	L_yakc_67
  2173 |          |                           | L_yakc_69:
  2174 | 00000E7E | 89EC                      | 	mov	sp, bp
  2175 | 00000E80 | 5D                        | 	pop	bp
  2176 | 00000E81 | C3                        | 	ret
  2177 |          |                           | L_yakc_65:
  2178 | 00000E82 | 55                        | 	push	bp
  2179 | 00000E83 | 89E5                      | 	mov	bp, sp
  2180 | 00000E85 | EBE7                      | 	jmp	L_yakc_66
  2181 | 00000E87 | 90                        | 	ALIGN	2
  2182 |          |                           | YKNewTask:
  2183 |          |                           | 	; >>>>> Line:	235
  2184 |          |                           | 	; >>>>> void YKNewTask(void (*task)(void), int *taskStack, unsigned char priority){ 
  2185 | 00000E88 | E9C300                    | 	jmp	L_yakc_71
  2186 |          |                           | L_yakc_72:
  2187 |          |                           | 	; >>>>> Line:	239
  2188 |          |                           | 	; >>>>> YKEnterMutex(); 
  2189 | 00000E8B | E8FCFA                    | 	call	YKEnterMutex
  2190 |          |                           | 	; >>>>> Line:	240
  2191 |          |                           | 	; >>>>> tempSP = taskStack-1; 
  2192 | 00000E8E | 8B4606                    | 	mov	ax, word [bp+6]
  2193 | 00000E91 | 83E802                    | 	sub	ax, 2
  2194 | 00000E94 | 8946FC                    | 	mov	word [bp-4], ax
  2195 |          |                           | 	; >>>>> Line:	241
  2196 |          |                           | 	; >>>>> *tempSP = 0x0200 
  2197 | 00000E97 | 8B76FC                    | 	mov	si, word [bp-4]
  2198 | 00000E9A | C7040002                  | 	mov	word [si], 512
  2199 |          |                           | 	; >>>>> Line:	242
  2200 |          |                           | 	; >>>>> --tempSP; 
  2201 | 00000E9E | 836EFC02                  | 	sub	word [bp-4], 2
  2202 |          |                           | 	; >>>>> Line:	243
  2203 |          |                           | 	; >>>>> *tempSP = 0; 
  2204 | 00000EA2 | 8B76FC                    | 	mov	si, word [bp-4]
  2205 | 00000EA5 | C7040000                  | 	mov	word [si], 0
  2206 |          |                           | 	; >>>>> Line:	244
  2207 |          |                           | 	; >>>>> --tempSP; 
  2208 | 00000EA9 | 836EFC02                  | 	sub	word [bp-4], 2
  2209 |          |                           | 	; >>>>> Line:	245
  2210 |          |                           | 	; >>>>> *tempSP = (int)task; 
  2211 | 00000EAD | 8B76FC                    | 	mov	si, word [bp-4]
  2212 | 00000EB0 | 8B4604                    | 	mov	ax, word [bp+4]
  2213 | 00000EB3 | 8904                      | 	mov	word [si], ax
  2214 |          |                           | 	; >>>>> Line:	246
  2215 |          |                           | 	; >>>>> --tempSP; 
  2216 | 00000EB5 | 836EFC02                  | 	sub	word [bp-4], 2
  2217 |          |                           | 	; >>>>> Line:	247
  2218 |          |                           | 	; >>>>> *tempSP = (int)(taskStack-1); 
  2219 | 00000EB9 | 8B4606                    | 	mov	ax, word [bp+6]
  2220 | 00000EBC | 83E802                    | 	sub	ax, 2
  2221 | 00000EBF | 8B76FC                    | 	mov	si, word [bp-4]
  2222 | 00000EC2 | 8904                      | 	mov	word [si], ax
  2223 |          |                           | 	; >>>>> Line:	248
  2224 |          |                           | 	; >>>>> --tempSP; 
  2225 | 00000EC4 | 836EFC02                  | 	sub	word [bp-4], 2
  2226 |          |                           | 	; >>>>> Line:	249
  2227 |          |                           | 	; >>>>> for(k = 0; k <=7; k++){ 
  2228 | 00000EC8 | C746FA0000                | 	mov	word [bp-6], 0
  2229 | 00000ECD | EB0E                      | 	jmp	L_yakc_74
  2230 |          |                           | L_yakc_73:
  2231 |          |                           | 	; >>>>> Line:	250
  2232 |          |                           | 	; >>>>> *tempSP = 0; 
  2233 | 00000ECF | 8B76FC                    | 	mov	si, word [bp-4]
  2234 | 00000ED2 | C7040000                  | 	mov	word [si], 0
  2235 |          |                           | 	; >>>>> Line:	251
  2236 |          |                           | 	; >>>>> tempSP--; 
  2237 | 00000ED6 | 836EFC02                  | 	sub	word [bp-4], 2
  2238 |          |                           | L_yakc_76:
  2239 | 00000EDA | FF46FA                    | 	inc	word [bp-6]
  2240 |          |                           | L_yakc_74:
  2241 | 00000EDD | 837EFA07                  | 	cmp	word [bp-6], 7
  2242 | 00000EE1 | 7EEC                      | 	jle	L_yakc_73
  2243 |          |                           | L_yakc_75:
  2244 |          |                           | 	; >>>>> Line:	255
  2245 |          |                           | 	; >>>>> tempTask = &YKtasks[YKtaskCount]; 
  2246 | 00000EE3 | A1[7813]                  | 	mov	ax, word [YKtaskCount]
  2247 | 00000EE6 | B90E00                    | 	mov	cx, 14
  2248 | 00000EE9 | F7E9                      | 	imul	cx
  2249 | 00000EEB | 05[8A13]                  | 	add	ax, YKtasks
  2250 | 00000EEE | 8946FE                    | 	mov	word [bp-2], ax
  2251 |          |                           | 	; >>>>> Line:	256
  2252 |          |                           | 	; >>>>> tempTask->taskSP = tempSP+1; 
  2253 | 00000EF1 | 8B46FC                    | 	mov	ax, word [bp-4]
  2254 | 00000EF4 | 83C002                    | 	add	ax, 2
  2255 | 00000EF7 | 8B76FE                    | 	mov	si, word [bp-2]
  2256 | 00000EFA | 8904                      | 	mov	word [si], ax
  2257 |          |                           | 	; >>>>> Line:	257
  2258 |          |                           | 	; >>>>> tempTask->taskPriority = priority; 
  2259 | 00000EFC | 8B76FE                    | 	mov	si, word [bp-2]
  2260 | 00000EFF | 83C602                    | 	add	si, 2
  2261 | 00000F02 | 8A4608                    | 	mov	al, byte [bp+8]
  2262 | 00000F05 | 8804                      | 	mov	byte [si], al
  2263 |          |                           | 	; >>>>> Line:	258
  2264 |          |                           | 	; >>>>> tempTask->taskDelay = 0; 
  2265 | 00000F07 | 8B76FE                    | 	mov	si, word [bp-2]
  2266 | 00000F0A | 83C604                    | 	add	si, 4
  2267 | 00000F0D | C7040000                  | 	mov	word [si], 0
  2268 |          |                           | 	; >>>>> Line:	259
  2269 |          |                           | 	; >>>>> tempTask->eventWaitMode = 1; 
  2270 | 00000F11 | 8B76FE                    | 	mov	si, word [bp-2]
  2271 | 00000F14 | 83C60A                    | 	add	si, 10
  2272 | 00000F17 | C7040100                  | 	mov	word [si], 1
  2273 |          |                           | 	; >>>>> Line:	260
  2274 |          |                           | 	; >>>>> tempTask->eventMask = 0; 
  2275 | 00000F1B | 8B76FE                    | 	mov	si, word [bp-2]
  2276 | 00000F1E | 83C60C                    | 	add	si, 12
  2277 | 00000F21 | C7040000                  | 	mov	word [si], 0
  2278 |          |                           | 	; >>>>> Line:	262
  2279 |          |                           | 	; >>>>> YKtaskCount++; 
  2280 | 00000F25 | FF06[7813]                | 	inc	word [YKtaskCount]
  2281 |          |                           | 	; >>>>> Line:	263
  2282 |          |                           | 	; >>>>> YKinsertSorted(tempTask, &readyHead); 
  2283 | 00000F29 | B8[8213]                  | 	mov	ax, readyHead
  2284 | 00000F2C | 50                        | 	push	ax
  2285 | 00000F2D | FF76FE                    | 	push	word [bp-2]
  2286 | 00000F30 | E84102                    | 	call	YKinsertSorted
  2287 | 00000F33 | 83C404                    | 	add	sp, 4
  2288 |          |                           | 	; >>>>> Line:	264
  2289 |          |                           | 	; >>>>> if (YKRunFlag == 1){ 
  2290 | 00000F36 | 833E[7C13]01              | 	cmp	word [YKRunFlag], 1
  2291 | 00000F3B | 750D                      | 	jne	L_yakc_77
  2292 |          |                           | 	; >>>>> Line:	265
  2293 |          |                           | 	; >>>>> YKScheduler(1); 
  2294 | 00000F3D | B80100                    | 	mov	ax, 1
  2295 | 00000F40 | 50                        | 	push	ax
  2296 | 00000F41 | E80401                    | 	call	YKScheduler
  2297 | 00000F44 | 83C402                    | 	add	sp, 2
  2298 |          |                           | 	; >>>>> Line:	266
  2299 |          |                           | 	; >>>>> YKExitMutex(); 
  2300 | 00000F47 | E842FA                    | 	call	YKExitMutex
  2301 |          |                           | L_yakc_77:
  2302 | 00000F4A | 89EC                      | 	mov	sp, bp
  2303 | 00000F4C | 5D                        | 	pop	bp
  2304 | 00000F4D | C3                        | 	ret
  2305 |          |                           | L_yakc_71:
  2306 | 00000F4E | 55                        | 	push	bp
  2307 | 00000F4F | 89E5                      | 	mov	bp, sp
  2308 | 00000F51 | 83EC06                    | 	sub	sp, 6
  2309 | 00000F54 | E934FF                    | 	jmp	L_yakc_72
  2310 |          |                           | L_yakc_79:
  2311 | 00000F57 | 594B52756E20466169-       | 	DB	"YKRun Failed: readyHead is Null",0
  2312 | 00000F60 | 6C65643A2072656164-       | ...
  2313 | 00000F69 | 794865616420697320-       | ...
  2314 | 00000F72 | 4E756C6C00                | ...
  2315 | 00000F77 | 90                        | 	ALIGN	2
  2316 |          |                           | YKRun:
  2317 |          |                           | 	; >>>>> Line:	270
  2318 |          |                           | 	; >>>>> void YKRun(void) { 
  2319 | 00000F78 | EB39                      | 	jmp	L_yakc_80
  2320 |          |                           | L_yakc_81:
  2321 |          |                           | 	; >>>>> Line:	271
  2322 |          |                           | 	; >>>>> if (readyHead != 0){ 
  2323 | 00000F7A | A1[8213]                  | 	mov	ax, word [readyHead]
  2324 | 00000F7D | 85C0                      | 	test	ax, ax
  2325 | 00000F7F | 7424                      | 	je	L_yakc_82
  2326 |          |                           | 	; >>>>> Line:	272
  2327 |          |                           | 	; >>>>> YKRunFlag = 1; 
  2328 | 00000F81 | C706[7C13]0100            | 	mov	word [YKRunFlag], 1
  2329 |          |                           | 	; >>>>> Line:	273
  2330 |          |                           | 	; >>>>> YKrestore = readyHead->taskSP; 
  2331 | 00000F87 | 8B36[8213]                | 	mov	si, word [readyHead]
  2332 | 00000F8B | 8B04                      | 	mov	ax, word [si]
  2333 | 00000F8D | A3[7213]                  | 	mov	word [YKrestore], ax
  2334 |          |                           | 	; >>>>> Line:	274
  2335 |          |                           | 	; >>>>> YKRunningTask = readyHead; 
  2336 | 00000F90 | A1[8213]                  | 	mov	ax, word [readyHead]
  2337 | 00000F93 | A3[8813]                  | 	mov	word [YKRunningTask], ax
  2338 |          |                           | 	; >>>>> Line:	275
  2339 |          |                           | 	; >>>>> YKCtxSwCount++; 
  2340 | 00000F96 | FF06[6C13]                | 	inc	word [YKCtxSwCount]
  2341 |          |                           | 	; >>>>> Line:	276
  2342 |          |                           | 	; >>>>> YKDispatcher(0); 
  2343 | 00000F9A | 31C0                      | 	xor	ax, ax
  2344 | 00000F9C | 50                        | 	push	ax
  2345 | 00000F9D | E807FA                    | 	call	YKDispatcher
  2346 | 00000FA0 | 83C402                    | 	add	sp, 2
  2347 | 00000FA3 | EB0A                      | 	jmp	L_yakc_83
  2348 |          |                           | L_yakc_82:
  2349 |          |                           | 	; >>>>> Line:	279
  2350 |          |                           | 	; >>>>> printString("YKRun Failed: readyHead is Null"); 
  2351 | 00000FA5 | B8[570F]                  | 	mov	ax, L_yakc_79
  2352 | 00000FA8 | 50                        | 	push	ax
  2353 | 00000FA9 | E87CF4                    | 	call	printString
  2354 | 00000FAC | 83C402                    | 	add	sp, 2
  2355 |          |                           | L_yakc_83:
  2356 | 00000FAF | 89EC                      | 	mov	sp, bp
  2357 | 00000FB1 | 5D                        | 	pop	bp
  2358 | 00000FB2 | C3                        | 	ret
  2359 |          |                           | L_yakc_80:
  2360 | 00000FB3 | 55                        | 	push	bp
  2361 | 00000FB4 | 89E5                      | 	mov	bp, sp
  2362 | 00000FB6 | EBC2                      | 	jmp	L_yakc_81
  2363 |          |                           | 	ALIGN	2
  2364 |          |                           | YKDelayTask:
  2365 |          |                           | 	; >>>>> Line:	283
  2366 |          |                           | 	; >>>>> void YKDelayTask(unsigned count){ 
  2367 | 00000FB8 | EB47                      | 	jmp	L_yakc_85
  2368 |          |                           | L_yakc_86:
  2369 |          |                           | 	; >>>>> Line:	285
  2370 |          |                           | 	; >>>>> if (count != 0){ 
  2371 | 00000FBA | 8B4604                    | 	mov	ax, word [bp+4]
  2372 | 00000FBD | 85C0                      | 	test	ax, ax
  2373 | 00000FBF | 743C                      | 	je	L_yakc_87
  2374 |          |                           | 	; >>>>> Line:	286
  2375 |          |                           | 	; >>>>> YKEnterMutex(); 
  2376 | 00000FC1 | E8C6F9                    | 	call	YKEnterMutex
  2377 |          |                           | 	; >>>>> Line:	287
  2378 |          |                           | 	; >>>>> item = YKRunningTask; 
  2379 | 00000FC4 | A1[8813]                  | 	mov	ax, word [YKRunningTask]
  2380 | 00000FC7 | 8946FE                    | 	mov	word [bp-2], ax
  2381 |          |                           | 	; >>>>> Line:	288
  2382 |          |                           | 	; >>>>> item->taskDelay = count; 
  2383 | 00000FCA | 8B76FE                    | 	mov	si, word [bp-2]
  2384 | 00000FCD | 83C604                    | 	add	si, 4
  2385 | 00000FD0 | 8B4604                    | 	mov	ax, word [bp+4]
  2386 | 00000FD3 | 8904                      | 	mov	word [si], ax
  2387 |          |                           | 	; >>>>> Line:	289
  2388 |          |                           | 	; >>>>> YKpopSorted(&readyHead); 
  2389 | 00000FD5 | B8[8213]                  | 	mov	ax, readyHead
  2390 | 00000FD8 | 50                        | 	push	ax
  2391 | 00000FD9 | E87402                    | 	call	YKpopSorted
  2392 | 00000FDC | 83C402                    | 	add	sp, 2
  2393 |          |                           | 	; >>>>> Line:	290
  2394 |          |                           | 	; >>>>> YKinsertUnsorted(item, &blockedHead, &blockedTail); 
  2395 | 00000FDF | B8[8613]                  | 	mov	ax, blockedTail
  2396 | 00000FE2 | 50                        | 	push	ax
  2397 | 00000FE3 | B8[8413]                  | 	mov	ax, blockedHead
  2398 | 00000FE6 | 50                        | 	push	ax
  2399 | 00000FE7 | FF76FE                    | 	push	word [bp-2]
  2400 | 00000FEA | E80F03                    | 	call	YKinsertUnsorted
  2401 | 00000FED | 83C406                    | 	add	sp, 6
  2402 |          |                           | 	; >>>>> Line:	291
  2403 |          |                           | 	; >>>>> YKScheduler(1); 
  2404 | 00000FF0 | B80100                    | 	mov	ax, 1
  2405 | 00000FF3 | 50                        | 	push	ax
  2406 | 00000FF4 | E85100                    | 	call	YKScheduler
  2407 | 00000FF7 | 83C402                    | 	add	sp, 2
  2408 |          |                           | 	; >>>>> Line:	292
  2409 |          |                           | 	; >>>>> YKExitMutex(); 
  2410 | 00000FFA | E88FF9                    | 	call	YKExitMutex
  2411 |          |                           | L_yakc_87:
  2412 | 00000FFD | 89EC                      | 	mov	sp, bp
  2413 | 00000FFF | 5D                        | 	pop	bp
  2414 | 00001000 | C3                        | 	ret
  2415 |          |                           | L_yakc_85:
  2416 | 00001001 | 55                        | 	push	bp
  2417 | 00001002 | 89E5                      | 	mov	bp, sp
  2418 | 00001004 | 51                        | 	push	cx
  2419 | 00001005 | EBB3                      | 	jmp	L_yakc_86
  2420 | 00001007 | 90                        | 	ALIGN	2
  2421 |          |                           | YKExitISR:
  2422 |          |                           | 	; >>>>> Line:	296
  2423 |          |                           | 	; >>>>> void YKExitISR(void){ 
  2424 | 00001008 | EB18                      | 	jmp	L_yakc_89
  2425 |          |                           | L_yakc_90:
  2426 |          |                           | 	; >>>>> Line:	297
  2427 |          |                           | 	; >>>>> YKIsrDepth--; 
  2428 | 0000100A | FF0E[7E13]                | 	dec	word [YKIsrDepth]
  2429 |          |                           | 	; >>>>> Line:	298
  2430 |          |                           | 	; >>>>> if(YKIsrDepth == 0){ 
  2431 | 0000100E | A1[7E13]                  | 	mov	ax, word [YKIsrDepth]
  2432 | 00001011 | 85C0                      | 	test	ax, ax
  2433 | 00001013 | 7509                      | 	jne	L_yakc_91
  2434 |          |                           | 	; >>>>> Line:	299
  2435 |          |                           | 	; >>>>> = &YKsem 
  2436 | 00001015 | 31C0                      | 	xor	ax, ax
  2437 | 00001017 | 50                        | 	push	ax
  2438 | 00001018 | E82D00                    | 	call	YKScheduler
  2439 | 0000101B | 83C402                    | 	add	sp, 2
  2440 |          |                           | L_yakc_91:
  2441 | 0000101E | 89EC                      | 	mov	sp, bp
  2442 | 00001020 | 5D                        | 	pop	bp
  2443 | 00001021 | C3                        | 	ret
  2444 |          |                           | L_yakc_89:
  2445 | 00001022 | 55                        | 	push	bp
  2446 | 00001023 | 89E5                      | 	mov	bp, sp
  2447 | 00001025 | EBE3                      | 	jmp	L_yakc_90
  2448 | 00001027 | 90                        | 	ALIGN	2
  2449 |          |                           | YKEnterISR:
  2450 |          |                           | 	; >>>>> Line:	303
  2451 |          |                           | 	; >>>>> void YKEnterISR(void){ 
  2452 | 00001028 | EB18                      | 	jmp	L_yakc_93
  2453 |          |                           | L_yakc_94:
  2454 |          |                           | 	; >>>>> Line:	304
  2455 |          |                           | 	; >>>>> YKIsrDepth++; 
  2456 | 0000102A | FF06[7E13]                | 	inc	word [YKIsrDepth]
  2457 |          |                           | 	; >>>>> Line:	305
  2458 |          |                           | 	; >>>>> if (YKIsrDepth == 1){ 
  2459 | 0000102E | 833E[7E13]01              | 	cmp	word [YKIsrDepth], 1
  2460 | 00001033 | 7509                      | 	jne	L_yakc_95
  2461 |          |                           | 	; >>>>> Line:	306
  2462 |          |                           | 	; >>>>> YKsave = (int*)&(YKRunningTask->taskSP); 
  2463 | 00001035 | A1[8813]                  | 	mov	ax, word [YKRunningTask]
  2464 | 00001038 | A3[7013]                  | 	mov	word [YKsave], ax
  2465 |          |                           | 	; >>>>> Line:	307
  2466 |          |                           | 	; >>>>> YKsaveSP(); 
  2467 | 0000103B | E884F9                    | 	call	YKsaveSP
  2468 |          |                           | L_yakc_95:
  2469 | 0000103E | 89EC                      | 	mov	sp, bp
  2470 | 00001040 | 5D                        | 	pop	bp
  2471 | 00001041 | C3                        | 	ret
  2472 |          |                           | L_yakc_93:
  2473 | 00001042 | 55                        | 	push	bp
  2474 | 00001043 | 89E5                      | 	mov	bp, sp
  2475 | 00001045 | EBE3                      | 	jmp	L_yakc_94
  2476 | 00001047 | 90                        | 	ALIGN	2
  2477 |          |                           | YKScheduler:
  2478 |          |                           | 	; >>>>> Line:	311
  2479 |          |                           | 	; >>>>> void YKScheduler(int saveContext){ 
  2480 | 00001048 | EB2F                      | 	jmp	L_yakc_97
  2481 |          |                           | L_yakc_98:
  2482 |          |                           | 	; >>>>> Line:	312
  2483 |          |                           | 	; >>>>> if (YKRunningTask != readyHead){ 
  2484 | 0000104A | A1[8213]                  | 	mov	ax, word [readyHead]
  2485 | 0000104D | 3B06[8813]                | 	cmp	ax, word [YKRunningTask]
  2486 | 00001051 | 7422                      | 	je	L_yakc_99
  2487 |          |                           | 	; >>>>> Line:	313
  2488 |          |                           | 	; >>>>> YKsave = (int*)&(YKRunningTask->taskSP); 
  2489 | 00001053 | A1[8813]                  | 	mov	ax, word [YKRunningTask]
  2490 | 00001056 | A3[7013]                  | 	mov	word [YKsave], ax
  2491 |          |                           | 	; >>>>> Line:	314
  2492 |          |                           | 	; >>>>> YKrestore = readyHead->taskSP; 
  2493 | 00001059 | 8B36[8213]                | 	mov	si, word [readyHead]
  2494 | 0000105D | 8B04                      | 	mov	ax, word [si]
  2495 | 0000105F | A3[7213]                  | 	mov	word [YKrestore], ax
  2496 |          |                           | 	; >>>>> Line:	315
  2497 |          |                           | 	; >>>>> YKRunningTask = readyHead; 
  2498 | 00001062 | A1[8213]                  | 	mov	ax, word [readyHead]
  2499 | 00001065 | A3[8813]                  | 	mov	word [YKRunningTask], ax
  2500 |          |                           | 	; >>>>> Line:	316
  2501 |          |                           | 	; >>>>> YKCtxSwCount++; 
  2502 | 00001068 | FF06[6C13]                | 	inc	word [YKCtxSwCount]
  2503 |          |                           | 	; >>>>> Line:	317
  2504 |          |                           | 	; >>>>> YKDispatcher(saveContext); 
  2505 | 0000106C | FF7604                    | 	push	word [bp+4]
  2506 | 0000106F | E835F9                    | 	call	YKDispatcher
  2507 | 00001072 | 83C402                    | 	add	sp, 2
  2508 |          |                           | L_yakc_99:
  2509 | 00001075 | 89EC                      | 	mov	sp, bp
  2510 | 00001077 | 5D                        | 	pop	bp
  2511 | 00001078 | C3                        | 	ret
  2512 |          |                           | L_yakc_97:
  2513 | 00001079 | 55                        | 	push	bp
  2514 | 0000107A | 89E5                      | 	mov	bp, sp
  2515 | 0000107C | EBCC                      | 	jmp	L_yakc_98
  2516 |          |                           | 	ALIGN	2
  2517 |          |                           | YKSemCreate:
  2518 |          |                           | 	; >>>>> Line:	322
  2519 |          |                           | 	; >>>>> YKSEM* YKSemCreate(int initialValue, char *string){ 
  2520 | 0000107E | EB4D                      | 	jmp	L_yakc_101
  2521 |          |                           | L_yakc_102:
  2522 |          |                           | 	; >>>>> Line:	324
  2523 |          |                           | 	; >>>>> YKEnterMutex(); 
  2524 | 00001080 | E807F9                    | 	call	YKEnterMutex
  2525 |          |                           | 	; >>>>> Line:	325
  2526 |          |                           | 	; >>>>> if (initialValue < 0){ 
  2527 | 00001083 | 837E0400                  | 	cmp	word [bp+4], 0
  2528 | 00001087 | 7D04                      | 	jge	L_yakc_103
  2529 |          |                           | 	; >>>>> Line:	326
  2530 |          |                           | 	; >>>>> return 0; 
  2531 | 00001089 | 31C0                      | 	xor	ax, ax
  2532 | 0000108B | EB3C                      | 	jmp	L_yakc_104
  2533 |          |                           | L_yakc_103:
  2534 |          |                           | 	; >>>>> Line:	328
  2535 |          |                           | 	; >>>>> tempSem = &YKsem 
  2536 | 0000108D | A1[7613]                  | 	mov	ax, word [YKsemCount]
  2537 | 00001090 | B90600                    | 	mov	cx, 6
  2538 | 00001093 | F7E9                      | 	imul	cx
  2539 | 00001095 | 05[6414]                  | 	add	ax, YKsemaphores
  2540 | 00001098 | 8946FE                    | 	mov	word [bp-2], ax
  2541 |          |                           | 	; >>>>> Line:	329
  2542 |          |                           | 	; >>>>> tempSem->value = initialValue; 
  2543 | 0000109B | 8B76FE                    | 	mov	si, word [bp-2]
  2544 | 0000109E | 8B4604                    | 	mov	ax, word [bp+4]
  2545 | 000010A1 | 8904                      | 	mov	word [si], ax
  2546 |          |                           | 	; >>>>> Line:	330
  2547 |          |                           | 	; >>>>> tempSem->pendHead = 0; 
  2548 | 000010A3 | 8B76FE                    | 	mov	si, word [bp-2]
  2549 | 000010A6 | 83C602                    | 	add	si, 2
  2550 | 000010A9 | C7040000                  | 	mov	word [si], 0
  2551 |          |                           | 	; >>>>> Line:	331
  2552 |          |                           | 	; >>>>> tempSem->string = string; 
  2553 | 000010AD | 8B76FE                    | 	mov	si, word [bp-2]
  2554 | 000010B0 | 83C604                    | 	add	si, 4
  2555 | 000010B3 | 8B4606                    | 	mov	ax, word [bp+6]
  2556 | 000010B6 | 8904                      | 	mov	word [si], ax
  2557 |          |                           | 	; >>>>> Line:	332
  2558 |          |                           | 	; >>>>> YKsemCount++; 
  2559 | 000010B8 | FF06[7613]                | 	inc	word [YKsemCount]
  2560 |          |                           | 	; >>>>> Line:	333
  2561 |          |                           | 	; >>>>> if (YKRunFlag == 1){ 
  2562 | 000010BC | 833E[7C13]01              | 	cmp	word [YKRunFlag], 1
  2563 | 000010C1 | 7503                      | 	jne	L_yakc_105
  2564 |          |                           | 	; >>>>> Line:	334
  2565 |          |                           | 	; >>>>> YKExitMutex(); 
  2566 | 000010C3 | E8C6F8                    | 	call	YKExitMutex
  2567 |          |                           | L_yakc_105:
  2568 |          |                           | 	; >>>>> Line:	336
  2569 |          |                           | 	; >>>>> return tempSem; 
  2570 | 000010C6 | 8B46FE                    | 	mov	ax, word [bp-2]
  2571 |          |                           | L_yakc_104:
  2572 | 000010C9 | 89EC                      | 	mov	sp, bp
  2573 | 000010CB | 5D                        | 	pop	bp
  2574 | 000010CC | C3                        | 	ret
  2575 |          |                           | L_yakc_101:
  2576 | 000010CD | 55                        | 	push	bp
  2577 | 000010CE | 89E5                      | 	mov	bp, sp
  2578 | 000010D0 | 51                        | 	push	cx
  2579 | 000010D1 | EBAD                      | 	jmp	L_yakc_102
  2580 | 000010D3 | 90                        | 	ALIGN	2
  2581 |          |                           | YKSemPend:
  2582 |          |                           | 	; >>>>> Line:	339
  2583 |          |                           | 	; >>>>> void YKSemPend(YKSEM *semaphore){ 
  2584 | 000010D4 | EB44                      | 	jmp	L_yakc_107
  2585 |          |                           | L_yakc_108:
  2586 |          |                           | 	; >>>>> Line:	342
  2587 |          |                           | 	; >>>>> YKEnterMutex(); 
  2588 | 000010D6 | E8B1F8                    | 	call	YKEnterMutex
  2589 |          |                           | 	; >>>>> Line:	343
  2590 |          |                           | 	; >>>>> value = semaphore->value; 
  2591 | 000010D9 | 8B7604                    | 	mov	si, word [bp+4]
  2592 | 000010DC | 8B04                      | 	mov	ax, word [si]
  2593 | 000010DE | 8946FE                    | 	mov	word [bp-2], ax
  2594 |          |                           | 	; >>>>> Line:	344
  2595 |          |                           | 	; >>>>> (semaphore->value)--; 
  2596 | 000010E1 | 8B7604                    | 	mov	si, word [bp+4]
  2597 | 000010E4 | FF0C                      | 	dec	word [si]
  2598 |          |                           | 	; >>>>> Line:	345
  2599 |          |                           | 	; >>>>> if (value <= 0){ 
  2600 | 000010E6 | 837EFE00                  | 	cmp	word [bp-2], 0
  2601 | 000010EA | 7F27                      | 	jg	L_yakc_109
  2602 |          |                           | 	; >>>>> Line:	346
  2603 |          |                           | 	; >>>>> item = YKpopSorted(&readyHead); 
  2604 | 000010EC | B8[8213]                  | 	mov	ax, readyHead
  2605 | 000010EF | 50                        | 	push	ax
  2606 | 000010F0 | E85D01                    | 	call	YKpopSorted
  2607 | 000010F3 | 83C402                    | 	add	sp, 2
  2608 | 000010F6 | 8946FC                    | 	mov	word [bp-4], ax
  2609 |          |                           | 	; >>>>> Line:	347
  2610 |          |                           | 	; >>>>> YKinsertSorted(item, &(semaphore->pendHead)); 
  2611 | 000010F9 | 8B4604                    | 	mov	ax, word [bp+4]
  2612 | 000010FC | 83C002                    | 	add	ax, 2
  2613 | 000010FF | 50                        | 	push	ax
  2614 | 00001100 | FF76FC                    | 	push	word [bp-4]
  2615 | 00001103 | E86E00                    | 	call	YKinsertSorted
  2616 | 00001106 | 83C404                    | 	add	sp, 4
  2617 |          |                           | 	; >>>>> Line:	348
  2618 |          |                           | 	; >>>>> YKScheduler(1); 
  2619 | 00001109 | B80100                    | 	mov	ax, 1
  2620 | 0000110C | 50                        | 	push	ax
  2621 | 0000110D | E838FF                    | 	call	YKScheduler
  2622 | 00001110 | 83C402                    | 	add	sp, 2
  2623 |          |                           | L_yakc_109:
  2624 |          |                           | 	; >>>>> Line:	350
  2625 |          |                           | 	; >>>>> YKExitMutex(); 
  2626 | 00001113 | E876F8                    | 	call	YKExitMutex
  2627 | 00001116 | 89EC                      | 	mov	sp, bp
  2628 | 00001118 | 5D                        | 	pop	bp
  2629 | 00001119 | C3                        | 	ret
  2630 |          |                           | L_yakc_107:
  2631 | 0000111A | 55                        | 	push	bp
  2632 | 0000111B | 89E5                      | 	mov	bp, sp
  2633 | 0000111D | 83EC04                    | 	sub	sp, 4
  2634 | 00001120 | EBB4                      | 	jmp	L_yakc_108
  2635 |          |                           | 	ALIGN	2
  2636 |          |                           | YKSemPost:
  2637 |          |                           | 	; >>>>> Line:	353
  2638 |          |                           | 	; >>>>> void YKSemPost(YKSEM *semaphore){ 
  2639 | 00001122 | EB49                      | 	jmp	L_yakc_111
  2640 |          |                           | L_yakc_112:
  2641 |          |                           | 	; >>>>> Line:	355
  2642 |          |                           | 	; >>>>> ne 
  2643 | 00001124 | E863F8                    | 	call	YKEnterMutex
  2644 |          |                           | 	; >>>>> Line:	356
  2645 |          |                           | 	; >>>>> (semaphore->value)++; 
  2646 | 00001127 | 8B7604                    | 	mov	si, word [bp+4]
  2647 | 0000112A | FF04                      | 	inc	word [si]
  2648 |          |                           | 	; >>>>> Line:	357
  2649 |          |                           | 	; >>>>> if ((semaphore->pendHead) != 0) { 
  2650 | 0000112C | 8B7604                    | 	mov	si, word [bp+4]
  2651 | 0000112F | 83C602                    | 	add	si, 2
  2652 | 00001132 | 8B04                      | 	mov	ax, word [si]
  2653 | 00001134 | 85C0                      | 	test	ax, ax
  2654 | 00001136 | 742E                      | 	je	L_yakc_113
  2655 |          |                           | 	; >>>>> Line:	358
  2656 |          |                           | 	; >>>>> item = YKpopSorted(&(semaphore->pendHead)); 
  2657 | 00001138 | 8B4604                    | 	mov	ax, word [bp+4]
  2658 | 0000113B | 83C002                    | 	add	ax, 2
  2659 | 0000113E | 50                        | 	push	ax
  2660 | 0000113F | E80E01                    | 	call	YKpopSorted
  2661 | 00001142 | 83C402                    | 	add	sp, 2
  2662 | 00001145 | 8946FE                    | 	mov	word [bp-2], ax
  2663 |          |                           | 	; >>>>> Line:	359
  2664 |          |                           | 	; >>>>> YKinsertSorted(item, &readyHead); 
  2665 | 00001148 | B8[8213]                  | 	mov	ax, readyHead
  2666 | 0000114B | 50                        | 	push	ax
  2667 | 0000114C | FF76FE                    | 	push	word [bp-2]
  2668 | 0000114F | E82200                    | 	call	YKinsertSorted
  2669 | 00001152 | 83C404                    | 	add	sp, 4
  2670 |          |                           | 	; >>>>> Line:	360
  2671 |          |                           | 	; >>>>> if (YKIsrDepth == 0){ 
  2672 | 00001155 | A1[7E13]                  | 	mov	ax, word [YKIsrDepth]
  2673 | 00001158 | 85C0                      | 	test	ax, ax
  2674 | 0000115A | 750A                      | 	jne	L_yakc_114
  2675 |          |                           | 	; >>>>> Line:	361
  2676 |          |                           | 	; >>>>> YKScheduler(1); 
  2677 | 0000115C | B80100                    | 	mov	ax, 1
  2678 | 0000115F | 50                        | 	push	ax
  2679 | 00001160 | E8E5FE                    | 	call	YKScheduler
  2680 | 00001163 | 83C402                    | 	add	sp, 2
  2681 |          |                           | L_yakc_114:
  2682 |          |                           | L_yakc_113:
  2683 |          |                           | 	; >>>>> Line:	364
  2684 |          |                           | 	; >>>>> YKExitMutex(); 
  2685 | 00001166 | E823F8                    | 	call	YKExitMutex
  2686 | 00001169 | 89EC                      | 	mov	sp, bp
  2687 | 0000116B | 5D                        | 	pop	bp
  2688 | 0000116C | C3                        | 	ret
  2689 |          |                           | L_yakc_111:
  2690 | 0000116D | 55                        | 	push	bp
  2691 | 0000116E | 89E5                      | 	mov	bp, sp
  2692 | 00001170 | 51                        | 	push	cx
  2693 | 00001171 | EBB1                      | 	jmp	L_yakc_112
  2694 | 00001173 | 90                        | 	ALIGN	2
  2695 |          |                           | YKinsertSorted:
  2696 |          |                           | 	; >>>>> Line:	368
  2697 |          |                           | 	; >>>>> void YKinsertSorted(struct Task* item, struct Task** listHead){ 
  2698 | 00001174 | E9CF00                    | 	jmp	L_yakc_116
  2699 |          |                           | L_yakc_117:
  2700 |          |                           | 	; >>>>> Line:	371
  2701 |          |                           | 	; >>>>> if (item != 0) { 
  2702 | 00001177 | 8B4604                    | 	mov	ax, word [bp+4]
  2703 | 0000117A | 85C0                      | 	test	ax, ax
  2704 | 0000117C | 7503E9C100                | 	je	L_yakc_118
  2705 |          |                           | 	; >>>>> Line:	372
  2706 |          |                           | 	; >>>>> item->prev = 0; 
  2707 | 00001181 | 8B7604                    | 	mov	si, word [bp+4]
  2708 | 00001184 | 83C608                    | 	add	si, 8
  2709 | 00001187 | C7040000                  | 	mov	word [si], 0
  2710 |          |                           | 	; >>>>> Line:	373
  2711 |          |                           | 	; >>>>> if ((*listHead) == 0){ 
  2712 | 0000118B | 8B7606                    | 	mov	si, word [bp+6]
  2713 | 0000118E | 8B04                      | 	mov	ax, word [si]
  2714 | 00001190 | 85C0                      | 	test	ax, ax
  2715 | 00001192 | 7515                      | 	jne	L_yakc_119
  2716 |          |                           | 	; >>>>> Line:	374
  2717 |          |                           | 	; >>>>> item->next = 0; 
  2718 | 00001194 | 8B7604                    | 	mov	si, word [bp+4]
  2719 | 00001197 | 83C606                    | 	add	si, 6
  2720 | 0000119A | C7040000                  | 	mov	word [si], 0
  2721 |          |                           | 	; >>>>> Line:	375
  2722 |          |                           | 	; >>>>> *listHead = item; 
  2723 | 0000119E | 8B7606                    | 	mov	si, word [bp+6]
  2724 | 000011A1 | 8B4604                    | 	mov	ax, word [bp+4]
  2725 | 000011A4 | 8904                      | 	mov	word [si], ax
  2726 | 000011A6 | E99900                    | 	jmp	L_yakc_120
  2727 |          |                           | L_yakc_119:
  2728 |          |                           | 	; >>>>> Line:	377
  2729 |          |                           | 	; >>>>> else if (((*listHead)->taskPriority) >= (item->taskPriority)){ 
  2730 | 000011A9 | 8B7606                    | 	mov	si, word [bp+6]
  2731 | 000011AC | 8B34                      | 	mov	si, word [si]
  2732 | 000011AE | 83C602                    | 	add	si, 2
  2733 | 000011B1 | 8B7E04                    | 	mov	di, word [bp+4]
  2734 | 000011B4 | 83C702                    | 	add	di, 2
  2735 | 000011B7 | 8A05                      | 	mov	al, byte [di]
  2736 | 000011B9 | 3A04                      | 	cmp	al, byte [si]
  2737 | 000011BB | 7717                      | 	ja	L_yakc_121
  2738 |          |                           | 	; >>>>> Line:	378
  2739 |          |                           | 	; >>>>> item->ne 
  2740 | 000011BD | 8B7606                    | 	mov	si, word [bp+6]
  2741 | 000011C0 | 8B7E04                    | 	mov	di, word [bp+4]
  2742 | 000011C3 | 83C706                    | 	add	di, 6
  2743 | 000011C6 | 8B04                      | 	mov	ax, word [si]
  2744 | 000011C8 | 8905                      | 	mov	word [di], ax
  2745 |          |                           | 	; >>>>> Line:	379
  2746 |          |                           | 	; >>>>> *listHead = item; 
  2747 | 000011CA | 8B7606                    | 	mov	si, word [bp+6]
  2748 | 000011CD | 8B4604                    | 	mov	ax, word [bp+4]
  2749 | 000011D0 | 8904                      | 	mov	word [si], ax
  2750 | 000011D2 | EB6E                      | 	jmp	L_yakc_122
  2751 |          |                           | L_yakc_121:
  2752 |          |                           | 	; >>>>> Line:	382
  2753 |          |                           | 	; >>>>> temp = *listHead; 
  2754 | 000011D4 | 8B7606                    | 	mov	si, word [bp+6]
  2755 | 000011D7 | 8B04                      | 	mov	ax, word [si]
  2756 | 000011D9 | 8946FE                    | 	mov	word [bp-2], ax
  2757 |          |                           | 	; >>>>> Line:	383
  2758 |          |                           | 	; >>>>> tempNext = (*listHead)->next; 
  2759 | 000011DC | 8B7606                    | 	mov	si, word [bp+6]
  2760 | 000011DF | 8B34                      | 	mov	si, word [si]
  2761 | 000011E1 | 83C606                    | 	add	si, 6
  2762 | 000011E4 | 8B04                      | 	mov	ax, word [si]
  2763 | 000011E6 | 8946FC                    | 	mov	word [bp-4], ax
  2764 |          |                           | 	; >>>>> Line:	384
  2765 |          |                           | 	; >>>>> while (tempNext != 0) { 
  2766 | 000011E9 | EB3B                      | 	jmp	L_yakc_124
  2767 |          |                           | L_yakc_123:
  2768 |          |                           | 	; >>>>> Line:	385
  2769 |          |                           | 	; >>>>> if ((tempNext->taskPriority) > (item->taskPriority)) { 
  2770 | 000011EB | 8B76FC                    | 	mov	si, word [bp-4]
  2771 | 000011EE | 83C602                    | 	add	si, 2
  2772 | 000011F1 | 8B7E04                    | 	mov	di, word [bp+4]
  2773 | 000011F4 | 83C702                    | 	add	di, 2
  2774 | 000011F7 | 8A05                      | 	mov	al, byte [di]
  2775 | 000011F9 | 3A04                      | 	cmp	al, byte [si]
  2776 | 000011FB | 7318                      | 	jae	L_yakc_126
  2777 |          |                           | 	; >>>>> Line:	386
  2778 |          |                           | 	; >>>>> item->next = tempNext; 
  2779 | 000011FD | 8B7604                    | 	mov	si, word [bp+4]
  2780 | 00001200 | 83C606                    | 	add	si, 6
  2781 | 00001203 | 8B46FC                    | 	mov	ax, word [bp-4]
  2782 | 00001206 | 8904                      | 	mov	word [si], ax
  2783 |          |                           | 	; >>>>> Line:	387
  2784 |          |                           | 	; >>>>> temp->next = item; 
  2785 | 00001208 | 8B76FE                    | 	mov	si, word [bp-2]
  2786 | 0000120B | 83C606                    | 	add	si, 6
  2787 | 0000120E | 8B4604                    | 	mov	ax, word [bp+4]
  2788 | 00001211 | 8904                      | 	mov	word [si], ax
  2789 |          |                           | 	; >>>>> Line:	388
  2790 |          |                           | 	; >>>>> return; 
  2791 | 00001213 | EB2D                      | 	jmp	L_yakc_127
  2792 |          |                           | L_yakc_126:
  2793 |          |                           | 	; >>>>> Line:	390
  2794 |          |                           | 	; >>>>> temp = tempNext; 
  2795 | 00001215 | 8B46FC                    | 	mov	ax, word [bp-4]
  2796 | 00001218 | 8946FE                    | 	mov	word [bp-2], ax
  2797 |          |                           | 	; >>>>> Line:	391
  2798 |          |                           | 	; >>>>> tempNext = tempNext->next; 
  2799 | 0000121B | 8B76FC                    | 	mov	si, word [bp-4]
  2800 | 0000121E | 83C606                    | 	add	si, 6
  2801 | 00001221 | 8B04                      | 	mov	ax, word [si]
  2802 | 00001223 | 8946FC                    | 	mov	word [bp-4], ax
  2803 |          |                           | L_yakc_124:
  2804 | 00001226 | 8B46FC                    | 	mov	ax, word [bp-4]
  2805 | 00001229 | 85C0                      | 	test	ax, ax
  2806 | 0000122B | 75BE                      | 	jne	L_yakc_123
  2807 |          |                           | L_yakc_125:
  2808 |          |                           | 	; >>>>> Line:	393
  2809 |          |                           | 	; >>>>> temp->next = item; 
  2810 | 0000122D | 8B76FE                    | 	mov	si, word [bp-2]
  2811 | 00001230 | 83C606                    | 	add	si, 6
  2812 | 00001233 | 8B4604                    | 	mov	ax, word [bp+4]
  2813 | 00001236 | 8904                      | 	mov	word [si], ax
  2814 |          |                           | 	; >>>>> Line:	394
  2815 |          |                           | 	; >>>>> item->next = 0; 
  2816 | 00001238 | 8B7604                    | 	mov	si, word [bp+4]
  2817 | 0000123B | 83C606                    | 	add	si, 6
  2818 | 0000123E | C7040000                  | 	mov	word [si], 0
  2819 |          |                           | L_yakc_122:
  2820 |          |                           | L_yakc_120:
  2821 |          |                           | L_yakc_118:
  2822 |          |                           | L_yakc_127:
  2823 | 00001242 | 89EC                      | 	mov	sp, bp
  2824 | 00001244 | 5D                        | 	pop	bp
  2825 | 00001245 | C3                        | 	ret
  2826 |          |                           | L_yakc_116:
  2827 | 00001246 | 55                        | 	push	bp
  2828 | 00001247 | 89E5                      | 	mov	bp, sp
  2829 | 00001249 | 83EC04                    | 	sub	sp, 4
  2830 | 0000124C | E928FF                    | 	jmp	L_yakc_117
  2831 | 0000124F | 90                        | 	ALIGN	2
  2832 |          |                           | YKpopSorted:
  2833 |          |                           | 	; >>>>> Line:	399
  2834 |          |                           | 	; >>>>> struct Task* YKpopSorted (struct Task** listHead){ 
  2835 | 00001250 | EB32                      | 	jmp	L_yakc_129
  2836 |          |                           | L_yakc_130:
  2837 |          |                           | 	; >>>>> Line:	401
  2838 |          |                           | 	; >>>>> if (*listHead != 0) { 
  2839 | 00001252 | 8B7604                    | 	mov	si, word [bp+4]
  2840 | 00001255 | 8B04                      | 	mov	ax, word [si]
  2841 | 00001257 | 85C0                      | 	test	ax, ax
  2842 | 00001259 | 7423                      | 	je	L_yakc_131
  2843 |          |                           | 	; >>>>> Line:	402
  2844 |          |                           | 	; >>>>> temp = *listHead; 
  2845 | 0000125B | 8946FE                    | 	mov	word [bp-2], ax
  2846 |          |                           | 	; >>>>> Line:	403
  2847 |          |                           | 	; >>>>> *listHead = (*listHead)->next 
  2848 | 0000125E | 8B7604                    | 	mov	si, word [bp+4]
  2849 | 00001261 | 8B34                      | 	mov	si, word [si]
  2850 | 00001263 | 83C606                    | 	add	si, 6
  2851 | 00001266 | 8B7E04                    | 	mov	di, word [bp+4]
  2852 | 00001269 | 8B04                      | 	mov	ax, word [si]
  2853 | 0000126B | 8905                      | 	mov	word [di], ax
  2854 |          |                           | 	; >>>>> Line:	404
  2855 |          |                           | 	; >>>>> temp->next = 0; 
  2856 | 0000126D | 8B76FE                    | 	mov	si, word [bp-2]
  2857 | 00001270 | 83C606                    | 	add	si, 6
  2858 | 00001273 | C7040000                  | 	mov	word [si], 0
  2859 |          |                           | 	; >>>>> Line:	405
  2860 |          |                           | 	; >>>>> return temp; 
  2861 | 00001277 | 8B46FE                    | 	mov	ax, word [bp-2]
  2862 | 0000127A | EB04                      | 	jmp	L_yakc_132
  2863 | 0000127C | EB02                      | 	jmp	L_yakc_133
  2864 |          |                           | L_yakc_131:
  2865 |          |                           | 	; >>>>> Line:	408
  2866 |          |                           | 	; >>>>> return 0; 
  2867 | 0000127E | 31C0                      | 	xor	ax, ax
  2868 |          |                           | L_yakc_133:
  2869 |          |                           | L_yakc_132:
  2870 | 00001280 | 89EC                      | 	mov	sp, bp
  2871 | 00001282 | 5D                        | 	pop	bp
  2872 | 00001283 | C3                        | 	ret
  2873 |          |                           | L_yakc_129:
  2874 | 00001284 | 55                        | 	push	bp
  2875 | 00001285 | 89E5                      | 	mov	bp, sp
  2876 | 00001287 | 51                        | 	push	cx
  2877 | 00001288 | EBC8                      | 	jmp	L_yakc_130
  2878 |          |                           | 	ALIGN	2
  2879 |          |                           | YKremoveUnsorted:
  2880 |          |                           | 	; >>>>> Line:	412
  2881 |          |                           | 	; >>>>> void YKremoveUnsorted (struct Task* item, struct Task** listHead, struct Task** listTail){ 
  2882 | 0000128A | EB6B                      | 	jmp	L_yakc_135
  2883 |          |                           | L_yakc_136:
  2884 |          |                           | 	; >>>>> Line:	413
  2885 |          |                           | 	; >>>>> if (item != 0) { 
  2886 | 0000128C | 8B4604                    | 	mov	ax, word [bp+4]
  2887 | 0000128F | 85C0                      | 	test	ax, ax
  2888 | 00001291 | 7460                      | 	je	L_yakc_137
  2889 |          |                           | 	; >>>>> Line:	415
  2890 |          |                           | 	; >>>>> if (item->prev != 0) { 
  2891 | 00001293 | 8B7604                    | 	mov	si, word [bp+4]
  2892 | 00001296 | 83C608                    | 	add	si, 8
  2893 | 00001299 | 8B04                      | 	mov	ax, word [si]
  2894 | 0000129B | 85C0                      | 	test	ax, ax
  2895 | 0000129D | 7417                      | 	je	L_yakc_138
  2896 |          |                           | 	; >>>>> Line:	416
  2897 |          |                           | 	; >>>>> (item->prev)->next = item->next; 
  2898 | 0000129F | 8B7604                    | 	mov	si, word [bp+4]
  2899 | 000012A2 | 83C606                    | 	add	si, 6
  2900 | 000012A5 | 8B7E04                    | 	mov	di, word [bp+4]
  2901 | 000012A8 | 83C708                    | 	add	di, 8
  2902 | 000012AB | 8B3D                      | 	mov	di, word [di]
  2903 | 000012AD | 83C706                    | 	add	di, 6
  2904 | 000012B0 | 8B04                      | 	mov	ax, word [si]
  2905 | 000012B2 | 8905                      | 	mov	word [di], ax
  2906 | 000012B4 | EB0D                      | 	jmp	L_yakc_139
  2907 |          |                           | L_yakc_138:
  2908 |          |                           | 	; >>>>> Line:	419
  2909 |          |                           | 	; >>>>> *listHead = item->next; 
  2910 | 000012B6 | 8B7604                    | 	mov	si, word [bp+4]
  2911 | 000012B9 | 83C606                    | 	add	si, 6
  2912 | 000012BC | 8B7E06                    | 	mov	di, word [bp+6]
  2913 | 000012BF | 8B04                      | 	mov	ax, word [si]
  2914 | 000012C1 | 8905                      | 	mov	word [di], ax
  2915 |          |                           | L_yakc_139:
  2916 |          |                           | 	; >>>>> Line:	421
  2917 |          |                           | 	; >>>>> if (item->next != 0) { 
  2918 | 000012C3 | 8B7604                    | 	mov	si, word [bp+4]
  2919 | 000012C6 | 83C606                    | 	add	si, 6
  2920 | 000012C9 | 8B04                      | 	mov	ax, word [si]
  2921 | 000012CB | 85C0                      | 	test	ax, ax
  2922 | 000012CD | 7417                      | 	je	L_yakc_140
  2923 |          |                           | 	; >>>>> Line:	422
  2924 |          |                           | 	; >>>>> (item->next)->prev = item->prev; 
  2925 | 000012CF | 8B7604                    | 	mov	si, word [bp+4]
  2926 | 000012D2 | 83C608                    | 	add	si, 8
  2927 | 000012D5 | 8B7E04                    | 	mov	di, word [bp+4]
  2928 | 000012D8 | 83C706                    | 	add	di, 6
  2929 | 000012DB | 8B3D                      | 	mov	di, word [di]
  2930 | 000012DD | 83C708                    | 	add	di, 8
  2931 | 000012E0 | 8B04                      | 	mov	ax, word [si]
  2932 | 000012E2 | 8905                      | 	mov	word [di], ax
  2933 | 000012E4 | EB0D                      | 	jmp	L_yakc_141
  2934 |          |                           | L_yakc_140:
  2935 |          |                           | 	; >>>>> Line:	425
  2936 |          |                           | 	; >>>>> *listTail = item->prev; 
  2937 | 000012E6 | 8B7604                    | 	mov	si, word [bp+4]
  2938 | 000012E9 | 83C608                    | 	add	si, 8
  2939 | 000012EC | 8B7E08                    | 	mov	di, word [bp+8]
  2940 | 000012EF | 8B04                      | 	mov	ax, word [si]
  2941 | 000012F1 | 8905                      | 	mov	word [di], ax
  2942 |          |                           | L_yakc_141:
  2943 |          |                           | L_yakc_137:
  2944 | 000012F3 | 89EC                      | 	mov	sp, bp
  2945 | 000012F5 | 5D                        | 	pop	bp
  2946 | 000012F6 | C3                        | 	ret
  2947 |          |                           | L_yakc_135:
  2948 | 000012F7 | 55                        | 	push	bp
  2949 | 000012F8 | 89E5                      | 	mov	bp, sp
  2950 | 000012FA | EB90                      | 	jmp	L_yakc_136
  2951 |          |                           | 	ALIGN	2
  2952 |          |                           | YKinsertUnsorted:
  2953 |          |                           | 	; >>>>> Line:	430
  2954 |          |                           | 	; >>>>> void YKinsertUnsorted(struct Task* item, struct Task** listHead, struct Task** listTail){ 
  2955 | 000012FC | EB66                      | 	jmp	L_yakc_143
  2956 |          |                           | L_yakc_144:
  2957 |          |                           | 	; >>>>> Line:	431
  2958 |          |                           | 	; >>>>> if (item != 0) { 
  2959 | 000012FE | 8B4604                    | 	mov	ax, word [bp+4]
  2960 | 00001301 | 85C0                      | 	test	ax, ax
  2961 | 00001303 | 745B                      | 	je	L_yakc_145
  2962 |          |                           | 	; >>>>> Line:	432
  2963 |          |                           | 	; >>>>> if (*listTai 
  2964 | 00001305 | 8B7608                    | 	mov	si, word [bp+8]
  2965 | 00001308 | 8B04                      | 	mov	ax, word [si]
  2966 | 0000130A | 85C0                      | 	test	ax, ax
  2967 | 0000130C | 7526                      | 	jne	L_yakc_146
  2968 |          |                           | 	; >>>>> Line:	433
  2969 |          |                           | 	; >>>>> *listHead = item; 
  2970 | 0000130E | 8B7606                    | 	mov	si, word [bp+6]
  2971 | 00001311 | 8B4604                    | 	mov	ax, word [bp+4]
  2972 | 00001314 | 8904                      | 	mov	word [si], ax
  2973 |          |                           | 	; >>>>> Line:	434
  2974 |          |                           | 	; >>>>> *listTail = item; 
  2975 | 00001316 | 8B7608                    | 	mov	si, word [bp+8]
  2976 | 00001319 | 8B4604                    | 	mov	ax, word [bp+4]
  2977 | 0000131C | 8904                      | 	mov	word [si], ax
  2978 |          |                           | 	; >>>>> Line:	435
  2979 |          |                           | 	; >>>>> item->next = 0; 
  2980 | 0000131E | 8B7604                    | 	mov	si, word [bp+4]
  2981 | 00001321 | 83C606                    | 	add	si, 6
  2982 | 00001324 | C7040000                  | 	mov	word [si], 0
  2983 |          |                           | 	; >>>>> Line:	436
  2984 |          |                           | 	; >>>>> item->prev = 0; 
  2985 | 00001328 | 8B7604                    | 	mov	si, word [bp+4]
  2986 | 0000132B | 83C608                    | 	add	si, 8
  2987 | 0000132E | C7040000                  | 	mov	word [si], 0
  2988 | 00001332 | EB2C                      | 	jmp	L_yakc_147
  2989 |          |                           | L_yakc_146:
  2990 |          |                           | 	; >>>>> Line:	439
  2991 |          |                           | 	; >>>>> (*listTail)->next = item; 
  2992 | 00001334 | 8B7608                    | 	mov	si, word [bp+8]
  2993 | 00001337 | 8B34                      | 	mov	si, word [si]
  2994 | 00001339 | 83C606                    | 	add	si, 6
  2995 | 0000133C | 8B4604                    | 	mov	ax, word [bp+4]
  2996 | 0000133F | 8904                      | 	mov	word [si], ax
  2997 |          |                           | 	; >>>>> Line:	440
  2998 |          |                           | 	; >>>>> item->prev = *listTail; 
  2999 | 00001341 | 8B7608                    | 	mov	si, word [bp+8]
  3000 | 00001344 | 8B7E04                    | 	mov	di, word [bp+4]
  3001 | 00001347 | 83C708                    | 	add	di, 8
  3002 | 0000134A | 8B04                      | 	mov	ax, word [si]
  3003 | 0000134C | 8905                      | 	mov	word [di], ax
  3004 |          |                           | 	; >>>>> Line:	441
  3005 |          |                           | 	; >>>>> *listTail = item; 
  3006 | 0000134E | 8B7608                    | 	mov	si, word [bp+8]
  3007 | 00001351 | 8B4604                    | 	mov	ax, word [bp+4]
  3008 | 00001354 | 8904                      | 	mov	word [si], ax
  3009 |          |                           | 	; >>>>> Line:	442
  3010 |          |                           | 	; >>>>> item->next = 0; 
  3011 | 00001356 | 8B7604                    | 	mov	si, word [bp+4]
  3012 | 00001359 | 83C606                    | 	add	si, 6
  3013 | 0000135C | C7040000                  | 	mov	word [si], 0
  3014 |          |                           | L_yakc_147:
  3015 |          |                           | L_yakc_145:
  3016 | 00001360 | 89EC                      | 	mov	sp, bp
  3017 | 00001362 | 5D                        | 	pop	bp
  3018 | 00001363 | C3                        | 	ret
  3019 |          |                           | L_yakc_143:
  3020 | 00001364 | 55                        | 	push	bp
  3021 | 00001365 | 89E5                      | 	mov	bp, sp
  3022 | 00001367 | EB95                      | 	jmp	L_yakc_144
  3023 | 00001369 | 90                        | 	ALIGN	2
  3024 |          |                           | YKTickCount:
  3025 | 0000136A | 00<rept>                  | 	TIMES	2 db 0
  3026 |          |                           | YKCtxSwCount:
  3027 | 0000136C | 00<rept>                  | 	TIMES	2 db 0
  3028 |          |                           | YKIdleCount:
  3029 | 0000136E | 00<rept>                  | 	TIMES	2 db 0
  3030 |          |                           | YKsave:
  3031 | 00001370 | 00<rept>                  | 	TIMES	2 db 0
  3032 |          |                           | YKrestore:
  3033 | 00001372 | 00<rept>                  | 	TIMES	2 db 0
  3034 |          |                           | YKqueueCount:
  3035 | 00001374 | 00<rept>                  | 	TIMES	2 db 0
  3036 |          |                           | YKsemCount:
  3037 | 00001376 | 00<rept>                  | 	TIMES	2 db 0
  3038 |          |                           | YKtaskCount:
  3039 | 00001378 | 00<rept>                  | 	TIMES	2 db 0
  3040 |          |                           | YKeventCount:
  3041 | 0000137A | 00<rept>                  | 	TIMES	2 db 0
  3042 |          |                           | YKRunFlag:
  3043 | 0000137C | 00<rept>                  | 	TIMES	2 db 0
  3044 |          |                           | YKIsrDepth:
  3045 | 0000137E | 00<rept>                  | 	TIMES	2 db 0
  3046 |          |                           | YKIdleVar:
  3047 | 00001380 | 00<rept>                  | 	TIMES	2 db 0
  3048 |          |                           | readyHead:
  3049 | 00001382 | 00<rept>                  | 	TIMES	2 db 0
  3050 |          |                           | blockedHead:
  3051 | 00001384 | 00<rept>                  | 	TIMES	2 db 0
  3052 |          |                           | blockedTail:
  3053 | 00001386 | 00<rept>                  | 	TIMES	2 db 0
  3054 |          |                           | YKRunningTask:
  3055 | 00001388 | 00<rept>                  | 	TIMES	2 db 0
  3056 |          |                           | YKtasks:
  3057 | 0000138A | 00<rept>                  | 	TIMES	140 db 0
  3058 |          |                           | YKqueues:
  3059 | 00001416 | 00<rept>                  | 	TIMES	42 db 0
  3060 |          |                           | YKevents:
  3061 | 00001440 | 00<rept>                  | 	TIMES	36 db 0
  3062 |          |                           | YKsemaphores:
  3063 | 00001464 | 00<rept>                  | 	TIMES	60 db 0
  3064 |          |                           | YKIdleStk:
  3065 | 000014A0 | 00<rept>                  | 	TIMES	512 db 0
  3066 |          |                           | ; Generated by c86 (BYU-NASM) 5.1 (beta) from lab8app.i
  3067 |          |                           | 	CPU	8086
  3068 |          |                           | 	ALIGN	2
  3069 | 000016A0 | E98F08                    | 	jmp	main	; Jump to program start
  3070 | 000016A3 | 90                        | 	ALIGN	2
  3071 |          |                           | slotOr:
  3072 | 000016A4 | 000000000000030001-       | 	DW	0,0,0,3,1
  3073 | 000016AD | 00                        | ...
  3074 | 000016AE | 020001000300000002-       | 	DW	2,1,3,0,2
  3075 | 000016B7 | 00                        | ...
  3076 |          |                           | slotColumn:
  3077 | 000016B8 | 010004000000000005-       | 	DW	1,4,0,0,5
  3078 | 000016C1 | 00                        | ...
  3079 | 000016C2 | 020002000300030005-       | 	DW	2,2,3,3,5
  3080 | 000016CB | 00                        | ...
  3081 |          |                           | slotLrow:
  3082 | 000016CC | 380007003000200003-       | 	DW	56,7,48,32,3
  3083 | 000016D5 | 00                        | ...
  3084 | 000016D6 | 080018000400060001-       | 	DW	8,24,4,6,1
  3085 | 000016DF | 00                        | ...
  3086 |          |                           | slotUrow:
  3087 | 000016E0 | 000000002000300001-       | 	DW	0,0,32,48,1
  3088 | 000016E9 | 00                        | ...
  3089 | 000016EA | 180008000600040003-       | 	DW	24,8,6,4,3
  3090 | 000016F3 | 00                        | ...
  3091 |          |                           | L_lab8app_1:
  3092 | 000016F4 | 0A0D47616D65204F76-       | 	DB	0xA,0xD,"Game Over!",0xA,0xD,0
  3093 | 000016FD | 6572210A0D00              | ...
  3094 | 00001703 | 90                        | 	ALIGN	2
  3095 |          |                           | SMgameOverHdlr:
  3096 |          |                           | 	; >>>>> Line:	41
  3097 |          |                           | 	; >>>>> void SMgameOverHdlr(void){ 
  3098 | 00001704 | EB17                      | 	jmp	L_lab8app_2
  3099 |          |                           | L_lab8app_3:
  3100 |          |                           | 	; >>>>> Line:	42
  3101 |          |                           | 	; >>>>> printString("\n\rGam 
  3102 | 00001706 | B8[F416]                  | 	mov	ax, L_lab8app_1
  3103 | 00001709 | 50                        | 	push	ax
  3104 | 0000170A | E81BED                    | 	call	printString
  3105 | 0000170D | 83C402                    | 	add	sp, 2
  3106 |          |                           | 	; >>>>> Line:	43
  3107 |          |                           | 	; >>>>> exit(0); 
  3108 | 00001710 | 30C0                      | 	xor	al, al
  3109 | 00001712 | 50                        | 	push	ax
  3110 | 00001713 | E8C4EC                    | 	call	exit
  3111 | 00001716 | 83C402                    | 	add	sp, 2
  3112 | 00001719 | 89EC                      | 	mov	sp, bp
  3113 | 0000171B | 5D                        | 	pop	bp
  3114 | 0000171C | C3                        | 	ret
  3115 |          |                           | L_lab8app_2:
  3116 | 0000171D | 55                        | 	push	bp
  3117 | 0000171E | 89E5                      | 	mov	bp, sp
  3118 | 00001720 | EBE4                      | 	jmp	L_lab8app_3
  3119 |          |                           | L_lab8app_5:
  3120 | 00001722 | 0A0D50696563655120-       | 	DB	0xA,0xD,"PieceQ overflow!",0xA,0xD,0
  3121 | 0000172B | 6F766572666C6F7721-       | ...
  3122 | 00001734 | 0A0D00                    | ...
  3123 | 00001737 | 90                        | 	ALIGN	2
  3124 |          |                           | SMnewpieceHdlr:
  3125 |          |                           | 	; >>>>> Line:	46
  3126 |          |                           | 	; >>>>> void SMnewpieceHdlr(void){ 
  3127 | 00001738 | E98E00                    | 	jmp	L_lab8app_6
  3128 |          |                           | L_lab8app_7:
  3129 |          |                           | 	; >>>>> Line:	47
  3130 |          |                           | 	; >>>>> pieceArray[pieceNext].pieceID = NewPieceID; 
  3131 | 0000173B | A1[882C]                  | 	mov	ax, word [pieceNext]
  3132 | 0000173E | B90300                    | 	mov	cx, 3
  3133 | 00001741 | D3E0                      | 	shl	ax, cl
  3134 | 00001743 | 89C6                      | 	mov	si, ax
  3135 | 00001745 | 81C6[B21F]                | 	add	si, pieceArray
  3136 | 00001749 | A1[C400]                  | 	mov	ax, word [NewPieceID]
  3137 | 0000174C | 8904                      | 	mov	word [si], ax
  3138 |          |                           | 	; >>>>> Line:	48
  3139 |          |                           | 	; >>>>> pieceArray[pieceNext].type = NewPieceType; 
  3140 | 0000174E | A1[882C]                  | 	mov	ax, word [pieceNext]
  3141 | 00001751 | B90300                    | 	mov	cx, 3
  3142 | 00001754 | D3E0                      | 	shl	ax, cl
  3143 | 00001756 | 05[B21F]                  | 	add	ax, pieceArray
  3144 | 00001759 | 89C6                      | 	mov	si, ax
  3145 | 0000175B | 83C602                    | 	add	si, 2
  3146 | 0000175E | A1[C200]                  | 	mov	ax, word [NewPieceType]
  3147 | 00001761 | 8904                      | 	mov	word [si], ax
  3148 |          |                           | 	; >>>>> Line:	49
  3149 |          |                           | 	; >>>>> pieceArray[pieceNext].orientation = NewPieceOrientation; 
  3150 | 00001763 | A1[882C]                  | 	mov	ax, word [pieceNext]
  3151 | 00001766 | B90300                    | 	mov	cx, 3
  3152 | 00001769 | D3E0                      | 	shl	ax, cl
  3153 | 0000176B | 05[B21F]                  | 	add	ax, pieceArray
  3154 | 0000176E | 89C6                      | 	mov	si, ax
  3155 | 00001770 | 83C604                    | 	add	si, 4
  3156 | 00001773 | A1[C600]                  | 	mov	ax, word [NewPieceOrientation]
  3157 | 00001776 | 8904                      | 	mov	word [si], ax
  3158 |          |                           | 	; >>>>> Line:	50
  3159 |          |                           | 	; >>>>> pieceArray[pieceNext].column = NewPieceColumn; 
  3160 | 00001778 | A1[882C]                  | 	mov	ax, word [pieceNext]
  3161 | 0000177B | B90300                    | 	mov	cx, 3
  3162 | 0000177E | D3E0                      | 	shl	ax, cl
  3163 | 00001780 | 05[B21F]                  | 	add	ax, pieceArray
  3164 | 00001783 | 89C6                      | 	mov	si, ax
  3165 | 00001785 | 83C606                    | 	add	si, 6
  3166 | 00001788 | A1[C800]                  | 	mov	ax, word [NewPieceColumn]
  3167 | 0000178B | 8904                      | 	mov	word [si], ax
  3168 |          |                           | 	; >>>>> Line:	52
  3169 |          |                           | 	; >>>>> if (YKQPost(pieceQPtr, (void *) &(pieceArray[pieceNext])) == 0) 
  3170 | 0000178D | A1[882C]                  | 	mov	ax, word [pieceNext]
  3171 | 00001790 | B90300                    | 	mov	cx, 3
  3172 | 00001793 | D3E0                      | 	shl	ax, cl
  3173 | 00001795 | 05[B21F]                  | 	add	ax, pieceArray
  3174 | 00001798 | 50                        | 	push	ax
  3175 | 00001799 | FF36[7A20]                | 	push	word [pieceQPtr]
  3176 | 0000179D | E8A4F5                    | 	call	YKQPost
  3177 | 000017A0 | 83C404                    | 	add	sp, 4
  3178 | 000017A3 | 85C0                      | 	test	ax, ax
  3179 | 000017A5 | 750C                      | 	jne	L_lab8app_8
  3180 |          |                           | 	; >>>>> Line:	53
  3181 |          |                           | 	; >>>>> printString("\n\rPieceQ overflow!\n\r"); 
  3182 | 000017A7 | B8[2217]                  | 	mov	ax, L_lab8app_5
  3183 | 000017AA | 50                        | 	push	ax
  3184 | 000017AB | E87AEC                    | 	call	printString
  3185 | 000017AE | 83C402                    | 	add	sp, 2
  3186 | 000017B1 | EB12                      | 	jmp	L_lab8app_9
  3187 |          |                           | L_lab8app_8:
  3188 |          |                           | 	; >>>>> Line:	54
  3189 |          |                           | 	; >>>>> else if (++pieceNext >= 10) 
  3190 | 000017B3 | A1[882C]                  | 	mov	ax, word [pieceNext]
  3191 | 000017B6 | 40                        | 	inc	ax
  3192 | 000017B7 | A3[882C]                  | 	mov	word [pieceNext], ax
  3193 | 000017BA | 83F80A                    | 	cmp	ax, 10
  3194 | 000017BD | 7206                      | 	jb	L_lab8app_10
  3195 |          |                           | 	; >>>>> Line:	55
  3196 |          |                           | 	; >>>>> pieceNext = 0; 
  3197 | 000017BF | C706[882C]0000            | 	mov	word [pieceNext], 0
  3198 |          |                           | L_lab8app_10:
  3199 |          |                           | L_lab8app_9:
  3200 | 000017C5 | 89EC                      | 	mov	sp, bp
  3201 | 000017C7 | 5D                        | 	pop	bp
  3202 | 000017C8 | C3                        | 	ret
  3203 |          |                           | L_lab8app_6:
  3204 | 000017C9 | 55                        | 	push	bp
  3205 | 000017CA | 89E5                      | 	mov	bp, sp
  3206 | 000017CC | E96CFF                    | 	jmp	L_lab8app_7
  3207 | 000017CF | 90                        | 	ALIGN	2
  3208 |          |                           | SMrecievedCmdHdlr:
  3209 |          |                           | 	; >>>>> Line:	58
  3210 |          |                           | 	; >>>>> void SMrecievedCmdHdlr(void){ 
  3211 | 000017D0 | EB0E                      | 	jmp	L_lab8app_12
  3212 |          |                           | L_lab8app_13:
  3213 |          |                           | 	; >>>>> Line:	59
  3214 |          |                           | 	; >>>>> YKSemPost(SemPtr); 
  3215 | 000017D2 | FF36[7E20]                | 	push	word [SemPtr]
  3216 | 000017D6 | E849F9                    | 	call	YKSemPost
  3217 | 000017D9 | 83C402                    | 	add	sp, 2
  3218 | 000017DC | 89EC                      | 	mov	sp, bp
  3219 | 000017DE | 5D                        | 	pop	bp
  3220 | 000017DF | C3                        | 	ret
  3221 |          |                           | L_lab8app_12:
  3222 | 000017E0 | 55                        | 	push	bp
  3223 | 000017E1 | 89E5                      | 	mov	bp, sp
  3224 | 000017E3 | EBED                      | 	jmp	L_lab8app_13
  3225 | 000017E5 | 90                        | 	ALIGN	2
  3226 |          |                           | getCmds:
  3227 |          |                           | 	; >>>>> Line:	63
  3228 |          |                           | 	; >>>>> mdNum = cmdNum + (-1*(tmpCmd.slide1)); 
  3229 | 000017E6 | E94F01                    | 	jmp	L_lab8app_15
  3230 |          |                           | L_lab8app_16:
  3231 |          |                           | 	; >>>>> Line:	68
  3232 |          |                           | 	; >>>>> rotation = piece->orientation; 
  3233 | 000017E9 | 8B7604                    | 	mov	si, word [bp+4]
  3234 | 000017EC | 83C604                    | 	add	si, 4
  3235 | 000017EF | 8B04                      | 	mov	ax, word [si]
  3236 | 000017F1 | 8946FA                    | 	mov	word [bp-6], ax
  3237 |          |                           | 	; >>>>> Line:	69
  3238 |          |                           | 	; >>>>> column = piece->column; 
  3239 | 000017F4 | 8B7604                    | 	mov	si, word [bp+4]
  3240 | 000017F7 | 83C606                    | 	add	si, 6
  3241 | 000017FA | 8B04                      | 	mov	ax, word [si]
  3242 | 000017FC | 8946FC                    | 	mov	word [bp-4], ax
  3243 |          |                           | 	; >>>>> Line:	70
  3244 |          |                           | 	; >>>>> cmdNum = 0; 
  3245 | 000017FF | C746FE0000                | 	mov	word [bp-2], 0
  3246 |          |                           | 	; >>>>> Line:	71
  3247 |          |                           | 	; >>>>> tmpCmd.slide1 = 0; 
  3248 | 00001804 | C706[902C]0000            | 	mov	word [(2+tmpCmd)], 0
  3249 |          |                           | 	; >>>>> Line:	72
  3250 |          |                           | 	; >>>>> tmpCmd.slide2 = 0; 
  3251 | 0000180A | C706[942C]0000            | 	mov	word [(6+tmpCmd)], 0
  3252 |          |                           | 	; >>>>> Line:	74
  3253 |          |                           | 	; >>>>> while (rotation != slotOr[slotNum]){ 
  3254 | 00001810 | EB14                      | 	jmp	L_lab8app_18
  3255 |          |                           | L_lab8app_17:
  3256 |          |                           | 	; >>>>> Line:	75
  3257 |          |                           | 	; >>>>> cmdNum++; 
  3258 | 00001812 | FF46FE                    | 	inc	word [bp-2]
  3259 |          |                           | 	; >>>>> Line:	76
  3260 |          |                           | 	; >>>>> if (rotation == 0) { rotation = 3;} 
  3261 | 00001815 | 8B46FA                    | 	mov	ax, word [bp-6]
  3262 | 00001818 | 85C0                      | 	test	ax, ax
  3263 | 0000181A | 7507                      | 	jne	L_lab8app_20
  3264 |          |                           | 	; >>>>> Line:	76
  3265 |          |                           | 	; >>>>> if (rotation == 0) { rotation = 3;} 
  3266 | 0000181C | C746FA0300                | 	mov	word [bp-6], 3
  3267 | 00001821 | EB03                      | 	jmp	L_lab8app_21
  3268 |          |                           | L_lab8app_20:
  3269 |          |                           | 	; >>>>> Line:	77
  3270 |          |                           | 	; >>>>> else {rotation--;} 
  3271 | 00001823 | FF4EFA                    | 	dec	word [bp-6]
  3272 |          |                           | L_lab8app_21:
  3273 |          |                           | L_lab8app_18:
  3274 | 00001826 | 8B4606                    | 	mov	ax, word [bp+6]
  3275 | 00001829 | D1E0                      | 	shl	ax, 1
  3276 | 0000182B | 89C6                      | 	mov	si, ax
  3277 | 0000182D | 81C6[A416]                | 	add	si, slotOr
  3278 | 00001831 | 8B46FA                    | 	mov	ax, word [bp-6]
  3279 | 00001834 | 3B04                      | 	cmp	ax, word [si]
  3280 | 00001836 | 75DA                      | 	jne	L_lab8app_17
  3281 |          |                           | L_lab8app_19:
  3282 |          |                           | 	; >>>>> Line:	79
  3283 |          |                           | 	; >>>>> if (cmdNum > 2){ 
  3284 | 00001838 | 837EFE02                  | 	cmp	word [bp-2], 2
  3285 | 0000183C | 760D                      | 	jbe	L_lab8app_22
  3286 |          |                           | 	; >>>>> Line:	80
  3287 |          |                           | 	; >>>>> cmdNum = 1; 
  3288 | 0000183E | C746FE0100                | 	mov	word [bp-2], 1
  3289 |          |                           | 	; >>>>> Line:	81
  3290 |          |                           | 	; >>>>> tmpCmd.rotate = -1; 
  3291 | 00001843 | C706[922C]FFFF            | 	mov	word [(4+tmpCmd)], -1
  3292 | 00001849 | EB06                      | 	jmp	L_lab8app_23
  3293 |          |                           | L_lab8app_22:
  3294 |          |                           | 	; >>>>> Line:	84
  3295 |          |                           | 	; >>>>> tmpCmd.rotate = cmdNum; 
  3296 | 0000184B | 8B46FE                    | 	mov	ax, word [bp-2]
  3297 | 0000184E | A3[922C]                  | 	mov	word [(4+tmpCmd)], ax
  3298 |          |                           | L_lab8app_23:
  3299 |          |                           | 	; >>>>> Line:	87
  3300 |          |                           | 	; >>>>> tmpCmd.slide2 = 0; 
  3301 | 00001851 | C706[942C]0000            | 	mov	word [(6+tmpCmd)], 0
  3302 |          |                           | 	; >>>>> Line:	88
  3303 |          |                           | 	; >>>>> tmpCmd.slide1 = (slotColumn[slotNum])-column; 
  3304 | 00001857 | 8B4606                    | 	mov	ax, word [bp+6]
  3305 | 0000185A | D1E0                      | 	shl	ax, 1
  3306 | 0000185C | 89C6                      | 	mov	si, ax
  3307 | 0000185E | 81C6[B816]                | 	add	si, slotColumn
  3308 | 00001862 | 8B04                      | 	mov	ax, word [si]
  3309 | 00001864 | 2B46FC                    | 	sub	ax, word [bp-4]
  3310 | 00001867 | A3[902C]                  | 	mov	word [(2+tmpCmd)], ax
  3311 |          |                           | 	; >>>>> Line:	89
  3312 |          |                           | 	; >>>>> if (tmpCmd.slide1 < 0){ 
  3313 | 0000186A | 833E[902C]00              | 	cmp	word [(2+tmpCmd)], 0
  3314 | 0000186F | 7D10                      | 	jge	L_lab8app_24
  3315 |          |                           | 	; >>>>> Line:	90
  3316 |          |                           | 	; >>>>> cmdNum = cmdNum + (-1*(tmpCmd.slide1)); 
  3317 | 00001871 | A1[902C]                  | 	mov	ax, word [(2+tmpCmd)]
  3318 | 00001874 | B9FFFF                    | 	mov	cx, -1
  3319 | 00001877 | F7E9                      | 	imul	cx
  3320 | 00001879 | 0346FE                    | 	add	ax, word [bp-2]
  3321 | 0000187C | 8946FE                    | 	mov	word [bp-2], ax
  3322 | 0000187F | EB09                      | 	jmp	L_lab8app_25
  3323 |          |                           | L_lab8app_24:
  3324 |          |                           | 	; >>>>> Line:	93
  3325 |          |                           | 	; >>>>> cmdNum = cmdNum + tmpCmd.slide1; 
  3326 | 00001881 | A1[902C]                  | 	mov	ax, word [(2+tmpCmd)]
  3327 | 00001884 | 0346FE                    | 	add	ax, word [bp-2]
  3328 | 00001887 | 8946FE                    | 	mov	word [bp-2], ax
  3329 |          |                           | L_lab8app_25:
  3330 |          |                           | 	; >>>>> Line:	96
  3331 |          |                           | 	; >>>>> if (tmpCmd.rotate != 0){ 
  3332 | 0000188A | A1[922C]                  | 	mov	ax, word [(4+tmpCmd)]
  3333 | 0000188D | 85C0                      | 	test	ax, ax
  3334 | 0000188F | 7503E99D00                | 	je	L_lab8app_26
  3335 |          |                           | 	; >>>>> Line:	97
  3336 |          |                           | 	; >>>>> if (slotColumn[slotNum] == 0) { 
  3337 | 00001894 | 8B4606                    | 	mov	ax, word [bp+6]
  3338 | 00001897 | D1E0                      | 	shl	ax, 1
  3339 | 00001899 | 89C6                      | 	mov	si, ax
  3340 | 0000189B | 81C6[B816]                | 	add	si, slotColumn
  3341 | 0000189F | 8B04                      | 	mov	ax, word [si]
  3342 | 000018A1 | 85C0                      | 	test	ax, ax
  3343 | 000018A3 | 753E                      | 	jne	L_lab8app_27
  3344 |          |                           | 	; >>>>> Line:	98
  3345 |          |                           | 	; >>>>> if (column == 0) { 
  3346 | 000018A5 | 8B46FC                    | 	mov	ax, word [bp-4]
  3347 | 000018A8 | 85C0                      | 	test	ax, ax
  3348 | 000018AA | 7517                      | 	jne	L_lab8app_28
  3349 |          |                           | 	; >>>>> Line:	99
  3350 |          |                           | 	; >>>>> tmpCmd.slide1 = 1; 
  3351 | 000018AC | C706[902C]0100            | 	mov	word [(2+tmpCmd)], 1
  3352 |          |                           | 	; >>>>> Line:	100
  3353 |          |                           | 	; >>>>> tmpCmd.slide2 = -1; 
  3354 | 000018B2 | C706[942C]FFFF            | 	mov	word [(6+tmpCmd)], -1
  3355 |          |                           | 	; >>>>> Line:	101
  3356 |          |                           | 	; >>>>> cmdNum = cmdNum +2; 
  3357 | 000018B8 | 8B46FE                    | 	mov	ax, word [bp-2]
  3358 | 000018BB | 83C002                    | 	add	ax, 2
  3359 | 000018BE | 8946FE                    | 	mov	word [bp-2], ax
  3360 | 000018C1 | EB20                      | 	jmp	L_lab8app_29
  3361 |          |                           | L_lab8app_28:
  3362 |          |                           | 	; >>>>> Line:	103
  3363 |          |                           | 	; >>>>> else if (column == 5) { 
  3364 | 000018C3 | 837EFC05                  | 	cmp	word [bp-4], 5
  3365 | 000018C7 | 750E                      | 	jne	L_lab8app_30
  3366 |          |                           | 	; >>>>> Line:	104
  3367 |          |                           | 	; >>>>> tmpCmd.slide1 = -1; 
  3368 | 000018C9 | C706[902C]FFFF            | 	mov	word [(2+tmpCmd)], -1
  3369 |          |                           | 	; >>>>> Line:	105
  3370 |          |                           | 	; >>>>> tmpCmd.slide2 = -4; 
  3371 | 000018CF | C706[942C]FCFF            | 	mov	word [(6+tmpCmd)], -4
  3372 | 000018D5 | EB0C                      | 	jmp	L_lab8app_31
  3373 |          |                           | L_lab8app_30:
  3374 |          |                           | 	; >>>>> Line:	109
  3375 |          |                           | 	; >>>>> tmpCmd.slide2 = tmpCmd.slide1; 
  3376 | 000018D7 | A1[902C]                  | 	mov	ax, word [(2+tmpCmd)]
  3377 | 000018DA | A3[942C]                  | 	mov	word [(6+tmpCmd)], ax
  3378 |          |                           | 	; >>>>> Line:	110
  3379 |          |                           | 	; >>>>> tmpCmd.slide1 = 0; 
  3380 | 000018DD | C706[902C]0000            | 	mov	word [(2+tmpCmd)], 0
  3381 |          |                           | L_lab8app_31:
  3382 |          |                           | L_lab8app_29:
  3383 |          |                           | L_lab8app_27:
  3384 |          |                           | 	; >>>>> Line:	113
  3385 |          |                           | 	; >>>>> if (slotColumn[slotNum] == 5) { 
  3386 | 000018E3 | 8B4606                    | 	mov	ax, word [bp+6]
  3387 | 000018E6 | D1E0                      | 	shl	ax, 1
  3388 | 000018E8 | 89C6                      | 	mov	si, ax
  3389 | 000018EA | 81C6[B816]                | 	add	si, slotColumn
  3390 | 000018EE | 833C05                    | 	cmp	word [si], 5
  3391 | 000018F1 | 753E                      | 	jne	L_lab8app_32
  3392 |          |                           | 	; >>>>> Line:	114
  3393 |          |                           | 	; >>>>> if (column == 0) { 
  3394 | 000018F3 | 8B46FC                    | 	mov	ax, word [bp-4]
  3395 | 000018F6 | 85C0                      | 	test	ax, ax
  3396 | 000018F8 | 750E                      | 	jne	L_lab8app_33
  3397 |          |                           | 	; >>>>> Line:	115
  3398 |          |                           | 	; >>>>> tmpCmd.slide1 = 1; 
  3399 | 000018FA | C706[902C]0100            | 	mov	word [(2+tmpCmd)], 1
  3400 |          |                           | 	; >>>>> Line:	116
  3401 |          |                           | 	; >>>>> tmpCmd.slide2 = 4; 
  3402 | 00001900 | C706[942C]0400            | 	mov	word [(6+tmpCmd)], 4
  3403 | 00001906 | EB29                      | 	jmp	L_lab8app_34
  3404 |          |                           | L_lab8app_33:
  3405 |          |                           | 	; >>>>> Line:	118
  3406 |          |                           | 	; >>>>> else if (column == 5) { 
  3407 | 00001908 | 837EFC05                  | 	cmp	word [bp-4], 5
  3408 | 0000190C | 7517                      | 	jne	L_lab8app_35
  3409 |          |                           | 	; >>>>> Line:	119
  3410 |          |                           | 	; >>>>> tmpCmd.slide1 = - 
  3411 | 0000190E | C706[902C]FFFF            | 	mov	word [(2+tmpCmd)], -1
  3412 |          |                           | 	; >>>>> Line:	120
  3413 |          |                           | 	; >>>>> tmpCmd.slide2 = 1; 
  3414 | 00001914 | C706[942C]0100            | 	mov	word [(6+tmpCmd)], 1
  3415 |          |                           | 	; >>>>> Line:	121
  3416 |          |                           | 	; >>>>> cmdNum = cmdNum +2; 
  3417 | 0000191A | 8B46FE                    | 	mov	ax, word [bp-2]
  3418 | 0000191D | 83C002                    | 	add	ax, 2
  3419 | 00001920 | 8946FE                    | 	mov	word [bp-2], ax
  3420 | 00001923 | EB0C                      | 	jmp	L_lab8app_36
  3421 |          |                           | L_lab8app_35:
  3422 |          |                           | 	; >>>>> Line:	125
  3423 |          |                           | 	; >>>>> tmpCmd.slide2 = tmpCmd.slide1; 
  3424 | 00001925 | A1[902C]                  | 	mov	ax, word [(2+tmpCmd)]
  3425 | 00001928 | A3[942C]                  | 	mov	word [(6+tmpCmd)], ax
  3426 |          |                           | 	; >>>>> Line:	126
  3427 |          |                           | 	; >>>>> tmpCmd.slide1 = 0; 
  3428 | 0000192B | C706[902C]0000            | 	mov	word [(2+tmpCmd)], 0
  3429 |          |                           | L_lab8app_36:
  3430 |          |                           | L_lab8app_34:
  3431 |          |                           | L_lab8app_32:
  3432 |          |                           | L_lab8app_26:
  3433 |          |                           | 	; >>>>> Line:	131
  3434 |          |                           | 	; >>>>> return cmdNum; 
  3435 | 00001931 | 8B46FE                    | 	mov	ax, word [bp-2]
  3436 |          |                           | L_lab8app_37:
  3437 | 00001934 | 89EC                      | 	mov	sp, bp
  3438 | 00001936 | 5D                        | 	pop	bp
  3439 | 00001937 | C3                        | 	ret
  3440 |          |                           | L_lab8app_15:
  3441 | 00001938 | 55                        | 	push	bp
  3442 | 00001939 | 89E5                      | 	mov	bp, sp
  3443 | 0000193B | 83EC06                    | 	sub	sp, 6
  3444 | 0000193E | E9A8FE                    | 	jmp	L_lab8app_16
  3445 |          |                           | L_lab8app_41:
  3446 | 00001941 | 0A0D636D6451206F76-       | 	DB	0xA,0xD,"cmdQ overflow!",0xA,0xD,0
  3447 | 0000194A | 6572666C6F77210A0D-       | ...
  3448 | 00001953 | 00                        | ...
  3449 |          |                           | L_lab8app_40:
  3450 | 00001954 | 0A0D44656661756C74-       | 	DB	0xA,0xD,"Default hit (corner piece)",0xA,0xD,0
  3451 | 0000195D | 206869742028636F72-       | ...
  3452 | 00001966 | 6E6572207069656365-       | ...
  3453 | 0000196F | 290A0D00                  | ...
  3454 |          |                           | L_lab8app_39:
  3455 | 00001973 | 0A0D44656661756C74-       | 	DB	0xA,0xD,"Default hit (straight piece)",0xA,0xD,0
  3456 | 0000197C | 206869742028737472-       | ...
  3457 | 00001985 | 616967687420706965-       | ...
  3458 | 0000198E | 6365290A0D00              | ...
  3459 |          |                           | 	ALIGN	2
  3460 |          |                           | SMpieceTask:
  3461 |          |                           | 	; >>>>> Line:	135
  3462 |          |                           | 	; >>>>> void SMpieceTask(void) { 
  3463 | 00001994 | E92603                    | 	jmp	L_lab8app_42
  3464 |          |                           | L_lab8app_43:
  3465 |          |                           | 	; >>>>> Line:	143
  3466 |          |                           | 	; >>>>> SeedSimptris(10947); 
  3467 | 00001997 | B8C32A                    | 	mov	ax, 10947
  3468 | 0000199A | 31D2                      | 	xor	dx, dx
  3469 | 0000199C | 52                        | 	push	dx
  3470 | 0000199D | 50                        | 	push	ax
  3471 | 0000199E | E80BEF                    | 	call	SeedSimptris
  3472 | 000019A1 | 83C404                    | 	add	sp, 4
  3473 |          |                           | 	; >>>>> Line:	144
  3474 |          |                           | 	; >>>>> StartSimptris(); 
  3475 | 000019A4 | E81AEF                    | 	call	StartSimptris
  3476 |          |                           | 	; >>>>> Line:	145
  3477 |          |                           | 	; >>>>> while(1) { 
  3478 | 000019A7 | E90C03                    | 	jmp	L_lab8app_45
  3479 |          |                           | L_lab8app_44:
  3480 |          |                           | 	; >>>>> Line:	146
  3481 |          |                           | 	; >>>>> ptemp = (struct SMpiece*) YKQPend(pieceQPtr); 
  3482 | 000019AA | FF36[7A20]                | 	push	word [pieceQPtr]
  3483 | 000019AE | E8EFF2                    | 	call	YKQPend
  3484 | 000019B1 | 83C402                    | 	add	sp, 2
  3485 | 000019B4 | 8946FE                    | 	mov	word [bp-2], ax
  3486 |          |                           | 	; >>>>> Line:	149
  3487 |          |                           | 	; >>>>> if (ptemp->type == 1) { 
  3488 | 000019B7 | 8B76FE                    | 	mov	si, word [bp-2]
  3489 | 000019BA | 83C602                    | 	add	si, 2
  3490 | 000019BD | 833C01                    | 	cmp	word [si], 1
  3491 | 000019C0 | 7403E90501                | 	jne	L_lab8app_47
  3492 |          |                           | 	; >>>>> Line:	150
  3493 |          |                           | 	; >>>>> if (lowerRow == 0) { 
  3494 | 000019C5 | A1[862C]                  | 	mov	ax, word [lowerRow]
  3495 | 000019C8 | 85C0                      | 	test	ax, ax
  3496 | 000019CA | 7531                      | 	jne	L_lab8app_48
  3497 |          |                           | 	; >>>>> Line:	151
  3498 |          |                           | 	; >>>>> tCmdNum = getCmds(ptemp, 0); 
  3499 | 000019CC | 31C0                      | 	xor	ax, ax
  3500 | 000019CE | 50                        | 	push	ax
  3501 | 000019CF | FF76FE                    | 	push	word [bp-2]
  3502 | 000019D2 | E811FE                    | 	call	getCmds
  3503 | 000019D5 | 83C404                    | 	add	sp, 4
  3504 | 000019D8 | 8946F6                    | 	mov	word [bp-10], ax
  3505 |          |                           | 	; >>>>> Line:	152
  3506 |          |                           | 	; >>>>> if (getCmds(ptemp, 1) < tCmdN 
  3507 | 000019DB | B80100                    | 	mov	ax, 1
  3508 | 000019DE | 50                        | 	push	ax
  3509 | 000019DF | FF76FE                    | 	push	word [bp-2]
  3510 | 000019E2 | E801FE                    | 	call	getCmds
  3511 | 000019E5 | 83C404                    | 	add	sp, 4
  3512 | 000019E8 | 8B56F6                    | 	mov	dx, word [bp-10]
  3513 | 000019EB | 39C2                      | 	cmp	dx, ax
  3514 | 000019ED | 7E07                      | 	jle	L_lab8app_49
  3515 |          |                           | 	; >>>>> Line:	153
  3516 |          |                           | 	; >>>>> destSlot = 1; 
  3517 | 000019EF | C746FC0100                | 	mov	word [bp-4], 1
  3518 | 000019F4 | EB05                      | 	jmp	L_lab8app_50
  3519 |          |                           | L_lab8app_49:
  3520 |          |                           | 	; >>>>> Line:	156
  3521 |          |                           | 	; >>>>> destSlot = 0; 
  3522 | 000019F6 | C746FC0000                | 	mov	word [bp-4], 0
  3523 |          |                           | L_lab8app_50:
  3524 | 000019FB | EB4C                      | 	jmp	L_lab8app_51
  3525 |          |                           | L_lab8app_48:
  3526 |          |                           | 	; >>>>> Line:	159
  3527 |          |                           | 	; >>>>> else if ((lowerRow & 0x38) == 0) {destSlot = 0;} 
  3528 | 000019FD | A1[862C]                  | 	mov	ax, word [lowerRow]
  3529 | 00001A00 | 83E038                    | 	and	ax, 56
  3530 | 00001A03 | 7507                      | 	jne	L_lab8app_52
  3531 |          |                           | 	; >>>>> Line:	159
  3532 |          |                           | 	; >>>>> else if ((lowerRow & 0x38) == 0) {destSlot = 0;} 
  3533 | 00001A05 | C746FC0000                | 	mov	word [bp-4], 0
  3534 | 00001A0A | EB3D                      | 	jmp	L_lab8app_53
  3535 |          |                           | L_lab8app_52:
  3536 |          |                           | 	; >>>>> Line:	160
  3537 |          |                           | 	; >>>>> else if ((lowerRow & 0x07) == 0) {destSlot = 1;} 
  3538 | 00001A0C | A1[862C]                  | 	mov	ax, word [lowerRow]
  3539 | 00001A0F | 83E007                    | 	and	ax, 7
  3540 | 00001A12 | 7507                      | 	jne	L_lab8app_54
  3541 |          |                           | 	; >>>>> Line:	160
  3542 |          |                           | 	; >>>>> else if ((lowerRow & 0x07) == 0) {destSlot = 1;} 
  3543 | 00001A14 | C746FC0100                | 	mov	word [bp-4], 1
  3544 | 00001A19 | EB2E                      | 	jmp	L_lab8app_55
  3545 |          |                           | L_lab8app_54:
  3546 |          |                           | 	; >>>>> Line:	161
  3547 |          |                           | 	; >>>>> else if ((lowerRow & 0x38) == 0x38) {destSlot = 0;} 
  3548 | 00001A1B | A1[862C]                  | 	mov	ax, word [lowerRow]
  3549 | 00001A1E | 83E038                    | 	and	ax, 56
  3550 | 00001A21 | 83F838                    | 	cmp	ax, 56
  3551 | 00001A24 | 7507                      | 	jne	L_lab8app_56
  3552 |          |                           | 	; >>>>> Line:	161
  3553 |          |                           | 	; >>>>> else if ((lowerRow & 0x38) == 0x38) {destSlot = 0;} 
  3554 | 00001A26 | C746FC0000                | 	mov	word [bp-4], 0
  3555 | 00001A2B | EB1C                      | 	jmp	L_lab8app_57
  3556 |          |                           | L_lab8app_56:
  3557 |          |                           | 	; >>>>> Line:	162
  3558 |          |                           | 	; >>>>> else if ((lowerRow & 0x07) == 0x07) {destSlot = 1;} 
  3559 | 00001A2D | A1[862C]                  | 	mov	ax, word [lowerRow]
  3560 | 00001A30 | 83E007                    | 	and	ax, 7
  3561 | 00001A33 | 83F807                    | 	cmp	ax, 7
  3562 | 00001A36 | 7507                      | 	jne	L_lab8app_58
  3563 |          |                           | 	; >>>>> Line:	162
  3564 |          |                           | 	; >>>>> else if ((lowerRow & 0x07) == 0x07) {destSlot = 1;} 
  3565 | 00001A38 | C746FC0100                | 	mov	word [bp-4], 1
  3566 | 00001A3D | EB0A                      | 	jmp	L_lab8app_59
  3567 |          |                           | L_lab8app_58:
  3568 |          |                           | 	; >>>>> Line:	164
  3569 |          |                           | 	; >>>>> printString("\n\rDefault hit (straight piece)\n\r"); 
  3570 | 00001A3F | B8[7319]                  | 	mov	ax, L_lab8app_39
  3571 | 00001A42 | 50                        | 	push	ax
  3572 | 00001A43 | E8E2E9                    | 	call	printString
  3573 | 00001A46 | 83C402                    | 	add	sp, 2
  3574 |          |                           | L_lab8app_59:
  3575 |          |                           | L_lab8app_57:
  3576 |          |                           | L_lab8app_55:
  3577 |          |                           | L_lab8app_53:
  3578 |          |                           | L_lab8app_51:
  3579 |          |                           | 	; >>>>> Line:	167
  3580 |          |                           | 	; >>>>> tCmdNum = getCmds(ptemp, destSlot); 
  3581 | 00001A49 | FF76FC                    | 	push	word [bp-4]
  3582 | 00001A4C | FF76FE                    | 	push	word [bp-2]
  3583 | 00001A4F | E894FD                    | 	call	getCmds
  3584 | 00001A52 | 83C404                    | 	add	sp, 4
  3585 | 00001A55 | 8946F6                    | 	mov	word [bp-10], ax
  3586 |          |                           | 	; >>>>> Line:	170
  3587 |          |                           | 	; >>>>> if ((upperRow | slotLrow[destSlot]) == upperRow) { 
  3588 | 00001A58 | 8B46FC                    | 	mov	ax, word [bp-4]
  3589 | 00001A5B | D1E0                      | 	shl	ax, 1
  3590 | 00001A5D | 89C6                      | 	mov	si, ax
  3591 | 00001A5F | 81C6[CC16]                | 	add	si, slotLrow
  3592 | 00001A63 | 8B04                      | 	mov	ax, word [si]
  3593 | 00001A65 | 0B06[842C]                | 	or	ax, word [upperRow]
  3594 | 00001A69 | 8B16[842C]                | 	mov	dx, word [upperRow]
  3595 | 00001A6D | 39C2                      | 	cmp	dx, ax
  3596 | 00001A6F | 7513                      | 	jne	L_lab8app_60
  3597 |          |                           | 	; >>>>> Line:	171
  3598 |          |                           | 	; >>>>> if (destSlot == 0) { leftBlock++; } 
  3599 | 00001A71 | 8B46FC                    | 	mov	ax, word [bp-4]
  3600 | 00001A74 | 85C0                      | 	test	ax, ax
  3601 | 00001A76 | 7506                      | 	jne	L_lab8app_61
  3602 |          |                           | 	; >>>>> Line:	171
  3603 |          |                           | 	; >>>>> if (destSlot == 0) { leftBlock++; } 
  3604 | 00001A78 | FF06[822C]                | 	inc	word [leftBlock]
  3605 | 00001A7C | EB04                      | 	jmp	L_lab8app_62
  3606 |          |                           | L_lab8app_61:
  3607 |          |                           | 	; >>>>> Line:	172
  3608 |          |                           | 	; >>>>> mds(ptemp, 4); 
  3609 | 00001A7E | FF06[802C]                | 	inc	word [rightBlock]
  3610 |          |                           | L_lab8app_62:
  3611 | 00001A82 | EB43                      | 	jmp	L_lab8app_63
  3612 |          |                           | L_lab8app_60:
  3613 |          |                           | 	; >>>>> Line:	174
  3614 |          |                           | 	; >>>>> else if ((lowerRow | slotLrow[destSlot]) == lowerRow) { 
  3615 | 00001A84 | 8B46FC                    | 	mov	ax, word [bp-4]
  3616 | 00001A87 | D1E0                      | 	shl	ax, 1
  3617 | 00001A89 | 89C6                      | 	mov	si, ax
  3618 | 00001A8B | 81C6[CC16]                | 	add	si, slotLrow
  3619 | 00001A8F | 8B04                      | 	mov	ax, word [si]
  3620 | 00001A91 | 0B06[862C]                | 	or	ax, word [lowerRow]
  3621 | 00001A95 | 8B16[862C]                | 	mov	dx, word [lowerRow]
  3622 | 00001A99 | 39C2                      | 	cmp	dx, ax
  3623 | 00001A9B | 7516                      | 	jne	L_lab8app_64
  3624 |          |                           | 	; >>>>> Line:	175
  3625 |          |                           | 	; >>>>> upperRow = upperRow | slotLrow[destSlot]; 
  3626 | 00001A9D | 8B46FC                    | 	mov	ax, word [bp-4]
  3627 | 00001AA0 | D1E0                      | 	shl	ax, 1
  3628 | 00001AA2 | 89C6                      | 	mov	si, ax
  3629 | 00001AA4 | 81C6[CC16]                | 	add	si, slotLrow
  3630 | 00001AA8 | 8B04                      | 	mov	ax, word [si]
  3631 | 00001AAA | 0B06[842C]                | 	or	ax, word [upperRow]
  3632 | 00001AAE | A3[842C]                  | 	mov	word [upperRow], ax
  3633 | 00001AB1 | EB14                      | 	jmp	L_lab8app_65
  3634 |          |                           | L_lab8app_64:
  3635 |          |                           | 	; >>>>> Line:	178
  3636 |          |                           | 	; >>>>> lowerRow = lowerRow | slotLrow[destSlot]; 
  3637 | 00001AB3 | 8B46FC                    | 	mov	ax, word [bp-4]
  3638 | 00001AB6 | D1E0                      | 	shl	ax, 1
  3639 | 00001AB8 | 89C6                      | 	mov	si, ax
  3640 | 00001ABA | 81C6[CC16]                | 	add	si, slotLrow
  3641 | 00001ABE | 8B04                      | 	mov	ax, word [si]
  3642 | 00001AC0 | 0B06[862C]                | 	or	ax, word [lowerRow]
  3643 | 00001AC4 | A3[862C]                  | 	mov	word [lowerRow], ax
  3644 |          |                           | L_lab8app_65:
  3645 |          |                           | L_lab8app_63:
  3646 | 00001AC7 | E91301                    | 	jmp	L_lab8app_66
  3647 |          |                           | L_lab8app_47:
  3648 |          |                           | 	; >>>>> Line:	184
  3649 |          |                           | 	; >>>>> if (lowerRow == 0) { 
  3650 | 00001ACA | A1[862C]                  | 	mov	ax, word [lowerRow]
  3651 | 00001ACD | 85C0                      | 	test	ax, ax
  3652 | 00001ACF | 7547                      | 	jne	L_lab8app_67
  3653 |          |                           | 	; >>>>> Line:	185
  3654 |          |                           | 	; >>>>> minCmdNum = 20; 
  3655 | 00001AD1 | C746F81400                | 	mov	word [bp-8], 20
  3656 |          |                           | 	; >>>>> Line:	186
  3657 |          |                           | 	; >>>>> k = 2; 
  3658 | 00001AD6 | C746F20200                | 	mov	word [bp-14], 2
  3659 |          |                           | 	; >>>>> Line:	187
  3660 |          |                           | 	; >>>>> while (k < 5){ 
  3661 | 00001ADB | EB2C                      | 	jmp	L_lab8app_69
  3662 |          |                           | L_lab8app_68:
  3663 |          |                           | 	; >>>>> Line:	188
  3664 |          |                           | 	; >>>>> tCmdNum = getCmds(ptemp, k); 
  3665 | 00001ADD | FF76F2                    | 	push	word [bp-14]
  3666 | 00001AE0 | FF76FE                    | 	push	word [bp-2]
  3667 | 00001AE3 | E800FD                    | 	call	getCmds
  3668 | 00001AE6 | 83C404                    | 	add	sp, 4
  3669 | 00001AE9 | 8946F6                    | 	mov	word [bp-10], ax
  3670 |          |                           | 	; >>>>> Line:	189
  3671 |          |                           | 	; >>>>> if (tCmdNum < minCmdNum){ 
  3672 | 00001AEC | 8B46F8                    | 	mov	ax, word [bp-8]
  3673 | 00001AEF | 3B46F6                    | 	cmp	ax, word [bp-10]
  3674 | 00001AF2 | 7E0C                      | 	jle	L_lab8app_71
  3675 |          |                           | 	; >>>>> Line:	190
  3676 |          |                           | 	; >>>>> minCmdNum = tCmdNum; 
  3677 | 00001AF4 | 8B46F6                    | 	mov	ax, word [bp-10]
  3678 | 00001AF7 | 8946F8                    | 	mov	word [bp-8], ax
  3679 |          |                           | 	; >>>>> Line:	191
  3680 |          |                           | 	; >>>>> minSlot = k; 
  3681 | 00001AFA | 8B46F2                    | 	mov	ax, word [bp-14]
  3682 | 00001AFD | 8946FA                    | 	mov	word [bp-6], ax
  3683 |          |                           | L_lab8app_71:
  3684 |          |                           | 	; >>>>> Line:	193
  3685 |          |                           | 	; >>>>> k = k+2; 
  3686 | 00001B00 | 8B46F2                    | 	mov	ax, word [bp-14]
  3687 | 00001B03 | 83C002                    | 	add	ax, 2
  3688 | 00001B06 | 8946F2                    | 	mov	word [bp-14], ax
  3689 |          |                           | L_lab8app_69:
  3690 | 00001B09 | 837EF205                  | 	cmp	word [bp-14], 5
  3691 | 00001B0D | 7CCE                      | 	jl	L_lab8app_68
  3692 |          |                           | L_lab8app_70:
  3693 |          |                           | 	; >>>>> Line:	195
  3694 |          |                           | 	; >>>>> destSlot = minSlot; 
  3695 | 00001B0F | 8B46FA                    | 	mov	ax, word [bp-6]
  3696 | 00001B12 | 8946FC                    | 	mov	word [bp-4], ax
  3697 | 00001B15 | E98E00                    | 	jmp	L_lab8app_72
  3698 |          |                           | L_lab8app_67:
  3699 |          |                           | 	; >>>>> Line:	197
  3700 |          |                           | 	; >>>>> else if (lowerRow == 0x38) { 
  3701 | 00001B18 | 833E[862C]38              | 	cmp	word [lowerRow], 56
  3702 | 00001B1D | 7517                      | 	jne	L_lab8app_73
  3703 |          |                           | 	; >>>>> Line:	198
  3704 |          |                           | 	; >>>>> tCmdNum = getCmds(ptemp, 4); 
  3705 | 00001B1F | B80400                    | 	mov	ax, 4
  3706 | 00001B22 | 50                        | 	push	ax
  3707 | 00001B23 | FF76FE                    | 	push	word [bp-2]
  3708 | 00001B26 | E8BDFC                    | 	call	getCmds
  3709 | 00001B29 | 83C404                    | 	add	sp, 4
  3710 | 00001B2C | 8946F6                    | 	mov	word [bp-10], ax
  3711 |          |                           | 	; >>>>> Line:	199
  3712 |          |                           | 	; >>>>> Sl 
  3713 | 00001B2F | C746FC0400                | 	mov	word [bp-4], 4
  3714 | 00001B34 | EB70                      | 	jmp	L_lab8app_74
  3715 |          |                           | L_lab8app_73:
  3716 |          |                           | 	; >>>>> Line:	201
  3717 |          |                           | 	; >>>>> else if (lowerRow == 0x07) { 
  3718 | 00001B36 | 833E[862C]07              | 	cmp	word [lowerRow], 7
  3719 | 00001B3B | 7517                      | 	jne	L_lab8app_75
  3720 |          |                           | 	; >>>>> Line:	202
  3721 |          |                           | 	; >>>>> tCmdNum = getCmds(ptemp, 2); 
  3722 | 00001B3D | B80200                    | 	mov	ax, 2
  3723 | 00001B40 | 50                        | 	push	ax
  3724 | 00001B41 | FF76FE                    | 	push	word [bp-2]
  3725 | 00001B44 | E89FFC                    | 	call	getCmds
  3726 | 00001B47 | 83C404                    | 	add	sp, 4
  3727 | 00001B4A | 8946F6                    | 	mov	word [bp-10], ax
  3728 |          |                           | 	; >>>>> Line:	203
  3729 |          |                           | 	; >>>>> destSlot = 2; 
  3730 | 00001B4D | C746FC0200                | 	mov	word [bp-4], 2
  3731 | 00001B52 | EB52                      | 	jmp	L_lab8app_76
  3732 |          |                           | L_lab8app_75:
  3733 |          |                           | 	; >>>>> Line:	205
  3734 |          |                           | 	; >>>>> else if ((lowerRow & 0x38) == 0x30) {destSlot = 5;} 
  3735 | 00001B54 | A1[862C]                  | 	mov	ax, word [lowerRow]
  3736 | 00001B57 | 83E038                    | 	and	ax, 56
  3737 | 00001B5A | 83F830                    | 	cmp	ax, 48
  3738 | 00001B5D | 7507                      | 	jne	L_lab8app_77
  3739 |          |                           | 	; >>>>> Line:	205
  3740 |          |                           | 	; >>>>> else if ((lowerRow & 0x38) == 0x30) {destSlot = 5;} 
  3741 | 00001B5F | C746FC0500                | 	mov	word [bp-4], 5
  3742 | 00001B64 | EB40                      | 	jmp	L_lab8app_78
  3743 |          |                           | L_lab8app_77:
  3744 |          |                           | 	; >>>>> Line:	206
  3745 |          |                           | 	; >>>>> else if ((lowerRow & 0x07) == 0x03) {destSlot = 7;} 
  3746 | 00001B66 | A1[862C]                  | 	mov	ax, word [lowerRow]
  3747 | 00001B69 | 83E007                    | 	and	ax, 7
  3748 | 00001B6C | 83F803                    | 	cmp	ax, 3
  3749 | 00001B6F | 7507                      | 	jne	L_lab8app_79
  3750 |          |                           | 	; >>>>> Line:	206
  3751 |          |                           | 	; >>>>> else if ((lowerRow & 0x07) == 0x03) {destSlot = 7;} 
  3752 | 00001B71 | C746FC0700                | 	mov	word [bp-4], 7
  3753 | 00001B76 | EB2E                      | 	jmp	L_lab8app_80
  3754 |          |                           | L_lab8app_79:
  3755 |          |                           | 	; >>>>> Line:	207
  3756 |          |                           | 	; >>>>> else if ((lowerRow & 0x38) == 0x18) {destSlot = 3;} 
  3757 | 00001B78 | A1[862C]                  | 	mov	ax, word [lowerRow]
  3758 | 00001B7B | 83E038                    | 	and	ax, 56
  3759 | 00001B7E | 83F818                    | 	cmp	ax, 24
  3760 | 00001B81 | 7507                      | 	jne	L_lab8app_81
  3761 |          |                           | 	; >>>>> Line:	207
  3762 |          |                           | 	; >>>>> else if ((lowerRow & 0x38) == 0x18) {destSlot = 3;} 
  3763 | 00001B83 | C746FC0300                | 	mov	word [bp-4], 3
  3764 | 00001B88 | EB1C                      | 	jmp	L_lab8app_82
  3765 |          |                           | L_lab8app_81:
  3766 |          |                           | 	; >>>>> Line:	208
  3767 |          |                           | 	; >>>>> else if ((lowerRow & 0x07) == 0x06) {destSlot = 9;} 
  3768 | 00001B8A | A1[862C]                  | 	mov	ax, word [lowerRow]
  3769 | 00001B8D | 83E007                    | 	and	ax, 7
  3770 | 00001B90 | 83F806                    | 	cmp	ax, 6
  3771 | 00001B93 | 7507                      | 	jne	L_lab8app_83
  3772 |          |                           | 	; >>>>> Line:	208
  3773 |          |                           | 	; >>>>> else if ((lowerRow & 0x07) == 0x06) {destSlot = 9;} 
  3774 | 00001B95 | C746FC0900                | 	mov	word [bp-4], 9
  3775 | 00001B9A | EB0A                      | 	jmp	L_lab8app_84
  3776 |          |                           | L_lab8app_83:
  3777 |          |                           | 	; >>>>> Line:	209
  3778 |          |                           | 	; >>>>> else { printString("\n\rDefault hit (corner piece)\n\r");} 
  3779 | 00001B9C | B8[5419]                  | 	mov	ax, L_lab8app_40
  3780 | 00001B9F | 50                        | 	push	ax
  3781 | 00001BA0 | E885E8                    | 	call	printString
  3782 | 00001BA3 | 83C402                    | 	add	sp, 2
  3783 |          |                           | L_lab8app_84:
  3784 |          |                           | L_lab8app_82:
  3785 |          |                           | L_lab8app_80:
  3786 |          |                           | L_lab8app_78:
  3787 |          |                           | L_lab8app_76:
  3788 |          |                           | L_lab8app_74:
  3789 |          |                           | L_lab8app_72:
  3790 |          |                           | 	; >>>>> Line:	211
  3791 |          |                           | 	; >>>>> tCmdNum = getCmds(ptemp, destSlot); 
  3792 | 00001BA6 | FF76FC                    | 	push	word [bp-4]
  3793 | 00001BA9 | FF76FE                    | 	push	word [bp-2]
  3794 | 00001BAC | E837FC                    | 	call	getCmds
  3795 | 00001BAF | 83C404                    | 	add	sp, 4
  3796 | 00001BB2 | 8946F6                    | 	mov	word [bp-10], ax
  3797 |          |                           | 	; >>>>> Line:	213
  3798 |          |                           | 	; >>>>> lowerRow = lowerRow | slotLrow[destSlot]; 
  3799 | 00001BB5 | 8B46FC                    | 	mov	ax, word [bp-4]
  3800 | 00001BB8 | D1E0                      | 	shl	ax, 1
  3801 | 00001BBA | 89C6                      | 	mov	si, ax
  3802 | 00001BBC | 81C6[CC16]                | 	add	si, slotLrow
  3803 | 00001BC0 | 8B04                      | 	mov	ax, word [si]
  3804 | 00001BC2 | 0B06[862C]                | 	or	ax, word [lowerRow]
  3805 | 00001BC6 | A3[862C]                  | 	mov	word [lowerRow], ax
  3806 |          |                           | 	; >>>>> Line:	214
  3807 |          |                           | 	; >>>>> upperRow = upperRow | slotUrow[destSl 
  3808 | 00001BC9 | 8B46FC                    | 	mov	ax, word [bp-4]
  3809 | 00001BCC | D1E0                      | 	shl	ax, 1
  3810 | 00001BCE | 89C6                      | 	mov	si, ax
  3811 | 00001BD0 | 81C6[E016]                | 	add	si, slotUrow
  3812 | 00001BD4 | 8B04                      | 	mov	ax, word [si]
  3813 | 00001BD6 | 0B06[842C]                | 	or	ax, word [upperRow]
  3814 | 00001BDA | A3[842C]                  | 	mov	word [upperRow], ax
  3815 |          |                           | L_lab8app_66:
  3816 |          |                           | 	; >>>>> Line:	217
  3817 |          |                           | 	; >>>>> for (k = 0; k < 2; k ++) { 
  3818 | 00001BDD | C746F20000                | 	mov	word [bp-14], 0
  3819 | 00001BE2 | EB3A                      | 	jmp	L_lab8app_86
  3820 |          |                           | L_lab8app_85:
  3821 |          |                           | 	; >>>>> Line:	218
  3822 |          |                           | 	; >>>>> if (lowerRow == 0x3F) { 
  3823 | 00001BE4 | 833E[862C]3F              | 	cmp	word [lowerRow], 63
  3824 | 00001BE9 | 7530                      | 	jne	L_lab8app_89
  3825 |          |                           | 	; >>>>> Line:	219
  3826 |          |                           | 	; >>>>> lowerRow = upperRow; 
  3827 | 00001BEB | A1[842C]                  | 	mov	ax, word [upperRow]
  3828 | 00001BEE | A3[862C]                  | 	mov	word [lowerRow], ax
  3829 |          |                           | 	; >>>>> Line:	220
  3830 |          |                           | 	; >>>>> upperRow = 0; 
  3831 | 00001BF1 | C706[842C]0000            | 	mov	word [upperRow], 0
  3832 |          |                           | 	; >>>>> Line:	221
  3833 |          |                           | 	; >>>>> if (rightBlock > 0) { 
  3834 | 00001BF7 | A1[802C]                  | 	mov	ax, word [rightBlock]
  3835 | 00001BFA | 85C0                      | 	test	ax, ax
  3836 | 00001BFC | 740C                      | 	je	L_lab8app_90
  3837 |          |                           | 	; >>>>> Line:	222
  3838 |          |                           | 	; >>>>> rightBlock--; 
  3839 | 00001BFE | FF0E[802C]                | 	dec	word [rightBlock]
  3840 |          |                           | 	; >>>>> Line:	223
  3841 |          |                           | 	; >>>>> upperRow = 0x07; 
  3842 | 00001C02 | C706[842C]0700            | 	mov	word [upperRow], 7
  3843 | 00001C08 | EB11                      | 	jmp	L_lab8app_91
  3844 |          |                           | L_lab8app_90:
  3845 |          |                           | 	; >>>>> Line:	225
  3846 |          |                           | 	; >>>>> else if (leftBlock > 0) { 
  3847 | 00001C0A | A1[822C]                  | 	mov	ax, word [leftBlock]
  3848 | 00001C0D | 85C0                      | 	test	ax, ax
  3849 | 00001C0F | 740A                      | 	je	L_lab8app_92
  3850 |          |                           | 	; >>>>> Line:	226
  3851 |          |                           | 	; >>>>> leftBlock--; 
  3852 | 00001C11 | FF0E[822C]                | 	dec	word [leftBlock]
  3853 |          |                           | 	; >>>>> Line:	227
  3854 |          |                           | 	; >>>>> upperRow = 0x38; 
  3855 | 00001C15 | C706[842C]3800            | 	mov	word [upperRow], 56
  3856 |          |                           | L_lab8app_92:
  3857 |          |                           | L_lab8app_91:
  3858 |          |                           | L_lab8app_89:
  3859 |          |                           | L_lab8app_88:
  3860 | 00001C1B | FF46F2                    | 	inc	word [bp-14]
  3861 |          |                           | L_lab8app_86:
  3862 | 00001C1E | 837EF202                  | 	cmp	word [bp-14], 2
  3863 | 00001C22 | 7CC0                      | 	jl	L_lab8app_85
  3864 |          |                           | L_lab8app_87:
  3865 |          |                           | 	; >>>>> Line:	231
  3866 |          |                           | 	; >>>>> YKEnterMutex(); 
  3867 | 00001C24 | E863ED                    | 	call	YKEnterMutex
  3868 |          |                           | 	; >>>>> Line:	250
  3869 |          |                           | 	; >>>>> cmdArray[cmdNext].pieceID = ptemp->pieceID; 
  3870 | 00001C27 | 8B76FE                    | 	mov	si, word [bp-2]
  3871 | 00001C2A | A1[8A2C]                  | 	mov	ax, word [cmdNext]
  3872 | 00001C2D | B90300                    | 	mov	cx, 3
  3873 | 00001C30 | D3E0                      | 	shl	ax, cl
  3874 | 00001C32 | 89C7                      | 	mov	di, ax
  3875 | 00001C34 | 81C7[0220]                | 	add	di, cmdArray
  3876 | 00001C38 | 8B04                      | 	mov	ax, word [si]
  3877 | 00001C3A | 8905                      | 	mov	word [di], ax
  3878 |          |                           | 	; >>>>> Line:	251
  3879 |          |                           | 	; >>>>> cmdArray[cmdNext].slide1 = tmpCmd.slide1; 
  3880 | 00001C3C | A1[8A2C]                  | 	mov	ax, word [cmdNext]
  3881 | 00001C3F | B90300                    | 	mov	cx, 3
  3882 | 00001C42 | D3E0                      | 	shl	ax, cl
  3883 | 00001C44 | 05[0220]                  | 	add	ax, cmdArray
  3884 | 00001C47 | 89C6                      | 	mov	si, ax
  3885 | 00001C49 | 83C602                    | 	add	si, 2
  3886 | 00001C4C | A1[902C]                  | 	mov	ax, word [(2+tmpCmd)]
  3887 | 00001C4F | 8904                      | 	mov	word [si], ax
  3888 |          |                           | 	; >>>>> Line:	252
  3889 |          |                           | 	; >>>>> cmdArray[cmdNext].rotate = tmpCmd.rotate; 
  3890 | 00001C51 | A1[8A2C]                  | 	mov	ax, word [cmdNext]
  3891 | 00001C54 | B90300                    | 	mov	cx, 3
  3892 | 00001C57 | D3E0                      | 	shl	ax, cl
  3893 | 00001C59 | 05[0220]                  | 	add	ax, cmdArray
  3894 | 00001C5C | 89C6                      | 	mov	si, ax
  3895 | 00001C5E | 83C604                    | 	add	si, 4
  3896 | 00001C61 | A1[922C]                  | 	mov	ax, word [(4+tmpCmd)]
  3897 | 00001C64 | 8904                      | 	mov	word [si], ax
  3898 |          |                           | 	; >>>>> Line:	253
  3899 |          |                           | 	; >>>>> cmdArray[cmdNext].slide2 = tmpCmd.slide2; 
  3900 | 00001C66 | A1[8A2C]                  | 	mov	ax, word [cmdNext]
  3901 | 00001C69 | B90300                    | 	mov	cx, 3
  3902 | 00001C6C | D3E0                      | 	shl	ax, cl
  3903 | 00001C6E | 05[0220]                  | 	add	ax, cmdArray
  3904 | 00001C71 | 89C6                      | 	mov	si, ax
  3905 | 00001C73 | 83C606                    | 	add	si, 6
  3906 | 00001C76 | A1[942C]                  | 	mov	ax, word [(6+tmpCmd)]
  3907 | 00001C79 | 8904                      | 	mov	word [si], ax
  3908 |          |                           | 	; >>>>> Line:	254
  3909 |          |                           | 	; >>>>> if (YKQPost(cmdQPtr, (void *) 
  3910 | 00001C7B | A1[8A2C]                  | 	mov	ax, word [cmdNext]
  3911 | 00001C7E | B90300                    | 	mov	cx, 3
  3912 | 00001C81 | D3E0                      | 	shl	ax, cl
  3913 | 00001C83 | 05[0220]                  | 	add	ax, cmdArray
  3914 | 00001C86 | 50                        | 	push	ax
  3915 | 00001C87 | FF36[7C20]                | 	push	word [cmdQPtr]
  3916 | 00001C8B | E8B6F0                    | 	call	YKQPost
  3917 | 00001C8E | 83C404                    | 	add	sp, 4
  3918 | 00001C91 | 85C0                      | 	test	ax, ax
  3919 | 00001C93 | 750C                      | 	jne	L_lab8app_93
  3920 |          |                           | 	; >>>>> Line:	255
  3921 |          |                           | 	; >>>>> printString("\n\rcmdQ overflow!\n\r"); 
  3922 | 00001C95 | B8[4119]                  | 	mov	ax, L_lab8app_41
  3923 | 00001C98 | 50                        | 	push	ax
  3924 | 00001C99 | E88CE7                    | 	call	printString
  3925 | 00001C9C | 83C402                    | 	add	sp, 2
  3926 | 00001C9F | EB12                      | 	jmp	L_lab8app_94
  3927 |          |                           | L_lab8app_93:
  3928 |          |                           | 	; >>>>> Line:	256
  3929 |          |                           | 	; >>>>> else if (++cmdNext >= 10) 
  3930 | 00001CA1 | A1[8A2C]                  | 	mov	ax, word [cmdNext]
  3931 | 00001CA4 | 40                        | 	inc	ax
  3932 | 00001CA5 | A3[8A2C]                  | 	mov	word [cmdNext], ax
  3933 | 00001CA8 | 83F80A                    | 	cmp	ax, 10
  3934 | 00001CAB | 7206                      | 	jb	L_lab8app_95
  3935 |          |                           | 	; >>>>> Line:	257
  3936 |          |                           | 	; >>>>> cmdNext = 0; 
  3937 | 00001CAD | C706[8A2C]0000            | 	mov	word [cmdNext], 0
  3938 |          |                           | L_lab8app_95:
  3939 |          |                           | L_lab8app_94:
  3940 |          |                           | 	; >>>>> Line:	258
  3941 |          |                           | 	; >>>>> YKExitMutex(); 
  3942 | 00001CB3 | E8D6EC                    | 	call	YKExitMutex
  3943 |          |                           | L_lab8app_45:
  3944 | 00001CB6 | E9F1FC                    | 	jmp	L_lab8app_44
  3945 |          |                           | L_lab8app_46:
  3946 | 00001CB9 | 89EC                      | 	mov	sp, bp
  3947 | 00001CBB | 5D                        | 	pop	bp
  3948 | 00001CBC | C3                        | 	ret
  3949 |          |                           | L_lab8app_42:
  3950 | 00001CBD | 55                        | 	push	bp
  3951 | 00001CBE | 89E5                      | 	mov	bp, sp
  3952 | 00001CC0 | 83EC0E                    | 	sub	sp, 14
  3953 | 00001CC3 | E9D1FC                    | 	jmp	L_lab8app_43
  3954 |          |                           | 	ALIGN	2
  3955 |          |                           | SMcmdTask:
  3956 |          |                           | 	; >>>>> Line:	264
  3957 |          |                           | 	; >>>>> void SMcmdTask(void) { 
  3958 | 00001CC6 | E93101                    | 	jmp	L_lab8app_97
  3959 |          |                           | L_lab8app_98:
  3960 |          |                           | 	; >>>>> Line:	270
  3961 |          |                           | 	; >>>>> while(1) { 
  3962 | 00001CC9 | E92701                    | 	jmp	L_lab8app_100
  3963 |          |                           | L_lab8app_99:
  3964 |          |                           | 	; >>>>> Line:	271
  3965 |          |                           | 	; >>>>> ctemp = (struct SMcmd*) YKQPend(cmdQPtr); 
  3966 | 00001CCC | FF36[7C20]                | 	push	word [cmdQPtr]
  3967 | 00001CD0 | E8CDEF                    | 	call	YKQPend
  3968 | 00001CD3 | 83C402                    | 	add	sp, 2
  3969 | 00001CD6 | 8946FE                    | 	mov	word [bp-2], ax
  3970 |          |                           | 	; >>>>> Line:	272
  3971 |          |                           | 	; >>>>> if (ctemp->slide1 != 0){ 
  3972 | 00001CD9 | 8B76FE                    | 	mov	si, word [bp-2]
  3973 | 00001CDC | 83C602                    | 	add	si, 2
  3974 | 00001CDF | 8B04                      | 	mov	ax, word [si]
  3975 | 00001CE1 | 85C0                      | 	test	ax, ax
  3976 | 00001CE3 | 7452                      | 	je	L_lab8app_102
  3977 |          |                           | 	; >>>>> Line:	273
  3978 |          |                           | 	; >>>>> slide = ctemp->slide1; 
  3979 | 00001CE5 | 8B76FE                    | 	mov	si, word [bp-2]
  3980 | 00001CE8 | 83C602                    | 	add	si, 2
  3981 | 00001CEB | 8B04                      | 	mov	ax, word [si]
  3982 | 00001CED | 8946FA                    | 	mov	word [bp-6], ax
  3983 |          |                           | 	; >>>>> Line:	274
  3984 |          |                           | 	; >>>>> if (slide > 0) {direction = 1;} 
  3985 | 00001CF0 | 837EFA00                  | 	cmp	word [bp-6], 0
  3986 | 00001CF4 | 7E07                      | 	jle	L_lab8app_103
  3987 |          |                           | 	; >>>>> Line:	274
  3988 |          |                           | 	; >>>>> if (slide > 0) {direction = 1;} 
  3989 | 00001CF6 | C746F80100                | 	mov	word [bp-8], 1
  3990 | 00001CFB | EB10                      | 	jmp	L_lab8app_104
  3991 |          |                           | L_lab8app_103:
  3992 |          |                           | 	; >>>>> Line:	276
  3993 |          |                           | 	; >>>>> direction = 0; 
  3994 | 00001CFD | C746F80000                | 	mov	word [bp-8], 0
  3995 |          |                           | 	; >>>>> Line:	277
  3996 |          |                           | 	; >>>>> slide = -1*slide; 
  3997 | 00001D02 | 8B46FA                    | 	mov	ax, word [bp-6]
  3998 | 00001D05 | B9FFFF                    | 	mov	cx, -1
  3999 | 00001D08 | F7E9                      | 	imul	cx
  4000 | 00001D0A | 8946FA                    | 	mov	word [bp-6], ax
  4001 |          |                           | L_lab8app_104:
  4002 |          |                           | 	; >>>>> Line:	279
  4003 |          |                           | 	; >>>>> for (k = 0; k < slide; k++){ 
  4004 | 00001D0D | C746FC0000                | 	mov	word [bp-4], 0
  4005 | 00001D12 | EB1B                      | 	jmp	L_lab8app_106
  4006 |          |                           | L_lab8app_105:
  4007 |          |                           | 	; >>>>> Line:	280
  4008 |          |                           | 	; >>>>> YKSemPend(SemPtr); 
  4009 | 00001D14 | FF36[7E20]                | 	push	word [SemPtr]
  4010 | 00001D18 | E8B9F3                    | 	call	YKSemPend
  4011 | 00001D1B | 83C402                    | 	add	sp, 2
  4012 |          |                           | 	; >>>>> Line:	281
  4013 |          |                           | 	; >>>>> SlidePiece(ctemp 
  4014 | 00001D1E | FF76F8                    | 	push	word [bp-8]
  4015 | 00001D21 | 8B76FE                    | 	mov	si, word [bp-2]
  4016 | 00001D24 | FF34                      | 	push	word [si]
  4017 | 00001D26 | E85DEB                    | 	call	SlidePiece
  4018 | 00001D29 | 83C404                    | 	add	sp, 4
  4019 |          |                           | L_lab8app_108:
  4020 | 00001D2C | FF46FC                    | 	inc	word [bp-4]
  4021 |          |                           | L_lab8app_106:
  4022 | 00001D2F | 8B46FA                    | 	mov	ax, word [bp-6]
  4023 | 00001D32 | 3B46FC                    | 	cmp	ax, word [bp-4]
  4024 | 00001D35 | 7FDD                      | 	jg	L_lab8app_105
  4025 |          |                           | L_lab8app_107:
  4026 |          |                           | L_lab8app_102:
  4027 |          |                           | 	; >>>>> Line:	284
  4028 |          |                           | 	; >>>>> if (ctemp->rotate != 0){ 
  4029 | 00001D37 | 8B76FE                    | 	mov	si, word [bp-2]
  4030 | 00001D3A | 83C604                    | 	add	si, 4
  4031 | 00001D3D | 8B04                      | 	mov	ax, word [si]
  4032 | 00001D3F | 85C0                      | 	test	ax, ax
  4033 | 00001D41 | 7452                      | 	je	L_lab8app_109
  4034 |          |                           | 	; >>>>> Line:	285
  4035 |          |                           | 	; >>>>> rotate = ctemp->rotate; 
  4036 | 00001D43 | 8B76FE                    | 	mov	si, word [bp-2]
  4037 | 00001D46 | 83C604                    | 	add	si, 4
  4038 | 00001D49 | 8B04                      | 	mov	ax, word [si]
  4039 | 00001D4B | 8946F6                    | 	mov	word [bp-10], ax
  4040 |          |                           | 	; >>>>> Line:	286
  4041 |          |                           | 	; >>>>> if (rotate > 0) {direction = 1;} 
  4042 | 00001D4E | 837EF600                  | 	cmp	word [bp-10], 0
  4043 | 00001D52 | 7E07                      | 	jle	L_lab8app_110
  4044 |          |                           | 	; >>>>> Line:	286
  4045 |          |                           | 	; >>>>> if (rotate > 0) {direction = 1;} 
  4046 | 00001D54 | C746F80100                | 	mov	word [bp-8], 1
  4047 | 00001D59 | EB10                      | 	jmp	L_lab8app_111
  4048 |          |                           | L_lab8app_110:
  4049 |          |                           | 	; >>>>> Line:	288
  4050 |          |                           | 	; >>>>> direction = 0; 
  4051 | 00001D5B | C746F80000                | 	mov	word [bp-8], 0
  4052 |          |                           | 	; >>>>> Line:	289
  4053 |          |                           | 	; >>>>> rotate = -1*rotate; 
  4054 | 00001D60 | 8B46F6                    | 	mov	ax, word [bp-10]
  4055 | 00001D63 | B9FFFF                    | 	mov	cx, -1
  4056 | 00001D66 | F7E9                      | 	imul	cx
  4057 | 00001D68 | 8946F6                    | 	mov	word [bp-10], ax
  4058 |          |                           | L_lab8app_111:
  4059 |          |                           | 	; >>>>> Line:	291
  4060 |          |                           | 	; >>>>> for (k = 0; k < rotate; k++){ 
  4061 | 00001D6B | C746FC0000                | 	mov	word [bp-4], 0
  4062 | 00001D70 | EB1B                      | 	jmp	L_lab8app_113
  4063 |          |                           | L_lab8app_112:
  4064 |          |                           | 	; >>>>> Line:	292
  4065 |          |                           | 	; >>>>> YKSemPend(SemPtr); 
  4066 | 00001D72 | FF36[7E20]                | 	push	word [SemPtr]
  4067 | 00001D76 | E85BF3                    | 	call	YKSemPend
  4068 | 00001D79 | 83C402                    | 	add	sp, 2
  4069 |          |                           | 	; >>>>> Line:	293
  4070 |          |                           | 	; >>>>> RotatePiece(ctemp->pieceID, direction); 
  4071 | 00001D7C | FF76F8                    | 	push	word [bp-8]
  4072 | 00001D7F | 8B76FE                    | 	mov	si, word [bp-2]
  4073 | 00001D82 | FF34                      | 	push	word [si]
  4074 | 00001D84 | E812EB                    | 	call	RotatePiece
  4075 | 00001D87 | 83C404                    | 	add	sp, 4
  4076 |          |                           | L_lab8app_115:
  4077 | 00001D8A | FF46FC                    | 	inc	word [bp-4]
  4078 |          |                           | L_lab8app_113:
  4079 | 00001D8D | 8B46F6                    | 	mov	ax, word [bp-10]
  4080 | 00001D90 | 3B46FC                    | 	cmp	ax, word [bp-4]
  4081 | 00001D93 | 7FDD                      | 	jg	L_lab8app_112
  4082 |          |                           | L_lab8app_114:
  4083 |          |                           | L_lab8app_109:
  4084 |          |                           | 	; >>>>> Line:	296
  4085 |          |                           | 	; >>>>> if (ctemp->slide2 != 0){ 
  4086 | 00001D95 | 8B76FE                    | 	mov	si, word [bp-2]
  4087 | 00001D98 | 83C606                    | 	add	si, 6
  4088 | 00001D9B | 8B04                      | 	mov	ax, word [si]
  4089 | 00001D9D | 85C0                      | 	test	ax, ax
  4090 | 00001D9F | 7452                      | 	je	L_lab8app_116
  4091 |          |                           | 	; >>>>> Line:	297
  4092 |          |                           | 	; >>>>> slide = ctemp->slide2; 
  4093 | 00001DA1 | 8B76FE                    | 	mov	si, word [bp-2]
  4094 | 00001DA4 | 83C606                    | 	add	si, 6
  4095 | 00001DA7 | 8B04                      | 	mov	ax, word [si]
  4096 | 00001DA9 | 8946FA                    | 	mov	word [bp-6], ax
  4097 |          |                           | 	; >>>>> Line:	298
  4098 |          |                           | 	; >>>>> if (slide > 0) {direction = 1;} 
  4099 | 00001DAC | 837EFA00                  | 	cmp	word [bp-6], 0
  4100 | 00001DB0 | 7E07                      | 	jle	L_lab8app_117
  4101 |          |                           | 	; >>>>> Line:	298
  4102 |          |                           | 	; >>>>> if (slide > 0) {direction = 1;} 
  4103 | 00001DB2 | C746F80100                | 	mov	word [bp-8], 1
  4104 | 00001DB7 | EB10                      | 	jmp	L_lab8app_118
  4105 |          |                           | L_lab8app_117:
  4106 |          |                           | 	; >>>>> Line:	300
  4107 |          |                           | 	; >>>>> direction = 0; 
  4108 | 00001DB9 | C746F80000                | 	mov	word [bp-8], 0
  4109 |          |                           | 	; >>>>> Line:	301
  4110 |          |                           | 	; >>>>> slide = -1*slide; 
  4111 | 00001DBE | 8B46FA                    | 	mov	ax, word [bp-6]
  4112 | 00001DC1 | B9FFFF                    | 	mov	cx, -1
  4113 | 00001DC4 | F7E9                      | 	imul	cx
  4114 | 00001DC6 | 8946FA                    | 	mov	word [bp-6], ax
  4115 |          |                           | L_lab8app_118:
  4116 |          |                           | 	; >>>>> Line:	303
  4117 |          |                           | 	; >>>>> for (k = 0; k < slide; k++){ 
  4118 | 00001DC9 | C746FC0000                | 	mov	word [bp-4], 0
  4119 | 00001DCE | EB1B                      | 	jmp	L_lab8app_120
  4120 |          |                           | L_lab8app_119:
  4121 |          |                           | 	; >>>>> Line:	304
  4122 |          |                           | 	; >>>>> YKSemPend(SemPtr); 
  4123 | 00001DD0 | FF36[7E20]                | 	push	word [SemPtr]
  4124 | 00001DD4 | E8FDF2                    | 	call	YKSemPend
  4125 | 00001DD7 | 83C402                    | 	add	sp, 2
  4126 |          |                           | 	; >>>>> Line:	305
  4127 |          |                           | 	; >>>>> SlidePiece(cte 
  4128 | 00001DDA | FF76F8                    | 	push	word [bp-8]
  4129 | 00001DDD | 8B76FE                    | 	mov	si, word [bp-2]
  4130 | 00001DE0 | FF34                      | 	push	word [si]
  4131 | 00001DE2 | E8A1EA                    | 	call	SlidePiece
  4132 | 00001DE5 | 83C404                    | 	add	sp, 4
  4133 |          |                           | L_lab8app_122:
  4134 | 00001DE8 | FF46FC                    | 	inc	word [bp-4]
  4135 |          |                           | L_lab8app_120:
  4136 | 00001DEB | 8B46FA                    | 	mov	ax, word [bp-6]
  4137 | 00001DEE | 3B46FC                    | 	cmp	ax, word [bp-4]
  4138 | 00001DF1 | 7FDD                      | 	jg	L_lab8app_119
  4139 |          |                           | L_lab8app_121:
  4140 |          |                           | L_lab8app_116:
  4141 |          |                           | L_lab8app_100:
  4142 | 00001DF3 | E9D6FE                    | 	jmp	L_lab8app_99
  4143 |          |                           | L_lab8app_101:
  4144 | 00001DF6 | 89EC                      | 	mov	sp, bp
  4145 | 00001DF8 | 5D                        | 	pop	bp
  4146 | 00001DF9 | C3                        | 	ret
  4147 |          |                           | L_lab8app_97:
  4148 | 00001DFA | 55                        | 	push	bp
  4149 | 00001DFB | 89E5                      | 	mov	bp, sp
  4150 | 00001DFD | 83EC0A                    | 	sub	sp, 10
  4151 | 00001E00 | E9C6FE                    | 	jmp	L_lab8app_98
  4152 |          |                           | L_lab8app_128:
  4153 | 00001E03 | 3E0D0A00                  | 	DB	">",0xD,0xA,0
  4154 |          |                           | L_lab8app_127:
  4155 | 00001E07 | 2C204350553A2000          | 	DB	", CPU: ",0
  4156 |          |                           | L_lab8app_126:
  4157 | 00001E0F | 3C43533A2000              | 	DB	"<CS: ",0
  4158 |          |                           | L_lab8app_125:
  4159 | 00001E15 | 44657465726D696E69-       | 	DB	"Determining CPU capacity",0xD,0xA,0
  4160 | 00001E1E | 6E6720435055206361-       | ...
  4161 | 00001E27 | 7061636974790D0A00        | ...
  4162 |          |                           | L_lab8app_124:
  4163 | 00001E30 | 5374617274696E6720-       | 	DB	"Starting Simtris",0xD,0xA,0
  4164 | 00001E39 | 53696D747269730D0A-       | ...
  4165 | 00001E42 | 00                        | ...
  4166 | 00001E43 | 90                        | 	ALIGN	2
  4167 |          |                           | SMStatTask:
  4168 |          |                           | 	; >>>>> Line:	313
  4169 |          |                           | 	; >>>>> { 
  4170 | 00001E44 | E9DC00                    | 	jmp	L_lab8app_129
  4171 |          |                           | L_lab8app_130:
  4172 |          |                           | 	; >>>>> Line:	317
  4173 |          |                           | 	; >>>>> YKDelayTask(1); 
  4174 | 00001E47 | B80100                    | 	mov	ax, 1
  4175 | 00001E4A | 50                        | 	push	ax
  4176 | 00001E4B | E86AF1                    | 	call	YKDelayTask
  4177 | 00001E4E | 83C402                    | 	add	sp, 2
  4178 |          |                           | 	; >>>>> Line:	318
  4179 |          |                           | 	; >>>>> printString("Starting Simtris\r\n"); 
  4180 | 00001E51 | B8[301E]                  | 	mov	ax, L_lab8app_124
  4181 | 00001E54 | 50                        | 	push	ax
  4182 | 00001E55 | E8D0E5                    | 	call	printString
  4183 | 00001E58 | 83C402                    | 	add	sp, 2
  4184 |          |                           | 	; >>>>> Line:	319
  4185 |          |                           | 	; >>>>> printString("Determining CPU capacity\r\n"); 
  4186 | 00001E5B | B8[151E]                  | 	mov	ax, L_lab8app_125
  4187 | 00001E5E | 50                        | 	push	ax
  4188 | 00001E5F | E8C6E5                    | 	call	printString
  4189 | 00001E62 | 83C402                    | 	add	sp, 2
  4190 |          |                           | 	; >>>>> Line:	320
  4191 |          |                           | 	; >>>>> YKDelayTask(1); 
  4192 | 00001E65 | B80100                    | 	mov	ax, 1
  4193 | 00001E68 | 50                        | 	push	ax
  4194 | 00001E69 | E84CF1                    | 	call	YKDelayTask
  4195 | 00001E6C | 83C402                    | 	add	sp, 2
  4196 |          |                           | 	; >>>>> Line:	321
  4197 |          |                           | 	; >>>>> YKIdleCount = 0; 
  4198 | 00001E6F | C706[6E13]0000            | 	mov	word [YKIdleCount], 0
  4199 |          |                           | 	; >>>>> Line:	322
  4200 |          |                           | 	; >>>>> YKDelayTask(5); 
  4201 | 00001E75 | B80500                    | 	mov	ax, 5
  4202 | 00001E78 | 50                        | 	push	ax
  4203 | 00001E79 | E83CF1                    | 	call	YKDelayTask
  4204 | 00001E7C | 83C402                    | 	add	sp, 2
  4205 |          |                           | 	; >>>>> Line:	323
  4206 |          |                           | 	; >>>>> max = YKIdleCount / 25; 
  4207 | 00001E7F | A1[6E13]                  | 	mov	ax, word [YKIdleCount]
  4208 | 00001E82 | 31D2                      | 	xor	dx, dx
  4209 | 00001E84 | B91900                    | 	mov	cx, 25
  4210 | 00001E87 | F7F1                      | 	div	cx
  4211 | 00001E89 | 8946FE                    | 	mov	word [bp-2], ax
  4212 |          |                           | 	; >>>>> Line:	324
  4213 |          |                           | 	; >>>>> YKIdleCount = 0; 
  4214 | 00001E8C | C706[6E13]0000            | 	mov	word [YKIdleCount], 0
  4215 |          |                           | 	; >>>>> Line:	326
  4216 |          |                           | 	; >>>>> YKNewTask(SMcmdTask, (void *) &SMcmdTaskStk[512], 1); 
  4217 | 00001E92 | B001                      | 	mov	al, 1
  4218 | 00001E94 | 50                        | 	push	ax
  4219 | 00001E95 | B8[8024]                  | 	mov	ax, (SMcmdTaskStk+1024)
  4220 | 00001E98 | 50                        | 	push	ax
  4221 | 00001E99 | B8[C61C]                  | 	mov	ax, SMcmdTask
  4222 | 00001E9C | 50                        | 	push	ax
  4223 | 00001E9D | E8E8EF                    | 	call	YKNewTask
  4224 | 00001EA0 | 83C406                    | 	add	sp, 6
  4225 |          |                           | 	; >>>>> Line:	327
  4226 |          |                           | 	; >>>>> YKNewTask(SMpieceTask, (void *) &SMpieceTaskStk[512], 2); 
  4227 | 00001EA3 | B002                      | 	mov	al, 2
  4228 | 00001EA5 | 50                        | 	push	ax
  4229 | 00001EA6 | B8[8028]                  | 	mov	ax, (SMpieceTaskStk+1024)
  4230 | 00001EA9 | 50                        | 	push	ax
  4231 | 00001EAA | B8[9419]                  | 	mov	ax, SMpieceTask
  4232 | 00001EAD | 50                        | 	push	ax
  4233 | 00001EAE | E8D7EF                    | 	call	YKNewTask
  4234 | 00001EB1 | 83C406                    | 	add	sp, 6
  4235 |          |                           | 	; >>>>> Line:	329
  4236 |          |                           | 	; >>>>> while (1) 
  4237 | 00001EB4 | EB67                      | 	jmp	L_lab8app_132
  4238 |          |                           | L_lab8app_131:
  4239 |          |                           | 	; >>>>> Line:	331
  4240 |          |                           | 	; >>>>> YKDelayTask(20); 
  4241 | 00001EB6 | B81400                    | 	mov	ax, 20
  4242 | 00001EB9 | 50                        | 	push	ax
  4243 | 00001EBA | E8FBF0                    | 	call	YKDelayTask
  4244 | 00001EBD | 83C402                    | 	add	sp, 2
  4245 |          |                           | 	; >>>>> Line:	333
  4246 |          |                           | 	; >>>>> YKEnterMutex(); 
  4247 | 00001EC0 | E8C7EA                    | 	call	YKEnterMutex
  4248 |          |                           | 	; >>>>> Line:	334
  4249 |          |                           | 	; >>>>> switchCount = YKCtxSwCount; 
  4250 | 00001EC3 | A1[6C13]                  | 	mov	ax, word [YKCtxSwCount]
  4251 | 00001EC6 | 8946FC                    | 	mov	word [bp-4], ax
  4252 |          |                           | 	; >>>>> Line:	335
  4253 |          |                           | 	; >>>>> idleCount = YKIdleCount; 
  4254 | 00001EC9 | A1[6E13]                  | 	mov	ax, word [YKIdleCount]
  4255 | 00001ECC | 8946FA                    | 	mov	word [bp-6], ax
  4256 |          |                           | 	; >>>>> Line:	337
  4257 |          |                           | 	; >>>>> printString("<CS: "); 
  4258 | 00001ECF | B8[0F1E]                  | 	mov	ax, L_lab8app_126
  4259 | 00001ED2 | 50                        | 	push	ax
  4260 | 00001ED3 | E852E5                    | 	call	printString
  4261 | 00001ED6 | 83C402                    | 	add	sp, 2
  4262 |          |                           | 	; >>>>> Line:	338
  4263 |          |                           | 	; >>>>> printInt((int)switchCount); 
  4264 | 00001ED9 | FF76FC                    | 	push	word [bp-4]
  4265 | 00001EDC | E86DE5                    | 	call	printInt
  4266 | 00001EDF | 83C402                    | 	add	sp, 2
  4267 |          |                           | 	; >>>>> Line:	339
  4268 |          |                           | 	; >>>>> printString(", CPU: "); 
  4269 | 00001EE2 | B8[071E]                  | 	mov	ax, L_lab8app_127
  4270 | 00001EE5 | 50                        | 	push	ax
  4271 | 00001EE6 | E83FE5                    | 	call	printString
  4272 | 00001EE9 | 83C402                    | 	add	sp, 2
  4273 |          |                           | 	; >>>>> Line:	340
  4274 |          |                           | 	; >>>>> tmp = (int) (idleCount/max); 
  4275 | 00001EEC | 8B46FA                    | 	mov	ax, word [bp-6]
  4276 | 00001EEF | 31D2                      | 	xor	dx, dx
  4277 | 00001EF1 | F776FE                    | 	div	word [bp-2]
  4278 | 00001EF4 | 8946F8                    | 	mov	word [bp-8], ax
  4279 |          |                           | 	; >>>>> Line:	341
  4280 |          |                           | 	; >>>>> printInt(100-tmp); 
  4281 | 00001EF7 | B86400                    | 	mov	ax, 100
  4282 | 00001EFA | 2B46F8                    | 	sub	ax, word [bp-8]
  4283 | 00001EFD | 50                        | 	push	ax
  4284 | 00001EFE | E84BE5                    | 	call	printInt
  4285 | 00001F01 | 83C402                    | 	add	sp, 2
  4286 |          |                           | 	; >>>>> Line:	342
  4287 |          |                           | 	; >>>>> printString(">\r\n"); 
  4288 | 00001F04 | B8[031E]                  | 	mov	ax, L_lab8app_128
  4289 | 00001F07 | 50                        | 	push	ax
  4290 | 00001F08 | E81DE5                    | 	call	printString
  4291 | 00001F0B | 83C402                    | 	add	sp, 2
  4292 |          |                           | 	; >>>>> Line:	344
  4293 |          |                           | 	; >>>>> YKCtxSwCount = 0; 
  4294 | 00001F0E | C706[6C13]0000            | 	mov	word [YKCtxSwCount], 0
  4295 |          |                           | 	; >>>>> Line:	345
  4296 |          |                           | 	; >>>>> YKIdleCount = 0; 
  4297 | 00001F14 | C706[6E13]0000            | 	mov	word [YKIdleCount], 0
  4298 |          |                           | 	; >>>>> Line:	346
  4299 |          |                           | 	; >>>>> YKExitMutex(); 
  4300 | 00001F1A | E86FEA                    | 	call	YKExitMutex
  4301 |          |                           | L_lab8app_132:
  4302 | 00001F1D | EB97                      | 	jmp	L_lab8app_131
  4303 |          |                           | L_lab8app_133:
  4304 | 00001F1F | 89EC                      | 	mov	sp, bp
  4305 | 00001F21 | 5D                        | 	pop	bp
  4306 | 00001F22 | C3                        | 	ret
  4307 |          |                           | L_lab8app_129:
  4308 | 00001F23 | 55                        | 	push	bp
  4309 | 00001F24 | 89E5                      | 	mov	bp, sp
  4310 | 00001F26 | 83EC08                    | 	sub	sp, 8
  4311 | 00001F29 | E91BFF                    | 	jmp	L_lab8app_130
  4312 |          |                           | L_lab8app_135:
  4313 | 00001F2C | 5053656D00                | 	DB	"PSem",0
  4314 | 00001F31 | 90                        | 	ALIGN	2
  4315 |          |                           | main:
  4316 |          |                           | 	; >>>>> Line:	351
  4317 |          |                           | 	; >>>>> { 
  4318 | 00001F32 | EB78                      | 	jmp	L_lab8app_136
  4319 |          |                           | L_lab8app_137:
  4320 |          |                           | 	; >>>>> Line:	352
  4321 |          |                           | 	; >>>>> YKInitialize(); 
  4322 | 00001F34 | E8B5EE                    | 	call	YKInitialize
  4323 |          |                           | 	; >>>>> Line:	353
  4324 |          |                           | 	; >>>>> pieceNext = 0; 
  4325 | 00001F37 | C706[882C]0000            | 	mov	word [pieceNext], 0
  4326 |          |                           | 	; >>>>> Line:	354
  4327 |          |                           | 	; >>>>> cmdNext = 0; 
  4328 | 00001F3D | C706[8A2C]0000            | 	mov	word [cmdNext], 0
  4329 |          |                           | 	; >>>>> Line:	355
  4330 |          |                           | 	; >>>>> rightBlock = 0; 
  4331 | 00001F43 | C706[802C]0000            | 	mov	word [rightBlock], 0
  4332 |          |                           | 	; >>>>> Line:	356
  4333 |          |                           | 	; >>>>> leftBlock = 0; 
  4334 | 00001F49 | C706[822C]0000            | 	mov	word [leftBlock], 0
  4335 |          |                           | 	; >>>>> Line:	357
  4336 |          |                           | 	; >>>>> upperRow = 0; 
  4337 | 00001F4F | C706[842C]0000            | 	mov	word [upperRow], 0
  4338 |          |                           | 	; >>>>> Line:	358
  4339 |          |                           | 	; >>>>> lowerRow = 0; 
  4340 | 00001F55 | C706[862C]0000            | 	mov	word [lowerRow], 0
  4341 |          |                           | 	; >>>>> Line:	359
  4342 |          |                           | 	; >>>>> score = 0; 
  4343 | 00001F5B | C706[8C2C]0000            | 	mov	word [score], 0
  4344 |          |                           | 	; >>>>> Line:	360
  4345 |          |                           | 	; >>>>>  
  4346 | 00001F61 | B80A00                    | 	mov	ax, 10
  4347 | 00001F64 | 50                        | 	push	ax
  4348 | 00001F65 | B8[5220]                  | 	mov	ax, pieceQ
  4349 | 00001F68 | 50                        | 	push	ax
  4350 | 00001F69 | E8B8EC                    | 	call	YKQCreate
  4351 | 00001F6C | 83C404                    | 	add	sp, 4
  4352 | 00001F6F | A3[7A20]                  | 	mov	word [pieceQPtr], ax
  4353 |          |                           | 	; >>>>> Line:	361
  4354 |          |                           | 	; >>>>> cmdQPtr = YKQCreate(cmdQ, 10); 
  4355 | 00001F72 | B80A00                    | 	mov	ax, 10
  4356 | 00001F75 | 50                        | 	push	ax
  4357 | 00001F76 | B8[6620]                  | 	mov	ax, cmdQ
  4358 | 00001F79 | 50                        | 	push	ax
  4359 | 00001F7A | E8A7EC                    | 	call	YKQCreate
  4360 | 00001F7D | 83C404                    | 	add	sp, 4
  4361 | 00001F80 | A3[7C20]                  | 	mov	word [cmdQPtr], ax
  4362 |          |                           | 	; >>>>> Line:	362
  4363 |          |                           | 	; >>>>> SemPtr = YKSemCreate(1, "PSem"); 
  4364 | 00001F83 | B8[2C1F]                  | 	mov	ax, L_lab8app_135
  4365 | 00001F86 | 50                        | 	push	ax
  4366 | 00001F87 | B80100                    | 	mov	ax, 1
  4367 | 00001F8A | 50                        | 	push	ax
  4368 | 00001F8B | E8F0F0                    | 	call	YKSemCreate
  4369 | 00001F8E | 83C404                    | 	add	sp, 4
  4370 | 00001F91 | A3[7E20]                  | 	mov	word [SemPtr], ax
  4371 |          |                           | 	; >>>>> Line:	363
  4372 |          |                           | 	; >>>>> YKNewTask(SMStatTask, (void *) &SMStatTaskStk[512], 0); 
  4373 | 00001F94 | 30C0                      | 	xor	al, al
  4374 | 00001F96 | 50                        | 	push	ax
  4375 | 00001F97 | B8[802C]                  | 	mov	ax, (SMStatTaskStk+1024)
  4376 | 00001F9A | 50                        | 	push	ax
  4377 | 00001F9B | B8[441E]                  | 	mov	ax, SMStatTask
  4378 | 00001F9E | 50                        | 	push	ax
  4379 | 00001F9F | E8E6EE                    | 	call	YKNewTask
  4380 | 00001FA2 | 83C406                    | 	add	sp, 6
  4381 |          |                           | 	; >>>>> Line:	364
  4382 |          |                           | 	; >>>>> YKRun(); 
  4383 | 00001FA5 | E8D0EF                    | 	call	YKRun
  4384 | 00001FA8 | 89EC                      | 	mov	sp, bp
  4385 | 00001FAA | 5D                        | 	pop	bp
  4386 | 00001FAB | C3                        | 	ret
  4387 |          |                           | L_lab8app_136:
  4388 | 00001FAC | 55                        | 	push	bp
  4389 | 00001FAD | 89E5                      | 	mov	bp, sp
  4390 | 00001FAF | EB83                      | 	jmp	L_lab8app_137
  4391 | 00001FB1 | 90                        | 	ALIGN	2
  4392 |          |                           | pieceArray:
  4393 | 00001FB2 | 00<rept>                  | 	TIMES	80 db 0
  4394 |          |                           | cmdArray:
  4395 | 00002002 | 00<rept>                  | 	TIMES	80 db 0
  4396 |          |                           | pieceQ:
  4397 | 00002052 | 00<rept>                  | 	TIMES	20 db 0
  4398 |          |                           | cmdQ:
  4399 | 00002066 | 00<rept>                  | 	TIMES	20 db 0
  4400 |          |                           | pieceQPtr:
  4401 | 0000207A | 00<rept>                  | 	TIMES	2 db 0
  4402 |          |                           | cmdQPtr:
  4403 | 0000207C | 00<rept>                  | 	TIMES	2 db 0
  4404 |          |                           | SemPtr:
  4405 | 0000207E | 00<rept>                  | 	TIMES	2 db 0
  4406 |          |                           | SMcmdTaskStk:
  4407 | 00002080 | 00<rept>                  | 	TIMES	1024 db 0
  4408 |          |                           | SMpieceTaskStk:
  4409 | 00002480 | 00<rept>                  | 	TIMES	1024 db 0
  4410 |          |                           | SMStatTaskStk:
  4411 | 00002880 | 00<rept>                  | 	TIMES	1024 db 0
  4412 |          |                           | rightBlock:
  4413 | 00002C80 | 00<rept>                  | 	TIMES	2 db 0
  4414 |          |                           | leftBlock:
  4415 | 00002C82 | 00<rept>                  | 	TIMES	2 db 0
  4416 |          |                           | upperRow:
  4417 | 00002C84 | 00<rept>                  | 	TIMES	2 db 0
  4418 |          |                           | lowerRow:
  4419 | 00002C86 | 00<rept>                  | 	TIMES	2 db 0
  4420 |          |                           | pieceNext:
  4421 | 00002C88 | 00<rept>                  | 	TIMES	2 db 0
  4422 |          |                           | cmdNext:
  4423 | 00002C8A | 00<rept>                  | 	TIMES	2 db 0
  4424 |          |                           | score:
  4425 | 00002C8C | 00<rept>                  | 	TIMES	2 db 0
  4426 |          |                           | tmpCmd:
  4427 | 00002C8E | 00<rept>                  | 	TIMES	8 db 0
